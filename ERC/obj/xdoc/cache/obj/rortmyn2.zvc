id: ERC.Net
language: CSharp
name:
  Default: ERC.Net
qualifiedName:
  Default: ERC.Net
type: Assembly
modifiers: {}
items:
- id: ERC
  commentId: N:ERC
  language: CSharp
  name:
    CSharp: ERC
    VB: ERC
  nameWithType:
    CSharp: ERC
    VB: ERC
  qualifiedName:
    CSharp: ERC
    VB: ERC
  type: Namespace
  assemblies:
  - ERC.Net
  modifiers: {}
  items:
  - id: ERC.DisplayOutput
    commentId: T:ERC.DisplayOutput
    language: CSharp
    name:
      CSharp: DisplayOutput
      VB: DisplayOutput
    nameWithType:
      CSharp: DisplayOutput
      VB: DisplayOutput
    qualifiedName:
      CSharp: ERC.DisplayOutput
      VB: ERC.DisplayOutput
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC
    source:
      id: DisplayOutput
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
      startLine: 12
    summary: 'Provides output in various human readable formats of data from the library. '
    example: []
    syntax:
      content:
        CSharp: public static class DisplayOutput
        VB: Public Module DisplayOutput
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ERC.DisplayOutput.WriteToFile(System.String,System.String,System.String,System.Collections.Generic.List{System.String})
      commentId: M:ERC.DisplayOutput.WriteToFile(System.String,System.String,System.String,System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: WriteToFile(String, String, String, List<String>)
        VB: WriteToFile(String, String, String, List(Of String))
      nameWithType:
        CSharp: DisplayOutput.WriteToFile(String, String, String, List<String>)
        VB: DisplayOutput.WriteToFile(String, String, String, List(Of String))
      qualifiedName:
        CSharp: ERC.DisplayOutput.WriteToFile(System.String, System.String, System.String, System.Collections.Generic.List<System.String>)
        VB: ERC.DisplayOutput.WriteToFile(System.String, System.String, System.String, System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: WriteToFile
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 57
      summary: "\nWrites a list of strings to a file. Takes a directory, filename and prefix along with a List of strings.\n"
      example: []
      syntax:
        content:
          CSharp: public static void WriteToFile(string directory, string prefix, string extension, List<string> content)
          VB: Public Shared Sub WriteToFile(directory As String, prefix As String, extension As String, content As List(Of String))
        parameters:
        - id: directory
          type: System.String
          description: The directory to be used
        - id: prefix
          type: System.String
          description: A prefix for the file name e.g. &quot;modules_&quot; or &quot;Pattern_&quot; etc
        - id: extension
          type: System.String
          description: 'The file extension to be used e.g. &quot;.txt&quot; '
        - id: content
          type: System.Collections.Generic.List{System.String}
          description: 'A list of strings to be written to disk '
      overload: ERC.DisplayOutput.WriteToFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.GeneratePattern(System.Int32,ERC.ErcCore,System.Boolean)
      commentId: M:ERC.DisplayOutput.GeneratePattern(System.Int32,ERC.ErcCore,System.Boolean)
      language: CSharp
      name:
        CSharp: GeneratePattern(Int32, ErcCore, Boolean)
        VB: GeneratePattern(Int32, ErcCore, Boolean)
      nameWithType:
        CSharp: DisplayOutput.GeneratePattern(Int32, ErcCore, Boolean)
        VB: DisplayOutput.GeneratePattern(Int32, ErcCore, Boolean)
      qualifiedName:
        CSharp: ERC.DisplayOutput.GeneratePattern(System.Int32, ERC.ErcCore, System.Boolean)
        VB: ERC.DisplayOutput.GeneratePattern(System.Int32, ERC.ErcCore, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GeneratePattern
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 77
      summary: "\nCreates a file in the ErcCore working directory containing a string of non repeating characters. \n"
      example: []
      syntax:
        content:
          CSharp: public static string GeneratePattern(int length, ErcCore core, bool extended = false)
          VB: Public Shared Function GeneratePattern(length As Integer, core As ErcCore, extended As Boolean = False) As String
        parameters:
        - id: length
          type: System.Int32
          description: The length of the string to be created
        - id: core
          type: ERC.ErcCore
          description: An ErcCore object
        - id: extended
          type: System.Boolean
          description: A optional boolean specifying whether to use the extended character set. Default is false.
        return:
          type: System.String
          description: Returns a string containing the pattern generated.
      overload: ERC.DisplayOutput.GeneratePattern*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.ListLocalProcesses
      commentId: M:ERC.DisplayOutput.ListLocalProcesses
      language: CSharp
      name:
        CSharp: ListLocalProcesses()
        VB: ListLocalProcesses()
      nameWithType:
        CSharp: DisplayOutput.ListLocalProcesses()
        VB: DisplayOutput.ListLocalProcesses()
      qualifiedName:
        CSharp: ERC.DisplayOutput.ListLocalProcesses()
        VB: ERC.DisplayOutput.ListLocalProcesses()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ListLocalProcesses
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 151
      summary: "\nLists usable processes running on the local machine.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ListLocalProcesses()
          VB: Public Shared Function ListLocalProcesses As String
        return:
          type: System.String
          description: A string containing details of processes running on the local machine.
      overload: ERC.DisplayOutput.ListLocalProcesses*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.ListRemoteProcesses(System.String)
      commentId: M:ERC.DisplayOutput.ListRemoteProcesses(System.String)
      language: CSharp
      name:
        CSharp: ListRemoteProcesses(String)
        VB: ListRemoteProcesses(String)
      nameWithType:
        CSharp: DisplayOutput.ListRemoteProcesses(String)
        VB: DisplayOutput.ListRemoteProcesses(String)
      qualifiedName:
        CSharp: ERC.DisplayOutput.ListRemoteProcesses(System.String)
        VB: ERC.DisplayOutput.ListRemoteProcesses(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ListRemoteProcesses
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 173
      summary: "\nLists usable processes running on the remote machine.\n"
      example: []
      syntax:
        content:
          CSharp: public static string ListRemoteProcesses(string machineName)
          VB: Public Shared Function ListRemoteProcesses(machineName As String) As String
        parameters:
        - id: machineName
          type: System.String
        return:
          type: System.String
          description: A string containing details of processes running on the remote machine.
      overload: ERC.DisplayOutput.ListRemoteProcesses*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.DisplayProcessInfo(ERC.ProcessInfo,System.Boolean)
      commentId: M:ERC.DisplayOutput.DisplayProcessInfo(ERC.ProcessInfo,System.Boolean)
      language: CSharp
      name:
        CSharp: DisplayProcessInfo(ProcessInfo, Boolean)
        VB: DisplayProcessInfo(ProcessInfo, Boolean)
      nameWithType:
        CSharp: DisplayOutput.DisplayProcessInfo(ProcessInfo, Boolean)
        VB: DisplayOutput.DisplayProcessInfo(ProcessInfo, Boolean)
      qualifiedName:
        CSharp: ERC.DisplayOutput.DisplayProcessInfo(ERC.ProcessInfo, System.Boolean)
        VB: ERC.DisplayOutput.DisplayProcessInfo(ERC.ProcessInfo, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: DisplayProcessInfo
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 197
      summary: "\nDisplays information related to the provided ProcessInfo object.\n"
      example: []
      syntax:
        content:
          CSharp: public static string DisplayProcessInfo(ProcessInfo info, bool outputToFile = true)
          VB: Public Shared Function DisplayProcessInfo(info As ProcessInfo, outputToFile As Boolean = True) As String
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The ProcessInfo object of which the module information will be displayed
        - id: outputToFile
          type: System.Boolean
          description: Set to false to surpress file output.
        return:
          type: System.String
          description: ''
      overload: ERC.DisplayOutput.DisplayProcessInfo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.DisplayThreadInfo(ERC.ProcessInfo,System.Boolean)
      commentId: M:ERC.DisplayOutput.DisplayThreadInfo(ERC.ProcessInfo,System.Boolean)
      language: CSharp
      name:
        CSharp: DisplayThreadInfo(ProcessInfo, Boolean)
        VB: DisplayThreadInfo(ProcessInfo, Boolean)
      nameWithType:
        CSharp: DisplayOutput.DisplayThreadInfo(ProcessInfo, Boolean)
        VB: DisplayOutput.DisplayThreadInfo(ProcessInfo, Boolean)
      qualifiedName:
        CSharp: ERC.DisplayOutput.DisplayThreadInfo(ERC.ProcessInfo, System.Boolean)
        VB: ERC.DisplayOutput.DisplayThreadInfo(ERC.ProcessInfo, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: DisplayThreadInfo
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 223
      summary: "\nDisplays information about all threads related to a specific process.\n"
      example: []
      syntax:
        content:
          CSharp: public static string DisplayThreadInfo(ProcessInfo info, bool outputToFile = true)
          VB: Public Shared Function DisplayThreadInfo(info As ProcessInfo, outputToFile As Boolean = True) As String
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: ''
        - id: outputToFile
          type: System.Boolean
          description: ''
        return:
          type: System.String
          description: ''
      overload: ERC.DisplayOutput.DisplayThreadInfo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.GenerateModuleInfoTable(ERC.ProcessInfo,System.Boolean)
      commentId: M:ERC.DisplayOutput.GenerateModuleInfoTable(ERC.ProcessInfo,System.Boolean)
      language: CSharp
      name:
        CSharp: GenerateModuleInfoTable(ProcessInfo, Boolean)
        VB: GenerateModuleInfoTable(ProcessInfo, Boolean)
      nameWithType:
        CSharp: DisplayOutput.GenerateModuleInfoTable(ProcessInfo, Boolean)
        VB: DisplayOutput.GenerateModuleInfoTable(ProcessInfo, Boolean)
      qualifiedName:
        CSharp: ERC.DisplayOutput.GenerateModuleInfoTable(ERC.ProcessInfo, System.Boolean)
        VB: ERC.DisplayOutput.GenerateModuleInfoTable(ERC.ProcessInfo, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GenerateModuleInfoTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 383
      summary: "\nAquires filename and writes out all module data to the current working directory. Requires a Process_Info object to be passed as a parameter.\n"
      example: []
      syntax:
        content:
          CSharp: public static string GenerateModuleInfoTable(ProcessInfo info, bool outputToFile = true)
          VB: Public Shared Function GenerateModuleInfoTable(info As ProcessInfo, outputToFile As Boolean = True) As String
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The ProcessInfo object of which the module information will be displayed
        - id: outputToFile
          type: System.Boolean
          description: Set to false to surpress file output.
        return:
          type: System.String
          description: Returns a formatted string of all results
      overload: ERC.DisplayOutput.GenerateModuleInfoTable*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.SearchMemory(ERC.ProcessInfo,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Byte[],System.String)
      commentId: M:ERC.DisplayOutput.SearchMemory(ERC.ProcessInfo,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Byte[],System.String)
      language: CSharp
      name:
        CSharp: SearchMemory(ProcessInfo, Int32, String, Boolean, Boolean, Boolean, Boolean, Boolean, Byte[], String)
        VB: SearchMemory(ProcessInfo, Int32, String, Boolean, Boolean, Boolean, Boolean, Boolean, Byte(), String)
      nameWithType:
        CSharp: DisplayOutput.SearchMemory(ProcessInfo, Int32, String, Boolean, Boolean, Boolean, Boolean, Boolean, Byte[], String)
        VB: DisplayOutput.SearchMemory(ProcessInfo, Int32, String, Boolean, Boolean, Boolean, Boolean, Boolean, Byte(), String)
      qualifiedName:
        CSharp: ERC.DisplayOutput.SearchMemory(ERC.ProcessInfo, System.Int32, System.String, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Byte[], System.String)
        VB: ERC.DisplayOutput.SearchMemory(ERC.ProcessInfo, System.Int32, System.String, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Byte(), System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SearchMemory
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 410
      summary: "\nSearches the memory of a process and it&apos;s loaded modules for a string or byte combination.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> SearchMemory(ProcessInfo info, int searchType, string searchString, bool aslr = false, bool safeseh = false, bool rebase = false, bool nxcompat = false, bool osdll = false, byte[] unwantedBytes = null, string protection = "exec")
          VB: Public Shared Function SearchMemory(info As ProcessInfo, searchType As Integer, searchString As String, aslr As Boolean = False, safeseh As Boolean = False, rebase As Boolean = False, nxcompat As Boolean = False, osdll As Boolean = False, unwantedBytes As Byte() = Nothing, protection As String = "exec") As List(Of String)
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The processInfo object for the process
        - id: searchType
          type: System.Int32
          description: The type of data to be searched for.
        - id: searchString
          type: System.String
          description: The string to search for.
        - id: aslr
          type: System.Boolean
          description: Remove ASLR libraries.
        - id: safeseh
          type: System.Boolean
          description: Remove SafeSEH libraries.
        - id: rebase
          type: System.Boolean
          description: Remove rebasable libraries.
        - id: nxcompat
          type: System.Boolean
          description: Remove NXCompat libraries.
        - id: osdll
          type: System.Boolean
          description: Remove OS Dlls.
        - id: unwantedBytes
          type: System.Byte[]
          description: Addresses containing values in this byte array will be ignored.
        - id: protection
          type: System.String
          description: String containing protection level returned pointers will.
        return:
          type: System.Collections.Generic.List{System.String}
          description: ''
      overload: ERC.DisplayOutput.SearchMemory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.GetSEHJumps(ERC.ProcessInfo,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Byte[],System.String)
      commentId: M:ERC.DisplayOutput.GetSEHJumps(ERC.ProcessInfo,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Byte[],System.String)
      language: CSharp
      name:
        CSharp: GetSEHJumps(ProcessInfo, Boolean, Boolean, Boolean, Boolean, Boolean, Byte[], String)
        VB: GetSEHJumps(ProcessInfo, Boolean, Boolean, Boolean, Boolean, Boolean, Byte(), String)
      nameWithType:
        CSharp: DisplayOutput.GetSEHJumps(ProcessInfo, Boolean, Boolean, Boolean, Boolean, Boolean, Byte[], String)
        VB: DisplayOutput.GetSEHJumps(ProcessInfo, Boolean, Boolean, Boolean, Boolean, Boolean, Byte(), String)
      qualifiedName:
        CSharp: ERC.DisplayOutput.GetSEHJumps(ERC.ProcessInfo, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Byte[], System.String)
        VB: ERC.DisplayOutput.GetSEHJumps(ERC.ProcessInfo, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Byte(), System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GetSEHJumps
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 521
      summary: "\nSearches all memory associated with a given process and associated modules for POP X POP X RET instructions. \nPassing a list of module paths or names will exclude those modules from the search. \nSimilar to Search_All_Memory_PPR however provides output in an easily readable format.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> GetSEHJumps(ProcessInfo info, bool aslr = false, bool safeseh = false, bool rebase = false, bool nxcompat = false, bool osdll = false, byte[] unwantedBytes = null, string protection = "exec")
          VB: Public Shared Function GetSEHJumps(info As ProcessInfo, aslr As Boolean = False, safeseh As Boolean = False, rebase As Boolean = False, nxcompat As Boolean = False, osdll As Boolean = False, unwantedBytes As Byte() = Nothing, protection As String = "exec") As List(Of String)
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The ProcessInfo object which will be searched for POP POP RET instructions.
        - id: aslr
          type: System.Boolean
          description: Remove ASLR libraries.
        - id: safeseh
          type: System.Boolean
          description: Remove SafeSEH libraries.
        - id: rebase
          type: System.Boolean
          description: Remove rebasable libraries.
        - id: nxcompat
          type: System.Boolean
          description: Remove NXCompat libraries.
        - id: osdll
          type: System.Boolean
          description: Remove OS Dlls.
        - id: unwantedBytes
          type: System.Byte[]
          description: Addresses containing values in this byte array will be ignored.
        - id: protection
          type: System.String
          description: String containing protection level returned pointers will.
        return:
          type: System.Collections.Generic.List{System.String}
          description: Returns an ErcResult containing a list of strings detailing the pointers, opcodes and base files of suitable instruction sets.
      overload: ERC.DisplayOutput.GetSEHJumps*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.GetSEHJumps(ERC.ProcessInfo,System.Byte[],System.Collections.Generic.List{System.String})
      commentId: M:ERC.DisplayOutput.GetSEHJumps(ERC.ProcessInfo,System.Byte[],System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GetSEHJumps(ProcessInfo, Byte[], List<String>)
        VB: GetSEHJumps(ProcessInfo, Byte(), List(Of String))
      nameWithType:
        CSharp: DisplayOutput.GetSEHJumps(ProcessInfo, Byte[], List<String>)
        VB: DisplayOutput.GetSEHJumps(ProcessInfo, Byte(), List(Of String))
      qualifiedName:
        CSharp: ERC.DisplayOutput.GetSEHJumps(ERC.ProcessInfo, System.Byte[], System.Collections.Generic.List<System.String>)
        VB: ERC.DisplayOutput.GetSEHJumps(ERC.ProcessInfo, System.Byte(), System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GetSEHJumps
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 659
      summary: "\nSearches all memory associated with a given process and associated modules for POP X POP X RET instructions. \nPassing a list of module paths or names will exclude those modules from the search. \nSimilar to Search_All_Memory_PPR however provides output in an easily readable format.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> GetSEHJumps(ProcessInfo info, byte[] ptrsToExclude, List<string> excludes = null)
          VB: Public Shared Function GetSEHJumps(info As ProcessInfo, ptrsToExclude As Byte(), excludes As List(Of String) = Nothing) As List(Of String)
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The ProcessInfo object which will be searched for POP POP RET instructions
        - id: ptrsToExclude
          type: System.Byte[]
          description: Ptrs containing these byte values will be discarded.
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: Modules to be ignored when searching for the instruction sets.
        return:
          type: System.Collections.Generic.List{System.String}
          description: Returns an ErcResult containing a list of strings detailing the pointers, opcodes and base files of suitable instruction sets.
      overload: ERC.DisplayOutput.GetSEHJumps*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.GenerateByteArray(ERC.ErcCore,System.Byte[])
      commentId: M:ERC.DisplayOutput.GenerateByteArray(ERC.ErcCore,System.Byte[])
      language: CSharp
      name:
        CSharp: GenerateByteArray(ErcCore, Byte[])
        VB: GenerateByteArray(ErcCore, Byte())
      nameWithType:
        CSharp: DisplayOutput.GenerateByteArray(ErcCore, Byte[])
        VB: DisplayOutput.GenerateByteArray(ErcCore, Byte())
      qualifiedName:
        CSharp: ERC.DisplayOutput.GenerateByteArray(ERC.ErcCore, System.Byte[])
        VB: ERC.DisplayOutput.GenerateByteArray(ERC.ErcCore, System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GenerateByteArray
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 755
      summary: "\nGenerates an array of all possible bytes for use when identifying bad characters. Writes the output to disk in the working directory.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] GenerateByteArray(ErcCore core, byte[] unwantedBytes = null)
          VB: Public Shared Function GenerateByteArray(core As ErcCore, unwantedBytes As Byte() = Nothing) As Byte()
        parameters:
        - id: core
          type: ERC.ErcCore
          description: An ErcCore object
        - id: unwantedBytes
          type: System.Byte[]
          description: An array of bytes to be excluded from the final byte array
        return:
          type: System.Byte[]
          description: Returns a byte array of all possible bytes.
      overload: ERC.DisplayOutput.GenerateByteArray*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.CompareByteArrayToMemoryRegion(ERC.ProcessInfo,System.IntPtr,System.Byte[])
      commentId: M:ERC.DisplayOutput.CompareByteArrayToMemoryRegion(ERC.ProcessInfo,System.IntPtr,System.Byte[])
      language: CSharp
      name:
        CSharp: CompareByteArrayToMemoryRegion(ProcessInfo, IntPtr, Byte[])
        VB: CompareByteArrayToMemoryRegion(ProcessInfo, IntPtr, Byte())
      nameWithType:
        CSharp: DisplayOutput.CompareByteArrayToMemoryRegion(ProcessInfo, IntPtr, Byte[])
        VB: DisplayOutput.CompareByteArrayToMemoryRegion(ProcessInfo, IntPtr, Byte())
      qualifiedName:
        CSharp: ERC.DisplayOutput.CompareByteArrayToMemoryRegion(ERC.ProcessInfo, System.IntPtr, System.Byte[])
        VB: ERC.DisplayOutput.CompareByteArrayToMemoryRegion(ERC.ProcessInfo, System.IntPtr, System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: CompareByteArrayToMemoryRegion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 840
      summary: "\nCompares a the values contained in a memory region to the values in the supplied byte array.\n"
      example: []
      syntax:
        content:
          CSharp: public static string[] CompareByteArrayToMemoryRegion(ProcessInfo info, IntPtr startAddress, byte[] byteArray)
          VB: Public Shared Function CompareByteArrayToMemoryRegion(info As ProcessInfo, startAddress As IntPtr, byteArray As Byte()) As String()
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The processInfo object that contains the memory region.
        - id: startAddress
          type: System.IntPtr
          description: The memory address to start the search at.
        - id: byteArray
          type: System.Byte[]
          description: The byte array the region will be compared against.
        return:
          type: System.String[]
          description: Returns a string detailing differences between the two.
      overload: ERC.DisplayOutput.CompareByteArrayToMemoryRegion*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.GenerateEggHunters(ERC.ErcCore,System.String)
      commentId: M:ERC.DisplayOutput.GenerateEggHunters(ERC.ErcCore,System.String)
      language: CSharp
      name:
        CSharp: GenerateEggHunters(ErcCore, String)
        VB: GenerateEggHunters(ErcCore, String)
      nameWithType:
        CSharp: DisplayOutput.GenerateEggHunters(ErcCore, String)
        VB: DisplayOutput.GenerateEggHunters(ErcCore, String)
      qualifiedName:
        CSharp: ERC.DisplayOutput.GenerateEggHunters(ERC.ErcCore, System.String)
        VB: ERC.DisplayOutput.GenerateEggHunters(ERC.ErcCore, System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GenerateEggHunters
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 901
      summary: "\nGenerates a collection of EggHunter payloads.\n"
      example: []
      syntax:
        content:
          CSharp: public static string GenerateEggHunters(ErcCore core = null, string tag = null)
          VB: Public Shared Function GenerateEggHunters(core As ErcCore = Nothing, tag As String = Nothing) As String
        parameters:
        - id: core
          type: ERC.ErcCore
          description: '(Optional) If an ErcCore object is provided the output will also be written out to the working directory '
        - id: tag
          type: System.String
          description: (Optional) If a tag is provided the payloads will be altered to search for that tag, the default tag is ERCD
        return:
          type: System.String
          description: 'Returns a string containing all EggHunters '
      overload: ERC.DisplayOutput.GenerateEggHunters*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.GenerateFindNRPTable(ERC.ProcessInfo,System.Int32,System.Boolean)
      commentId: M:ERC.DisplayOutput.GenerateFindNRPTable(ERC.ProcessInfo,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: GenerateFindNRPTable(ProcessInfo, Int32, Boolean)
        VB: GenerateFindNRPTable(ProcessInfo, Int32, Boolean)
      nameWithType:
        CSharp: DisplayOutput.GenerateFindNRPTable(ProcessInfo, Int32, Boolean)
        VB: DisplayOutput.GenerateFindNRPTable(ProcessInfo, Int32, Boolean)
      qualifiedName:
        CSharp: ERC.DisplayOutput.GenerateFindNRPTable(ERC.ProcessInfo, System.Int32, System.Boolean)
        VB: ERC.DisplayOutput.GenerateFindNRPTable(ERC.ProcessInfo, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GenerateFindNRPTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 967
      summary: "\nSearches the memory of a process for a non repeating pattern.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> GenerateFindNRPTable(ProcessInfo info, int searchType = 0, bool extended = false)
          VB: Public Shared Function GenerateFindNRPTable(info As ProcessInfo, searchType As Integer = 0, extended As Boolean = False) As List(Of String)
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The ProcessInfo object of the process to be searched
        - id: searchType
          type: System.Int32
          description: 'Integer specifiying the format of the string: 0 = search term is in bytes\n1 = search term is in unicode\n2 = search term is in ASCII\n3 = Search term is in UTF8\n4 = Search term is in UTF7\n5 = Search term is in UTF32'
        - id: extended
          type: System.Boolean
          description: Whether the extended character range is to be used when searching for the non repeating pattern
        return:
          type: System.Collections.Generic.List{System.String}
          description: Returns a List of strings containing the locations the repeating pattern was identified
      overload: ERC.DisplayOutput.GenerateFindNRPTable*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.RopChainGadgets32(ERC.Utilities.RopChainGenerator32)
      commentId: M:ERC.DisplayOutput.RopChainGadgets32(ERC.Utilities.RopChainGenerator32)
      language: CSharp
      name:
        CSharp: RopChainGadgets32(RopChainGenerator32)
        VB: RopChainGadgets32(RopChainGenerator32)
      nameWithType:
        CSharp: DisplayOutput.RopChainGadgets32(RopChainGenerator32)
        VB: DisplayOutput.RopChainGadgets32(RopChainGenerator32)
      qualifiedName:
        CSharp: ERC.DisplayOutput.RopChainGadgets32(ERC.Utilities.RopChainGenerator32)
        VB: ERC.DisplayOutput.RopChainGadgets32(ERC.Utilities.RopChainGenerator32)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: RopChainGadgets32
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 1045
      summary: "\nProduces output files containing information about the associated ROP chain, produces files containing ROP gadgets and the associated ROP chain.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> RopChainGadgets32(RopChainGenerator32 rcg)
          VB: Public Shared Function RopChainGadgets32(rcg As RopChainGenerator32) As List(Of String)
        parameters:
        - id: rcg
          type: ERC.Utilities.RopChainGenerator32
          description: The ROP chain generator object
        return:
          type: System.Collections.Generic.List{System.String}
          description: Returns a List of strings
      overload: ERC.DisplayOutput.RopChainGadgets32*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.RopChainGadgets64(ERC.Utilities.RopChainGenerator64)
      commentId: M:ERC.DisplayOutput.RopChainGadgets64(ERC.Utilities.RopChainGenerator64)
      language: CSharp
      name:
        CSharp: RopChainGadgets64(RopChainGenerator64)
        VB: RopChainGadgets64(RopChainGenerator64)
      nameWithType:
        CSharp: DisplayOutput.RopChainGadgets64(RopChainGenerator64)
        VB: DisplayOutput.RopChainGadgets64(RopChainGenerator64)
      qualifiedName:
        CSharp: ERC.DisplayOutput.RopChainGadgets64(ERC.Utilities.RopChainGenerator64)
        VB: ERC.DisplayOutput.RopChainGadgets64(ERC.Utilities.RopChainGenerator64)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: RopChainGadgets64
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 1675
      summary: "\nProduces output files containing information about the associated ROP chain, produces files containing ROP gadgets and the associated ROP chain.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> RopChainGadgets64(RopChainGenerator64 rcg)
          VB: Public Shared Function RopChainGadgets64(rcg As RopChainGenerator64) As List(Of String)
        parameters:
        - id: rcg
          type: ERC.Utilities.RopChainGenerator64
          description: The ROP chain generator object
        return:
          type: System.Collections.Generic.List{System.String}
          description: Returns a List of strings
      overload: ERC.DisplayOutput.RopChainGadgets64*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.AssembleOpcodes(System.String[],System.UInt32)
      commentId: M:ERC.DisplayOutput.AssembleOpcodes(System.String[],System.UInt32)
      language: CSharp
      name:
        CSharp: AssembleOpcodes(String[], UInt32)
        VB: AssembleOpcodes(String(), UInt32)
      nameWithType:
        CSharp: DisplayOutput.AssembleOpcodes(String[], UInt32)
        VB: DisplayOutput.AssembleOpcodes(String(), UInt32)
      qualifiedName:
        CSharp: ERC.DisplayOutput.AssembleOpcodes(System.String[], System.UInt32)
        VB: ERC.DisplayOutput.AssembleOpcodes(System.String(), System.UInt32)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: AssembleOpcodes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 2269
      summary: "\nConverts a collection of instructions into the associated opcodes.\n"
      example: []
      syntax:
        content:
          CSharp: public static string[] AssembleOpcodes(string[] instructions, uint machine)
          VB: Public Shared Function AssembleOpcodes(instructions As String(), machine As UInteger) As String()
        parameters:
        - id: instructions
          type: System.String[]
          description: An array containing either x86 or x64 instructions.
        - id: machine
          type: System.UInt32
          description: Uint representing the machine type (x86 = 0, x64 = 1)
        return:
          type: System.String[]
          description: Returns null if the method fails.
      overload: ERC.DisplayOutput.AssembleOpcodes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.AssembleOpcodes(System.String[],ERC.MachineType)
      commentId: M:ERC.DisplayOutput.AssembleOpcodes(System.String[],ERC.MachineType)
      language: CSharp
      name:
        CSharp: AssembleOpcodes(String[], MachineType)
        VB: AssembleOpcodes(String(), MachineType)
      nameWithType:
        CSharp: DisplayOutput.AssembleOpcodes(String[], MachineType)
        VB: DisplayOutput.AssembleOpcodes(String(), MachineType)
      qualifiedName:
        CSharp: ERC.DisplayOutput.AssembleOpcodes(System.String[], ERC.MachineType)
        VB: ERC.DisplayOutput.AssembleOpcodes(System.String(), ERC.MachineType)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: AssembleOpcodes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 2302
      summary: "\nConverts a collection of instructions into the associated opcodes.\n"
      example: []
      syntax:
        content:
          CSharp: public static string[] AssembleOpcodes(string[] instructions, MachineType machine)
          VB: Public Shared Function AssembleOpcodes(instructions As String(), machine As MachineType) As String()
        parameters:
        - id: instructions
          type: System.String[]
          description: An array containing either x86 or x64 instructions.
        - id: machine
          type: ERC.MachineType
          description: MachineType of the instruction set to be assembled.
        return:
          type: System.String[]
          description: Returns null if the method fails.
      overload: ERC.DisplayOutput.AssembleOpcodes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.DisassembleOpcodes(System.Byte[],System.UInt32)
      commentId: M:ERC.DisplayOutput.DisassembleOpcodes(System.Byte[],System.UInt32)
      language: CSharp
      name:
        CSharp: DisassembleOpcodes(Byte[], UInt32)
        VB: DisassembleOpcodes(Byte(), UInt32)
      nameWithType:
        CSharp: DisplayOutput.DisassembleOpcodes(Byte[], UInt32)
        VB: DisplayOutput.DisassembleOpcodes(Byte(), UInt32)
      qualifiedName:
        CSharp: ERC.DisplayOutput.DisassembleOpcodes(System.Byte[], System.UInt32)
        VB: ERC.DisplayOutput.DisassembleOpcodes(System.Byte(), System.UInt32)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: DisassembleOpcodes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 2328
      summary: "\nConverts a collection of opcodes into the associated instructions.\n"
      example: []
      syntax:
        content:
          CSharp: public static string[] DisassembleOpcodes(byte[] opcodes, uint machine)
          VB: Public Shared Function DisassembleOpcodes(opcodes As Byte(), machine As UInteger) As String()
        parameters:
        - id: opcodes
          type: System.Byte[]
          description: An array containing either x86 or x64 opcodes.
        - id: machine
          type: System.UInt32
          description: Uint representing the machine type (x86 = 0, x64 = 1)
        return:
          type: System.String[]
          description: Returns null if the method fails.
      overload: ERC.DisplayOutput.DisassembleOpcodes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.DisassembleOpcodes(System.Byte[],ERC.MachineType)
      commentId: M:ERC.DisplayOutput.DisassembleOpcodes(System.Byte[],ERC.MachineType)
      language: CSharp
      name:
        CSharp: DisassembleOpcodes(Byte[], MachineType)
        VB: DisassembleOpcodes(Byte(), MachineType)
      nameWithType:
        CSharp: DisplayOutput.DisassembleOpcodes(Byte[], MachineType)
        VB: DisplayOutput.DisassembleOpcodes(Byte(), MachineType)
      qualifiedName:
        CSharp: ERC.DisplayOutput.DisassembleOpcodes(System.Byte[], ERC.MachineType)
        VB: ERC.DisplayOutput.DisassembleOpcodes(System.Byte(), ERC.MachineType)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: DisassembleOpcodes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 2360
      summary: "\nConverts a collection of opcodes into the associated instructions.\n"
      example: []
      syntax:
        content:
          CSharp: public static string[] DisassembleOpcodes(byte[] opcodes, MachineType machine)
          VB: Public Shared Function DisassembleOpcodes(opcodes As Byte(), machine As MachineType) As String()
        parameters:
        - id: opcodes
          type: System.Byte[]
          description: An array containing either x86 or x64 opcodes.
        - id: machine
          type: ERC.MachineType
          description: MachineType of the instruction set to be assembled.
        return:
          type: System.String[]
          description: Returns null if the method fails.
      overload: ERC.DisplayOutput.DisassembleOpcodes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.DisplayOutput.DumpMemory(ERC.ProcessInfo,System.IntPtr,System.Int32)
      commentId: M:ERC.DisplayOutput.DumpMemory(ERC.ProcessInfo,System.IntPtr,System.Int32)
      language: CSharp
      name:
        CSharp: DumpMemory(ProcessInfo, IntPtr, Int32)
        VB: DumpMemory(ProcessInfo, IntPtr, Int32)
      nameWithType:
        CSharp: DisplayOutput.DumpMemory(ProcessInfo, IntPtr, Int32)
        VB: DisplayOutput.DumpMemory(ProcessInfo, IntPtr, Int32)
      qualifiedName:
        CSharp: ERC.DisplayOutput.DumpMemory(ERC.ProcessInfo, System.IntPtr, System.Int32)
        VB: ERC.DisplayOutput.DumpMemory(ERC.ProcessInfo, System.IntPtr, System.Int32)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: DumpMemory
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Display_Output.cs
        startLine: 2400
      summary: "\nReads a set of bytes from process memory and provides a string contianing the results.\n"
      example: []
      syntax:
        content:
          CSharp: public static ErcResult<string> DumpMemory(ProcessInfo info, IntPtr startAddress, int length)
          VB: Public Shared Function DumpMemory(info As ProcessInfo, startAddress As IntPtr, length As Integer) As ErcResult(Of String)
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: ProcessInfo object
        - id: startAddress
          type: System.IntPtr
          description: The address to start reading from.
        - id: length
          type: System.Int32
          description: The number of bytes to read.
        return:
          type: ERC.ErcResult{System.String}
          description: A string containing the bytes read from memroy
      overload: ERC.DisplayOutput.DumpMemory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ERC.ERCException
    commentId: T:ERC.ERCException
    language: CSharp
    name:
      CSharp: ERCException
      VB: ERCException
    nameWithType:
      CSharp: ERCException
      VB: ERCException
    qualifiedName:
      CSharp: ERC.ERCException
      VB: ERC.ERCException
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC
    source:
      id: ERCException
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERCException.cs
      startLine: 8
    summary: "\nCustom exception handler.\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ERCException : Exception, ISerializable, _Exception
        VB: >-
          <Serializable>

          Public Class ERCException

              Inherits Exception

              Implements ISerializable, _Exception
    inheritance:
    - System.Object
    - System.Exception
    implements:
    - System.Runtime.Serialization.ISerializable
    - System.Runtime.InteropServices._Exception
    inheritedMembers:
    - System.Exception.GetBaseException
    - System.Exception.ToString
    - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    - System.Exception.GetType
    - System.Exception.Message
    - System.Exception.Data
    - System.Exception.InnerException
    - System.Exception.TargetSite
    - System.Exception.StackTrace
    - System.Exception.HelpLink
    - System.Exception.Source
    - System.Exception.HResult
    - System.Exception.SerializeObjectState
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.ERCException.#ctor(System.String)
      commentId: M:ERC.ERCException.#ctor(System.String)
      language: CSharp
      name:
        CSharp: ERCException(String)
        VB: ERCException(String)
      nameWithType:
        CSharp: ERCException.ERCException(String)
        VB: ERCException.ERCException(String)
      qualifiedName:
        CSharp: ERC.ERCException.ERCException(System.String)
        VB: ERC.ERCException.ERCException(System.String)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERCException.cs
        startLine: 15
      summary: "\nConstructor for the ERCException class.\n"
      example: []
      syntax:
        content:
          CSharp: public ERCException(string message)
          VB: Public Sub New(message As String)
        parameters:
        - id: message
          type: System.String
          description: The message associated with the Exception
      overload: ERC.ERCException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ERCException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      commentId: M:ERC.ERCException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
      language: CSharp
      name:
        CSharp: ERCException(SerializationInfo, StreamingContext)
        VB: ERCException(SerializationInfo, StreamingContext)
      nameWithType:
        CSharp: ERCException.ERCException(SerializationInfo, StreamingContext)
        VB: ERCException.ERCException(SerializationInfo, StreamingContext)
      qualifiedName:
        CSharp: ERC.ERCException.ERCException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
        VB: ERC.ERCException.ERCException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERCException.cs
        startLine: 24
      summary: "\nCreates a serializable exception.\n"
      example: []
      syntax:
        content:
          CSharp: protected ERCException(SerializationInfo info, StreamingContext ctxt)
          VB: Protected Sub New(info As SerializationInfo, ctxt As StreamingContext)
        parameters:
        - id: info
          type: System.Runtime.Serialization.SerializationInfo
          description: Stores all the data needed to serialize or deserialize an object.
        - id: ctxt
          type: System.Runtime.Serialization.StreamingContext
          description: Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.
      overload: ERC.ERCException.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: ERC.ErcCore
    commentId: T:ERC.ErcCore
    language: CSharp
    name:
      CSharp: ErcCore
      VB: ErcCore
    nameWithType:
      CSharp: ErcCore
      VB: ErcCore
    qualifiedName:
      CSharp: ERC.ErcCore
      VB: ERC.ErcCore
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC
    source:
      id: ErcCore
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 15
    summary: "\nA single instance of this object should be instantiated at a minimum. It is used for storing global variables such as the working directory etc.\n"
    example: []
    syntax:
      content:
        CSharp: public class ErcCore
        VB: Public Class ErcCore
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.ErcCore.ErcVersion
      commentId: P:ERC.ErcCore.ErcVersion
      language: CSharp
      name:
        CSharp: ErcVersion
        VB: ErcVersion
      nameWithType:
        CSharp: ErcCore.ErcVersion
        VB: ErcCore.ErcVersion
      qualifiedName:
        CSharp: ERC.ErcCore.ErcVersion
        VB: ERC.ErcCore.ErcVersion
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ErcVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 21
      summary: "\nThe current version of the ERC.Net library\n"
      example: []
      syntax:
        content:
          CSharp: public string ErcVersion { get; }
          VB: Public ReadOnly Property ErcVersion As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ErcCore.ErcVersion*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ErcCore.WorkingDirectory
      commentId: P:ERC.ErcCore.WorkingDirectory
      language: CSharp
      name:
        CSharp: WorkingDirectory
        VB: WorkingDirectory
      nameWithType:
        CSharp: ErcCore.WorkingDirectory
        VB: ErcCore.WorkingDirectory
      qualifiedName:
        CSharp: ERC.ErcCore.WorkingDirectory
        VB: ERC.ErcCore.WorkingDirectory
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: WorkingDirectory
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 25
      summary: "\nThe directory where output files will be saved.\n"
      example: []
      syntax:
        content:
          CSharp: public string WorkingDirectory { get; }
          VB: Public ReadOnly Property WorkingDirectory As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ErcCore.WorkingDirectory*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ErcCore.Author
      commentId: P:ERC.ErcCore.Author
      language: CSharp
      name:
        CSharp: Author
        VB: Author
      nameWithType:
        CSharp: ErcCore.Author
        VB: ErcCore.Author
      qualifiedName:
        CSharp: ERC.ErcCore.Author
        VB: ERC.ErcCore.Author
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: Author
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 29
      summary: "\nThe Author to be credited in output files.\n"
      example: []
      syntax:
        content:
          CSharp: public string Author { get; set; }
          VB: Public Property Author As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ErcCore.Author*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.ErcCore.SystemErrorLogPath
      commentId: P:ERC.ErcCore.SystemErrorLogPath
      language: CSharp
      name:
        CSharp: SystemErrorLogPath
        VB: SystemErrorLogPath
      nameWithType:
        CSharp: ErcCore.SystemErrorLogPath
        VB: ErcCore.SystemErrorLogPath
      qualifiedName:
        CSharp: ERC.ErcCore.SystemErrorLogPath
        VB: ERC.ErcCore.SystemErrorLogPath
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SystemErrorLogPath
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 37
      summary: "\nPath where error details should be logged.\n"
      example: []
      syntax:
        content:
          CSharp: public string SystemErrorLogPath { get; set; }
          VB: Public Property SystemErrorLogPath As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ErcCore.SystemErrorLogPath*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.ErcCore.PatternStandardPath
      commentId: P:ERC.ErcCore.PatternStandardPath
      language: CSharp
      name:
        CSharp: PatternStandardPath
        VB: PatternStandardPath
      nameWithType:
        CSharp: ErcCore.PatternStandardPath
        VB: ErcCore.PatternStandardPath
      qualifiedName:
        CSharp: ERC.ErcCore.PatternStandardPath
        VB: ERC.ErcCore.PatternStandardPath
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: PatternStandardPath
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 41
      summary: "\nPath to the file containing the standard pattern to be used.\n"
      example: []
      syntax:
        content:
          CSharp: public string PatternStandardPath { get; set; }
          VB: Public Property PatternStandardPath As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ErcCore.PatternStandardPath*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.ErcCore.PatternExtendedPath
      commentId: P:ERC.ErcCore.PatternExtendedPath
      language: CSharp
      name:
        CSharp: PatternExtendedPath
        VB: PatternExtendedPath
      nameWithType:
        CSharp: ErcCore.PatternExtendedPath
        VB: ErcCore.PatternExtendedPath
      qualifiedName:
        CSharp: ERC.ErcCore.PatternExtendedPath
        VB: ERC.ErcCore.PatternExtendedPath
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: PatternExtendedPath
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 45
      summary: "\nPath to the file containing the extended pattern to be used.\n"
      example: []
      syntax:
        content:
          CSharp: public string PatternExtendedPath { get; set; }
          VB: Public Property PatternExtendedPath As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ErcCore.PatternExtendedPath*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
      commentId: M:ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
      language: CSharp
      name:
        CSharp: GetHandleInformation(IntPtr, out UInt32)
        VB: GetHandleInformation(IntPtr, ByRef UInt32)
      nameWithType:
        CSharp: ErcCore.GetHandleInformation(IntPtr, out UInt32)
        VB: ErcCore.GetHandleInformation(IntPtr, ByRef UInt32)
      qualifiedName:
        CSharp: ERC.ErcCore.GetHandleInformation(System.IntPtr, out System.UInt32)
        VB: ERC.ErcCore.GetHandleInformation(System.IntPtr, ByRef System.UInt32)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        path: ERC.Net
        isExternal: true
      summary: "\nRetrieves certain properties of an object handle.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool GetHandleInformation(IntPtr hObject, out uint lpdwFlags)
          VB: Public Shared Function GetHandleInformation(hObject As IntPtr, ByRef lpdwFlags As UInteger) As Boolean
        parameters:
        - id: hObject
          type: System.IntPtr
          description: A handle to an object whose information is to be retrieved.
        - id: lpdwFlags
          type: System.UInt32
          description: A pointer to a variable that receives a set of bit flags that specify properties of the object handle or 0. The following values are defined.
        return:
          type: System.Boolean
          description: If the function succeeds, the return value is true.
      overload: ERC.ErcCore.GetHandleInformation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.ErcCore.#ctor
      commentId: M:ERC.ErcCore.#ctor
      language: CSharp
      name:
        CSharp: ErcCore()
        VB: ErcCore()
      nameWithType:
        CSharp: ErcCore.ErcCore()
        VB: ErcCore.ErcCore()
      qualifiedName:
        CSharp: ERC.ErcCore.ErcCore()
        VB: ERC.ErcCore.ErcCore()
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 322
      summary: "\nConstructor.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcCore()
          VB: Public Sub New
      overload: ERC.ErcCore.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcCore.#ctor(ERC.ErcCore)
      commentId: M:ERC.ErcCore.#ctor(ERC.ErcCore)
      language: CSharp
      name:
        CSharp: ErcCore(ErcCore)
        VB: ErcCore(ErcCore)
      nameWithType:
        CSharp: ErcCore.ErcCore(ErcCore)
        VB: ErcCore.ErcCore(ErcCore)
      qualifiedName:
        CSharp: ERC.ErcCore.ErcCore(ERC.ErcCore)
        VB: ERC.ErcCore.ErcCore(ERC.ErcCore)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 430
      summary: "\nConstructor to be used when creating an object that inherits from an ErcCore object.\n"
      example: []
      syntax:
        content:
          CSharp: protected ErcCore(ErcCore parent)
          VB: Protected Sub New(parent As ErcCore)
        parameters:
        - id: parent
          type: ERC.ErcCore
          description: The ErcCore object to be inherited from.
      overload: ERC.ErcCore.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ERC.ErcCore.SetWorkingDirectory(System.String)
      commentId: M:ERC.ErcCore.SetWorkingDirectory(System.String)
      language: CSharp
      name:
        CSharp: SetWorkingDirectory(String)
        VB: SetWorkingDirectory(String)
      nameWithType:
        CSharp: ErcCore.SetWorkingDirectory(String)
        VB: ErcCore.SetWorkingDirectory(String)
      qualifiedName:
        CSharp: ERC.ErcCore.SetWorkingDirectory(System.String)
        VB: ERC.ErcCore.SetWorkingDirectory(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SetWorkingDirectory
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 498
      summary: "\nChanges the working directory in both the XML file and associated ErcCore object\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWorkingDirectory(string path)
          VB: Public Sub SetWorkingDirectory(path As String)
        parameters:
        - id: path
          type: System.String
          description: ''
      overload: ERC.ErcCore.SetWorkingDirectory*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcCore.SetPatternStandardPath(System.String)
      commentId: M:ERC.ErcCore.SetPatternStandardPath(System.String)
      language: CSharp
      name:
        CSharp: SetPatternStandardPath(String)
        VB: SetPatternStandardPath(String)
      nameWithType:
        CSharp: ErcCore.SetPatternStandardPath(String)
        VB: ErcCore.SetPatternStandardPath(String)
      qualifiedName:
        CSharp: ERC.ErcCore.SetPatternStandardPath(System.String)
        VB: ERC.ErcCore.SetPatternStandardPath(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SetPatternStandardPath
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 525
      summary: "\nSets the standard pattern file path. Any pattern can replace the standard pattern when searching however the new pattern must be written to a file and the file path set here.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPatternStandardPath(string path)
          VB: Public Sub SetPatternStandardPath(path As String)
        parameters:
        - id: path
          type: System.String
          description: The filepath of the new standard pattern file
      overload: ERC.ErcCore.SetPatternStandardPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcCore.SetPatternExtendedPath(System.String)
      commentId: M:ERC.ErcCore.SetPatternExtendedPath(System.String)
      language: CSharp
      name:
        CSharp: SetPatternExtendedPath(String)
        VB: SetPatternExtendedPath(String)
      nameWithType:
        CSharp: ErcCore.SetPatternExtendedPath(String)
        VB: ErcCore.SetPatternExtendedPath(String)
      qualifiedName:
        CSharp: ERC.ErcCore.SetPatternExtendedPath(System.String)
        VB: ERC.ErcCore.SetPatternExtendedPath(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SetPatternExtendedPath
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 552
      summary: "\nSets the extended pattern file path. Any pattern can replace the extended pattern when searching however the new pattern must be written to a file and the file path set here.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPatternExtendedPath(string path)
          VB: Public Sub SetPatternExtendedPath(path As String)
        parameters:
        - id: path
          type: System.String
          description: The filepath of the new extended pattern file
      overload: ERC.ErcCore.SetPatternExtendedPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcCore.SetAuthor(System.String)
      commentId: M:ERC.ErcCore.SetAuthor(System.String)
      language: CSharp
      name:
        CSharp: SetAuthor(String)
        VB: SetAuthor(String)
      nameWithType:
        CSharp: ErcCore.SetAuthor(String)
        VB: ErcCore.SetAuthor(String)
      qualifiedName:
        CSharp: ERC.ErcCore.SetAuthor(System.String)
        VB: ERC.ErcCore.SetAuthor(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SetAuthor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 579
      summary: "\nSets the name of the author for use when outputing results to disk.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAuthor(string author)
          VB: Public Sub SetAuthor(author As String)
        parameters:
        - id: author
          type: System.String
          description: String containing the name of the author
      overload: ERC.ErcCore.SetAuthor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcCore.SetErrorFile(System.String)
      commentId: M:ERC.ErcCore.SetErrorFile(System.String)
      language: CSharp
      name:
        CSharp: SetErrorFile(String)
        VB: SetErrorFile(String)
      nameWithType:
        CSharp: ErcCore.SetErrorFile(String)
        VB: ErcCore.SetErrorFile(String)
      qualifiedName:
        CSharp: ERC.ErcCore.SetErrorFile(System.String)
        VB: ERC.ErcCore.SetErrorFile(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SetErrorFile
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 595
      summary: "\nSets the error log file to a user specified filepath. \n"
      example: []
      syntax:
        content:
          CSharp: public void SetErrorFile(string path)
          VB: Public Sub SetErrorFile(path As String)
        parameters:
        - id: path
          type: System.String
          description: The new error log filepath.
      overload: ERC.ErcCore.SetErrorFile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcCore.LogEvent(System.Exception)
      commentId: M:ERC.ErcCore.LogEvent(System.Exception)
      language: CSharp
      name:
        CSharp: LogEvent(Exception)
        VB: LogEvent(Exception)
      nameWithType:
        CSharp: ErcCore.LogEvent(Exception)
        VB: ErcCore.LogEvent(Exception)
      qualifiedName:
        CSharp: ERC.ErcCore.LogEvent(System.Exception)
        VB: ERC.ErcCore.LogEvent(System.Exception)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: LogEvent
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 639
      summary: "\nLogs events to the error log path in the XML file. This file is only appended to and never replaced.\n"
      example: []
      syntax:
        content:
          CSharp: public void LogEvent(Exception e)
          VB: Public Sub LogEvent(e As Exception)
        parameters:
        - id: e
          type: System.Exception
          description: The exception to log
      overload: ERC.ErcCore.LogEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.ErcResult`1
    commentId: T:ERC.ErcResult`1
    language: CSharp
    name:
      CSharp: ErcResult<T>
      VB: ErcResult(Of T)
    nameWithType:
      CSharp: ErcResult<T>
      VB: ErcResult(Of T)
    qualifiedName:
      CSharp: ERC.ErcResult<T>
      VB: ERC.ErcResult(Of T)
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC
    source:
      id: ErcResult
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 671
    summary: "\nA basic object which contains a generic type and exception. \n"
    example: []
    syntax:
      content:
        CSharp: 'public class ErcResult<T> : ErcCore'
        VB: >-
          Public Class ErcResult(Of T)

              Inherits ErcCore
      typeParameters:
      - id: T
        description: A generic type
    inheritance:
    - System.Object
    - ERC.ErcCore
    inheritedMembers:
    - ERC.ErcCore.ErcVersion
    - ERC.ErcCore.WorkingDirectory
    - ERC.ErcCore.Author
    - ERC.ErcCore.SystemErrorLogPath
    - ERC.ErcCore.PatternStandardPath
    - ERC.ErcCore.PatternExtendedPath
    - ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
    - ERC.ErcCore.SetWorkingDirectory(System.String)
    - ERC.ErcCore.SetPatternStandardPath(System.String)
    - ERC.ErcCore.SetPatternExtendedPath(System.String)
    - ERC.ErcCore.SetAuthor(System.String)
    - ERC.ErcCore.SetErrorFile(System.String)
    - ERC.ErcCore.LogEvent(System.Exception)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.ErcResult`1.ReturnValue
      commentId: P:ERC.ErcResult`1.ReturnValue
      language: CSharp
      name:
        CSharp: ReturnValue
        VB: ReturnValue
      nameWithType:
        CSharp: ErcResult<T>.ReturnValue
        VB: ErcResult(Of T).ReturnValue
      qualifiedName:
        CSharp: ERC.ErcResult<T>.ReturnValue
        VB: ERC.ErcResult(Of T).ReturnValue
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ReturnValue
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 676
      summary: "\nGeneric Type.\n"
      example: []
      syntax:
        content:
          CSharp: public T ReturnValue { get; set; }
          VB: Public Property ReturnValue As T
        parameters: []
        return:
          type: '{T}'
      overload: ERC.ErcResult`1.ReturnValue*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.ErcResult`1.Error
      commentId: P:ERC.ErcResult`1.Error
      language: CSharp
      name:
        CSharp: Error
        VB: Error
      nameWithType:
        CSharp: ErcResult<T>.Error
        VB: ErcResult(Of T).Error
      qualifiedName:
        CSharp: ERC.ErcResult<T>.Error
        VB: ERC.ErcResult(Of T).Error
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: Error
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 680
      summary: "\nException to be logged by LogEvent().\n"
      example: []
      syntax:
        content:
          CSharp: public Exception Error { get; set; }
          VB: Public Property Error As Exception
        parameters: []
        return:
          type: System.Exception
      overload: ERC.ErcResult`1.Error*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.ErcResult`1.#ctor(ERC.ErcCore)
      commentId: M:ERC.ErcResult`1.#ctor(ERC.ErcCore)
      language: CSharp
      name:
        CSharp: ErcResult(ErcCore)
        VB: ErcResult(ErcCore)
      nameWithType:
        CSharp: ErcResult<T>.ErcResult(ErcCore)
        VB: ErcResult(Of T).ErcResult(ErcCore)
      qualifiedName:
        CSharp: ERC.ErcResult<T>.ErcResult(ERC.ErcCore)
        VB: ERC.ErcResult(Of T).ErcResult(ERC.ErcCore)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 686
      summary: "\nBase constructor.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult(ErcCore core)
          VB: Public Sub New(core As ErcCore)
        parameters:
        - id: core
          type: ERC.ErcCore
          description: The ErcCore object to inherit from.
      overload: ERC.ErcResult`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcResult`1.#ctor(ERC.ErcCore,System.String)
      commentId: M:ERC.ErcResult`1.#ctor(ERC.ErcCore,System.String)
      language: CSharp
      name:
        CSharp: ErcResult(ErcCore, String)
        VB: ErcResult(ErcCore, String)
      nameWithType:
        CSharp: ErcResult<T>.ErcResult(ErcCore, String)
        VB: ErcResult(Of T).ErcResult(ErcCore, String)
      qualifiedName:
        CSharp: ERC.ErcResult<T>.ErcResult(ERC.ErcCore, System.String)
        VB: ERC.ErcResult(Of T).ErcResult(ERC.ErcCore, System.String)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 696
      summary: "\nBase constructor with a custom location for exceptions to be logged.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult(ErcCore core, string errorFile)
          VB: Public Sub New(core As ErcCore, errorFile As String)
        parameters:
        - id: core
          type: ERC.ErcCore
          description: The ErcCore object to inherit from.
        - id: errorFile
          type: System.String
          description: The location to log exceptions.
      overload: ERC.ErcResult`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcResult`1.LogEvent
      commentId: M:ERC.ErcResult`1.LogEvent
      language: CSharp
      name:
        CSharp: LogEvent()
        VB: LogEvent()
      nameWithType:
        CSharp: ErcResult<T>.LogEvent()
        VB: ErcResult(Of T).LogEvent()
      qualifiedName:
        CSharp: ERC.ErcResult<T>.LogEvent()
        VB: ERC.ErcResult(Of T).LogEvent()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: LogEvent
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 704
      summary: "\nLogs an event to the ErrorLogFile value.\n"
      example: []
      syntax:
        content:
          CSharp: public void LogEvent()
          VB: Public Sub LogEvent
      overload: ERC.ErcResult`1.LogEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ErcResult`1.ToString
      commentId: M:ERC.ErcResult`1.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ErcResult<T>.ToString()
        VB: ErcResult(Of T).ToString()
      qualifiedName:
        CSharp: ERC.ErcResult<T>.ToString()
        VB: ERC.ErcResult(Of T).ToString()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ToString
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 716
      summary: "\nOverride of the ToString method. Returns a string containing values relevant to the object. \n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: A string containing information about the object.
      overload: ERC.ErcResult`1.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ERC.MachineType
    commentId: T:ERC.MachineType
    language: CSharp
    name:
      CSharp: MachineType
      VB: MachineType
    nameWithType:
      CSharp: MachineType
      VB: MachineType
    qualifiedName:
      CSharp: ERC.MachineType
      VB: ERC.MachineType
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC
    source:
      id: MachineType
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 740
    summary: "\nEnum containing types of machine architectures.\n"
    example: []
    syntax:
      content:
        CSharp: public enum MachineType
        VB: Public Enum MachineType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.MachineType.Native
      commentId: F:ERC.MachineType.Native
      language: CSharp
      name:
        CSharp: Native
        VB: Native
      nameWithType:
        CSharp: MachineType.Native
        VB: MachineType.Native
      qualifiedName:
        CSharp: ERC.MachineType.Native
        VB: ERC.MachineType.Native
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: Native
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 745
      summary: "\nNative.\n"
      example: []
      syntax:
        content:
          CSharp: Native = 0
          VB: Native = 0
        return:
          type: ERC.MachineType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.MachineType.I386
      commentId: F:ERC.MachineType.I386
      language: CSharp
      name:
        CSharp: I386
        VB: I386
      nameWithType:
        CSharp: MachineType.I386
        VB: MachineType.I386
      qualifiedName:
        CSharp: ERC.MachineType.I386
        VB: ERC.MachineType.I386
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: I386
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 750
      summary: "\nx86.\n"
      example: []
      syntax:
        content:
          CSharp: I386 = 332
          VB: I386 = 332
        return:
          type: ERC.MachineType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.MachineType.Itanium
      commentId: F:ERC.MachineType.Itanium
      language: CSharp
      name:
        CSharp: Itanium
        VB: Itanium
      nameWithType:
        CSharp: MachineType.Itanium
        VB: MachineType.Itanium
      qualifiedName:
        CSharp: ERC.MachineType.Itanium
        VB: ERC.MachineType.Itanium
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: Itanium
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 755
      summary: "\nItanium.\n"
      example: []
      syntax:
        content:
          CSharp: Itanium = 512
          VB: Itanium = 512
        return:
          type: ERC.MachineType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.MachineType.x64
      commentId: F:ERC.MachineType.x64
      language: CSharp
      name:
        CSharp: x64
        VB: x64
      nameWithType:
        CSharp: MachineType.x64
        VB: MachineType.x64
      qualifiedName:
        CSharp: ERC.MachineType.x64
        VB: ERC.MachineType.x64
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: x64
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 760
      summary: "\nx64.\n"
      example: []
      syntax:
        content:
          CSharp: x64 = 34404
          VB: x64 = 34404
        return:
          type: ERC.MachineType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.MachineType.error
      commentId: F:ERC.MachineType.error
      language: CSharp
      name:
        CSharp: error
        VB: error
      nameWithType:
        CSharp: MachineType.error
        VB: MachineType.error
      qualifiedName:
        CSharp: ERC.MachineType.error
        VB: ERC.MachineType.error
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: error
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 765
      summary: "\nType is unknown or unset.\n"
      example: []
      syntax:
        content:
          CSharp: error = -1
          VB: error = -1
        return:
          type: ERC.MachineType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.ModuleInfo
    commentId: T:ERC.ModuleInfo
    language: CSharp
    name:
      CSharp: ModuleInfo
      VB: ModuleInfo
    nameWithType:
      CSharp: ModuleInfo
      VB: ModuleInfo
    qualifiedName:
      CSharp: ERC.ModuleInfo
      VB: ERC.ModuleInfo
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC
    source:
      id: ModuleInfo
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
      startLine: 14
    summary: "\nContains all information relating to a specific module.\n"
    example: []
    syntax:
      content:
        CSharp: public class ModuleInfo
        VB: Public Class ModuleInfo
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.ModuleInfo.ModuleName
      commentId: P:ERC.ModuleInfo.ModuleName
      language: CSharp
      name:
        CSharp: ModuleName
        VB: ModuleName
      nameWithType:
        CSharp: ModuleInfo.ModuleName
        VB: ModuleInfo.ModuleName
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleName
        VB: ERC.ModuleInfo.ModuleName
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleName
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 20
      summary: "\nModule name.\n"
      example: []
      syntax:
        content:
          CSharp: public string ModuleName { get; }
          VB: Public ReadOnly Property ModuleName As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ModuleInfo.ModuleName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModulePath
      commentId: P:ERC.ModuleInfo.ModulePath
      language: CSharp
      name:
        CSharp: ModulePath
        VB: ModulePath
      nameWithType:
        CSharp: ModuleInfo.ModulePath
        VB: ModuleInfo.ModulePath
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModulePath
        VB: ERC.ModuleInfo.ModulePath
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModulePath
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 24
      summary: "\nModule path.\n"
      example: []
      syntax:
        content:
          CSharp: public string ModulePath { get; }
          VB: Public ReadOnly Property ModulePath As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ModuleInfo.ModulePath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleVersion
      commentId: P:ERC.ModuleInfo.ModuleVersion
      language: CSharp
      name:
        CSharp: ModuleVersion
        VB: ModuleVersion
      nameWithType:
        CSharp: ModuleInfo.ModuleVersion
        VB: ModuleInfo.ModuleVersion
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleVersion
        VB: ERC.ModuleInfo.ModuleVersion
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 28
      summary: "\nModule version.\n"
      example: []
      syntax:
        content:
          CSharp: public string ModuleVersion { get; }
          VB: Public ReadOnly Property ModuleVersion As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ModuleInfo.ModuleVersion*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleProduct
      commentId: P:ERC.ModuleInfo.ModuleProduct
      language: CSharp
      name:
        CSharp: ModuleProduct
        VB: ModuleProduct
      nameWithType:
        CSharp: ModuleInfo.ModuleProduct
        VB: ModuleInfo.ModuleProduct
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleProduct
        VB: ERC.ModuleInfo.ModuleProduct
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleProduct
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 32
      summary: "\nModule product.\n"
      example: []
      syntax:
        content:
          CSharp: public string ModuleProduct { get; }
          VB: Public ReadOnly Property ModuleProduct As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ModuleInfo.ModuleProduct*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleProtection
      commentId: P:ERC.ModuleInfo.ModuleProtection
      language: CSharp
      name:
        CSharp: ModuleProtection
        VB: ModuleProtection
      nameWithType:
        CSharp: ModuleInfo.ModuleProtection
        VB: ModuleInfo.ModuleProtection
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleProtection
        VB: ERC.ModuleInfo.ModuleProtection
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleProtection
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 37
      summary: "\nMemory protection of this module.\n"
      example: []
      syntax:
        content:
          CSharp: public uint ModuleProtection { get; }
          VB: Public ReadOnly Property ModuleProtection As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: ERC.ModuleInfo.ModuleProtection*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleBase
      commentId: P:ERC.ModuleInfo.ModuleBase
      language: CSharp
      name:
        CSharp: ModuleBase
        VB: ModuleBase
      nameWithType:
        CSharp: ModuleInfo.ModuleBase
        VB: ModuleInfo.ModuleBase
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleBase
        VB: ERC.ModuleInfo.ModuleBase
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleBase
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 42
      summary: "\nModule base pointer.\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ModuleBase { get; }
          VB: Public ReadOnly Property ModuleBase As IntPtr
        parameters: []
        return:
          type: System.IntPtr
      overload: ERC.ModuleInfo.ModuleBase*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleEntry
      commentId: P:ERC.ModuleInfo.ModuleEntry
      language: CSharp
      name:
        CSharp: ModuleEntry
        VB: ModuleEntry
      nameWithType:
        CSharp: ModuleInfo.ModuleEntry
        VB: ModuleInfo.ModuleEntry
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleEntry
        VB: ERC.ModuleInfo.ModuleEntry
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleEntry
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 46
      summary: "\nModule entry point.\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ModuleEntry { get; }
          VB: Public ReadOnly Property ModuleEntry As IntPtr
        parameters: []
        return:
          type: System.IntPtr
      overload: ERC.ModuleInfo.ModuleEntry*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleImageBase
      commentId: P:ERC.ModuleInfo.ModuleImageBase
      language: CSharp
      name:
        CSharp: ModuleImageBase
        VB: ModuleImageBase
      nameWithType:
        CSharp: ModuleInfo.ModuleImageBase
        VB: ModuleInfo.ModuleImageBase
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleImageBase
        VB: ERC.ModuleInfo.ModuleImageBase
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleImageBase
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 50
      summary: "\nModule image base.\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ModuleImageBase { get; }
          VB: Public ReadOnly Property ModuleImageBase As IntPtr
        parameters: []
        return:
          type: System.IntPtr
      overload: ERC.ModuleInfo.ModuleImageBase*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleSize
      commentId: P:ERC.ModuleInfo.ModuleSize
      language: CSharp
      name:
        CSharp: ModuleSize
        VB: ModuleSize
      nameWithType:
        CSharp: ModuleInfo.ModuleSize
        VB: ModuleInfo.ModuleSize
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleSize
        VB: ERC.ModuleInfo.ModuleSize
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleSize
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 54
      summary: "\nModule size.\n"
      example: []
      syntax:
        content:
          CSharp: public int ModuleSize { get; }
          VB: Public ReadOnly Property ModuleSize As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ERC.ModuleInfo.ModuleSize*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleASLR
      commentId: P:ERC.ModuleInfo.ModuleASLR
      language: CSharp
      name:
        CSharp: ModuleASLR
        VB: ModuleASLR
      nameWithType:
        CSharp: ModuleInfo.ModuleASLR
        VB: ModuleInfo.ModuleASLR
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleASLR
        VB: ERC.ModuleInfo.ModuleASLR
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleASLR
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 59
      summary: "\nModule supports ASLR.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ModuleASLR { get; }
          VB: Public ReadOnly Property ModuleASLR As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ERC.ModuleInfo.ModuleASLR*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleSafeSEH
      commentId: P:ERC.ModuleInfo.ModuleSafeSEH
      language: CSharp
      name:
        CSharp: ModuleSafeSEH
        VB: ModuleSafeSEH
      nameWithType:
        CSharp: ModuleInfo.ModuleSafeSEH
        VB: ModuleInfo.ModuleSafeSEH
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleSafeSEH
        VB: ERC.ModuleInfo.ModuleSafeSEH
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleSafeSEH
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 63
      summary: "\nModule supports SafeSEH\n"
      example: []
      syntax:
        content:
          CSharp: public bool ModuleSafeSEH { get; }
          VB: Public ReadOnly Property ModuleSafeSEH As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ERC.ModuleInfo.ModuleSafeSEH*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleRebase
      commentId: P:ERC.ModuleInfo.ModuleRebase
      language: CSharp
      name:
        CSharp: ModuleRebase
        VB: ModuleRebase
      nameWithType:
        CSharp: ModuleInfo.ModuleRebase
        VB: ModuleInfo.ModuleRebase
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleRebase
        VB: ERC.ModuleInfo.ModuleRebase
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleRebase
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 67
      summary: "\nModule can be rebased.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ModuleRebase { get; }
          VB: Public ReadOnly Property ModuleRebase As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ERC.ModuleInfo.ModuleRebase*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleNXCompat
      commentId: P:ERC.ModuleInfo.ModuleNXCompat
      language: CSharp
      name:
        CSharp: ModuleNXCompat
        VB: ModuleNXCompat
      nameWithType:
        CSharp: ModuleInfo.ModuleNXCompat
        VB: ModuleInfo.ModuleNXCompat
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleNXCompat
        VB: ERC.ModuleInfo.ModuleNXCompat
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleNXCompat
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 71
      summary: "\nModule is DEP enabled.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ModuleNXCompat { get; }
          VB: Public ReadOnly Property ModuleNXCompat As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ERC.ModuleInfo.ModuleNXCompat*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleOsDll
      commentId: P:ERC.ModuleInfo.ModuleOsDll
      language: CSharp
      name:
        CSharp: ModuleOsDll
        VB: ModuleOsDll
      nameWithType:
        CSharp: ModuleInfo.ModuleOsDll
        VB: ModuleInfo.ModuleOsDll
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleOsDll
        VB: ERC.ModuleInfo.ModuleOsDll
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleOsDll
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 75
      summary: "\nModule is an OS dll.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ModuleOsDll { get; }
          VB: Public ReadOnly Property ModuleOsDll As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ERC.ModuleInfo.ModuleOsDll*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleProcess
      commentId: P:ERC.ModuleInfo.ModuleProcess
      language: CSharp
      name:
        CSharp: ModuleProcess
        VB: ModuleProcess
      nameWithType:
        CSharp: ModuleInfo.ModuleProcess
        VB: ModuleInfo.ModuleProcess
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleProcess
        VB: ERC.ModuleInfo.ModuleProcess
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleProcess
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 79
      summary: "\nProcess where the module is loaded.\n"
      example: []
      syntax:
        content:
          CSharp: public Process ModuleProcess { get; }
          VB: Public ReadOnly Property ModuleProcess As Process
        parameters: []
        return:
          type: System.Diagnostics.Process
      overload: ERC.ModuleInfo.ModuleProcess*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleCore
      commentId: P:ERC.ModuleInfo.ModuleCore
      language: CSharp
      name:
        CSharp: ModuleCore
        VB: ModuleCore
      nameWithType:
        CSharp: ModuleInfo.ModuleCore
        VB: ModuleInfo.ModuleCore
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleCore
        VB: ERC.ModuleInfo.ModuleCore
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleCore
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 83
      summary: "\nAssociated ErcCore object.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcCore ModuleCore { get; }
          VB: Public ReadOnly Property ModuleCore As ErcCore
        parameters: []
        return:
          type: ERC.ErcCore
      overload: ERC.ModuleInfo.ModuleCore*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleMachineType
      commentId: P:ERC.ModuleInfo.ModuleMachineType
      language: CSharp
      name:
        CSharp: ModuleMachineType
        VB: ModuleMachineType
      nameWithType:
        CSharp: ModuleInfo.ModuleMachineType
        VB: ModuleInfo.ModuleMachineType
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleMachineType
        VB: ERC.ModuleInfo.ModuleMachineType
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleMachineType
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 88
      summary: "\nMachine type of the module.\n"
      example: []
      syntax:
        content:
          CSharp: public MachineType ModuleMachineType { get; }
          VB: Public ReadOnly Property ModuleMachineType As MachineType
        parameters: []
        return:
          type: ERC.MachineType
      overload: ERC.ModuleInfo.ModuleMachineType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ModuleInfo.ModuleFailed
      commentId: F:ERC.ModuleInfo.ModuleFailed
      language: CSharp
      name:
        CSharp: ModuleFailed
        VB: ModuleFailed
      nameWithType:
        CSharp: ModuleInfo.ModuleFailed
        VB: ModuleInfo.ModuleFailed
      qualifiedName:
        CSharp: ERC.ModuleInfo.ModuleFailed
        VB: ERC.ModuleInfo.ModuleFailed
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModuleFailed
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 103
      summary: "\nAn errpr was encountered whilst processing the module.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ModuleFailed
          VB: Public ModuleFailed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ModuleInfo.SearchModule(System.Byte[])
      commentId: M:ERC.ModuleInfo.SearchModule(System.Byte[])
      language: CSharp
      name:
        CSharp: SearchModule(Byte[])
        VB: SearchModule(Byte())
      nameWithType:
        CSharp: ModuleInfo.SearchModule(Byte[])
        VB: ModuleInfo.SearchModule(Byte())
      qualifiedName:
        CSharp: ERC.ModuleInfo.SearchModule(System.Byte[])
        VB: ERC.ModuleInfo.SearchModule(System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SearchModule
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 389
      summary: "\nSearches for a string of bytes within a specific module. Takes a byte array to be searched for. \n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<List<IntPtr>> SearchModule(byte[] searchBytes)
          VB: Public Function SearchModule(searchBytes As Byte()) As ErcResult(Of List(Of IntPtr))
        parameters:
        - id: searchBytes
          type: System.Byte[]
          description: A byte array to be searched for
        return:
          type: ERC.ErcResult{System.Collections.Generic.List{System.IntPtr}}
          description: Returns ERC_Result of pointers to the search term
      overload: ERC.ModuleInfo.SearchModule*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ModuleInfo.ToString
      commentId: M:ERC.ModuleInfo.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ModuleInfo.ToString()
        VB: ModuleInfo.ToString()
      qualifiedName:
        CSharp: ERC.ModuleInfo.ToString()
        VB: ERC.ModuleInfo.ToString()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ToString
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Module_Info.cs
        startLine: 438
      summary: "\nOverride of the ToString method. Provides a data associated with the module.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: A string containing relevant data.
      overload: ERC.ModuleInfo.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ERC.ProcessInfo
    commentId: T:ERC.ProcessInfo
    language: CSharp
    name:
      CSharp: ProcessInfo
      VB: ProcessInfo
    nameWithType:
      CSharp: ProcessInfo
      VB: ProcessInfo
    qualifiedName:
      CSharp: ERC.ProcessInfo
      VB: ERC.ProcessInfo
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC
    source:
      id: ProcessInfo
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
      startLine: 15
    summary: 'Contains information needed for the associated functions relating to the process. '
    example: []
    syntax:
      content:
        CSharp: 'public class ProcessInfo : ErcCore'
        VB: >-
          Public Class ProcessInfo

              Inherits ErcCore
    inheritance:
    - System.Object
    - ERC.ErcCore
    inheritedMembers:
    - ERC.ErcCore.ErcVersion
    - ERC.ErcCore.WorkingDirectory
    - ERC.ErcCore.Author
    - ERC.ErcCore.SystemErrorLogPath
    - ERC.ErcCore.PatternStandardPath
    - ERC.ErcCore.PatternExtendedPath
    - ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
    - ERC.ErcCore.SetWorkingDirectory(System.String)
    - ERC.ErcCore.SetPatternStandardPath(System.String)
    - ERC.ErcCore.SetPatternExtendedPath(System.String)
    - ERC.ErcCore.SetAuthor(System.String)
    - ERC.ErcCore.SetErrorFile(System.String)
    - ERC.ErcCore.LogEvent(System.Exception)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.ProcessInfo.ProcessName
      commentId: P:ERC.ProcessInfo.ProcessName
      language: CSharp
      name:
        CSharp: ProcessName
        VB: ProcessName
      nameWithType:
        CSharp: ProcessInfo.ProcessName
        VB: ProcessInfo.ProcessName
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessName
        VB: ERC.ProcessInfo.ProcessName
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ProcessName
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 19
      summary: 'Name of the process. '
      example: []
      syntax:
        content:
          CSharp: public string ProcessName { get; }
          VB: Public ReadOnly Property ProcessName As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ProcessInfo.ProcessName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ProcessInfo.ProcessDescription
      commentId: P:ERC.ProcessInfo.ProcessDescription
      language: CSharp
      name:
        CSharp: ProcessDescription
        VB: ProcessDescription
      nameWithType:
        CSharp: ProcessInfo.ProcessDescription
        VB: ProcessInfo.ProcessDescription
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessDescription
        VB: ERC.ProcessInfo.ProcessDescription
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ProcessDescription
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 21
      summary: 'Process description. '
      example: []
      syntax:
        content:
          CSharp: public string ProcessDescription { get; }
          VB: Public ReadOnly Property ProcessDescription As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ProcessInfo.ProcessDescription*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ProcessInfo.ProcessPath
      commentId: P:ERC.ProcessInfo.ProcessPath
      language: CSharp
      name:
        CSharp: ProcessPath
        VB: ProcessPath
      nameWithType:
        CSharp: ProcessInfo.ProcessPath
        VB: ProcessInfo.ProcessPath
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessPath
        VB: ERC.ProcessInfo.ProcessPath
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ProcessPath
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 23
      summary: 'Path for the projects main module. '
      example: []
      syntax:
        content:
          CSharp: public string ProcessPath { get; }
          VB: Public ReadOnly Property ProcessPath As String
        parameters: []
        return:
          type: System.String
      overload: ERC.ProcessInfo.ProcessPath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ProcessInfo.ProcessID
      commentId: P:ERC.ProcessInfo.ProcessID
      language: CSharp
      name:
        CSharp: ProcessID
        VB: ProcessID
      nameWithType:
        CSharp: ProcessInfo.ProcessID
        VB: ProcessInfo.ProcessID
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessID
        VB: ERC.ProcessInfo.ProcessID
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ProcessID
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 25
      summary: 'Process ID. '
      example: []
      syntax:
        content:
          CSharp: public int ProcessID { get; }
          VB: Public ReadOnly Property ProcessID As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ERC.ProcessInfo.ProcessID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ProcessInfo.ProcessHandle
      commentId: P:ERC.ProcessInfo.ProcessHandle
      language: CSharp
      name:
        CSharp: ProcessHandle
        VB: ProcessHandle
      nameWithType:
        CSharp: ProcessInfo.ProcessHandle
        VB: ProcessInfo.ProcessHandle
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessHandle
        VB: ERC.ProcessInfo.ProcessHandle
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ProcessHandle
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 28
      summary: 'Handle for the process. '
      example: []
      syntax:
        content:
          CSharp: public IntPtr ProcessHandle { get; }
          VB: Public ReadOnly Property ProcessHandle As IntPtr
        parameters: []
        return:
          type: System.IntPtr
      overload: ERC.ProcessInfo.ProcessHandle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ProcessInfo.ProcessCurrent
      commentId: P:ERC.ProcessInfo.ProcessCurrent
      language: CSharp
      name:
        CSharp: ProcessCurrent
        VB: ProcessCurrent
      nameWithType:
        CSharp: ProcessInfo.ProcessCurrent
        VB: ProcessInfo.ProcessCurrent
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessCurrent
        VB: ERC.ProcessInfo.ProcessCurrent
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ProcessCurrent
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 30
      summary: '.Net Process object for this process '
      example: []
      syntax:
        content:
          CSharp: public Process ProcessCurrent { get; }
          VB: Public ReadOnly Property ProcessCurrent As Process
        parameters: []
        return:
          type: System.Diagnostics.Process
      overload: ERC.ProcessInfo.ProcessCurrent*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ProcessInfo.ProcessMachineType
      commentId: P:ERC.ProcessInfo.ProcessMachineType
      language: CSharp
      name:
        CSharp: ProcessMachineType
        VB: ProcessMachineType
      nameWithType:
        CSharp: ProcessInfo.ProcessMachineType
        VB: ProcessInfo.ProcessMachineType
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessMachineType
        VB: ERC.ProcessInfo.ProcessMachineType
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ProcessMachineType
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 32
      summary: 'The machine type the process runs on. Eg. x86 or x64 '
      example: []
      syntax:
        content:
          CSharp: public MachineType ProcessMachineType { get; }
          VB: Public ReadOnly Property ProcessMachineType As MachineType
        parameters: []
        return:
          type: ERC.MachineType
      overload: ERC.ProcessInfo.ProcessMachineType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ProcessInfo.ModulesInfo
      commentId: F:ERC.ProcessInfo.ModulesInfo
      language: CSharp
      name:
        CSharp: ModulesInfo
        VB: ModulesInfo
      nameWithType:
        CSharp: ProcessInfo.ModulesInfo
        VB: ProcessInfo.ModulesInfo
      qualifiedName:
        CSharp: ERC.ProcessInfo.ModulesInfo
        VB: ERC.ProcessInfo.ModulesInfo
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ModulesInfo
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 35
      summary: 'A list containing ModuleInfo objects associuted with the process. /// '
      example: []
      syntax:
        content:
          CSharp: public List<ModuleInfo> ModulesInfo
          VB: Public ModulesInfo As List(Of ModuleInfo)
        return:
          type: System.Collections.Generic.List{ERC.ModuleInfo}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.ThreadsInfo
      commentId: F:ERC.ProcessInfo.ThreadsInfo
      language: CSharp
      name:
        CSharp: ThreadsInfo
        VB: ThreadsInfo
      nameWithType:
        CSharp: ProcessInfo.ThreadsInfo
        VB: ProcessInfo.ThreadsInfo
      qualifiedName:
        CSharp: ERC.ProcessInfo.ThreadsInfo
        VB: ERC.ProcessInfo.ThreadsInfo
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ThreadsInfo
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 37
      summary: 'A list containing ThreadInfo objects associuted with the process. /// '
      example: []
      syntax:
        content:
          CSharp: public List<ThreadInfo> ThreadsInfo
          VB: Public ThreadsInfo As List(Of ThreadInfo)
        return:
          type: System.Collections.Generic.List{ERC.ThreadInfo}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.#ctor(ERC.ErcCore,System.Diagnostics.Process)
      commentId: M:ERC.ProcessInfo.#ctor(ERC.ErcCore,System.Diagnostics.Process)
      language: CSharp
      name:
        CSharp: ProcessInfo(ErcCore, Process)
        VB: ProcessInfo(ErcCore, Process)
      nameWithType:
        CSharp: ProcessInfo.ProcessInfo(ErcCore, Process)
        VB: ProcessInfo.ProcessInfo(ErcCore, Process)
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessInfo(ERC.ErcCore, System.Diagnostics.Process)
        VB: ERC.ProcessInfo.ProcessInfo(ERC.ErcCore, System.Diagnostics.Process)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 52
      summary: "\nConstructor for the Process_Info object, requires an ERC_Core object and a Process.\n"
      example: []
      syntax:
        content:
          CSharp: public ProcessInfo(ErcCore core, Process process)
          VB: Public Sub New(core As ErcCore, process As Process)
        parameters:
        - id: core
          type: ERC.ErcCore
          description: An ErcCore object
        - id: process
          type: System.Diagnostics.Process
          description: The process to gather information from
      overload: ERC.ProcessInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.#ctor(ERC.ErcCore,System.IntPtr)
      commentId: M:ERC.ProcessInfo.#ctor(ERC.ErcCore,System.IntPtr)
      language: CSharp
      name:
        CSharp: ProcessInfo(ErcCore, IntPtr)
        VB: ProcessInfo(ErcCore, IntPtr)
      nameWithType:
        CSharp: ProcessInfo.ProcessInfo(ErcCore, IntPtr)
        VB: ProcessInfo.ProcessInfo(ErcCore, IntPtr)
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessInfo(ERC.ErcCore, System.IntPtr)
        VB: ERC.ProcessInfo.ProcessInfo(ERC.ErcCore, System.IntPtr)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 104
      summary: "\nConstructor for the Process_Info object, requires an ERC_Core object and a Process.\n"
      example: []
      syntax:
        content:
          CSharp: public ProcessInfo(ErcCore core, IntPtr handle)
          VB: Public Sub New(core As ErcCore, handle As IntPtr)
        parameters:
        - id: core
          type: ERC.ErcCore
          description: An ErcCore object
        - id: handle
          type: System.IntPtr
          description: The handle for the process to gather information from
      overload: ERC.ProcessInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.#ctor(ERC.ProcessInfo)
      commentId: M:ERC.ProcessInfo.#ctor(ERC.ProcessInfo)
      language: CSharp
      name:
        CSharp: ProcessInfo(ProcessInfo)
        VB: ProcessInfo(ProcessInfo)
      nameWithType:
        CSharp: ProcessInfo.ProcessInfo(ProcessInfo)
        VB: ProcessInfo.ProcessInfo(ProcessInfo)
      qualifiedName:
        CSharp: ERC.ProcessInfo.ProcessInfo(ERC.ProcessInfo)
        VB: ERC.ProcessInfo.ProcessInfo(ERC.ProcessInfo)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 164
      summary: "\nConstructor to use when inheriting from ProcessInfo.\n"
      example: []
      syntax:
        content:
          CSharp: protected ProcessInfo(ProcessInfo parent)
          VB: Protected Sub New(parent As ProcessInfo)
        parameters:
        - id: parent
          type: ERC.ProcessInfo
          description: The object to inherit from
      overload: ERC.ProcessInfo.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
      commentId: M:ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
      language: CSharp
      name:
        CSharp: ListLocalProcesses(ErcCore)
        VB: ListLocalProcesses(ErcCore)
      nameWithType:
        CSharp: ProcessInfo.ListLocalProcesses(ErcCore)
        VB: ProcessInfo.ListLocalProcesses(ErcCore)
      qualifiedName:
        CSharp: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
        VB: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ListLocalProcesses
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 192
      summary: "\nGets a list of running processes on the host and removes unusable processes (such as system processes etc)\n"
      example: []
      syntax:
        content:
          CSharp: public static ErcResult<Process[]> ListLocalProcesses(ErcCore core)
          VB: Public Shared Function ListLocalProcesses(core As ErcCore) As ErcResult(Of Process())
        parameters:
        - id: core
          type: ERC.ErcCore
          description: An ErcCore object
        return:
          type: ERC.ErcResult{System.Diagnostics.Process[]}
          description: Returns an ErcResult containing a list of all supported processes
      overload: ERC.ProcessInfo.ListLocalProcesses*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
      commentId: M:ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
      language: CSharp
      name:
        CSharp: ListRemoteProcesses(ErcCore, String)
        VB: ListRemoteProcesses(ErcCore, String)
      nameWithType:
        CSharp: ProcessInfo.ListRemoteProcesses(ErcCore, String)
        VB: ProcessInfo.ListRemoteProcesses(ErcCore, String)
      qualifiedName:
        CSharp: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore, System.String)
        VB: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore, System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ListRemoteProcesses
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 234
      summary: "\nGets a list of running processes on the host and removes unusable processes.\n"
      example: []
      syntax:
        content:
          CSharp: public static ErcResult<Process[]> ListRemoteProcesses(ErcCore core, string machineName)
          VB: Public Shared Function ListRemoteProcesses(core As ErcCore, machineName As String) As ErcResult(Of Process())
        parameters:
        - id: core
          type: ERC.ErcCore
          description: An ErcCore object
        - id: machineName
          type: System.String
          description: The computer from which to read the list of processes. Can be either the hostname or IP address.
        return:
          type: ERC.ErcResult{System.Diagnostics.Process[]}
          description: Returns an ErcResult containing a list of all supported processes
      overload: ERC.ProcessInfo.ListRemoteProcesses*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.ProcessInfo.GetProcessModules
      commentId: M:ERC.ProcessInfo.GetProcessModules
      language: CSharp
      name:
        CSharp: GetProcessModules()
        VB: GetProcessModules()
      nameWithType:
        CSharp: ProcessInfo.GetProcessModules()
        VB: ProcessInfo.GetProcessModules()
      qualifiedName:
        CSharp: ERC.ProcessInfo.GetProcessModules()
        VB: ERC.ProcessInfo.GetProcessModules()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GetProcessModules
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 282
      summary: "\nReturns a list of files loaded by the current process as List String\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<Dictionary<string, IntPtr>> GetProcessModules()
          VB: Public Function GetProcessModules As ErcResult(Of Dictionary(Of String, IntPtr))
        return:
          type: ERC.ErcResult{System.Collections.Generic.Dictionary{System.String,System.IntPtr}}
          description: Returns an ErcResult containing a Dictionary of module names and the associated handles
      overload: ERC.ProcessInfo.GetProcessModules*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
      commentId: M:ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
      language: CSharp
      name:
        CSharp: Is64Bit(Process)
        VB: Is64Bit(Process)
      nameWithType:
        CSharp: ProcessInfo.Is64Bit(Process)
        VB: ProcessInfo.Is64Bit(Process)
      qualifiedName:
        CSharp: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
        VB: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: Is64Bit
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 339
      summary: "\nIdentifies if a process is 64bit or 32 bit, returns true for 64bit and false for 32bit.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool Is64Bit(Process process)
          VB: Public Shared Function Is64Bit(process As Process) As Boolean
        parameters:
        - id: process
          type: System.Diagnostics.Process
          description: The process to be used
        return:
          type: System.Boolean
          description: Returns true if the process is 64bit and false if it is not.
      overload: ERC.ProcessInfo.Is64Bit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
      commentId: M:ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: SearchAllMemoryPPR(List<String>)
        VB: SearchAllMemoryPPR(List(Of String))
      nameWithType:
        CSharp: ProcessInfo.SearchAllMemoryPPR(List<String>)
        VB: ProcessInfo.SearchAllMemoryPPR(List(Of String))
      qualifiedName:
        CSharp: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List<System.String>)
        VB: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SearchAllMemoryPPR
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 727
      summary: "\nSearches all memory associated with a given process and associated modules for POP X POP X RET instructions. \nPassing a list of module paths or names will exclude those modules from the search. \n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<Dictionary<IntPtr, string>> SearchAllMemoryPPR(List<string> excludes = null)
          VB: Public Function SearchAllMemoryPPR(excludes As List(Of String) = Nothing) As ErcResult(Of Dictionary(Of IntPtr, String))
        parameters:
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: Takes a list of module names to be excluded from the search
        return:
          type: ERC.ErcResult{System.Collections.Generic.Dictionary{System.IntPtr,System.String}}
          description: Returns an ERC_Result containing a dictionary of pointers and the main module in which they were found
      overload: ERC.ProcessInfo.SearchAllMemoryPPR*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
      commentId: M:ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: SearchAllMemoryPPR(Byte[], List<String>)
        VB: SearchAllMemoryPPR(Byte(), List(Of String))
      nameWithType:
        CSharp: ProcessInfo.SearchAllMemoryPPR(Byte[], List<String>)
        VB: ProcessInfo.SearchAllMemoryPPR(Byte(), List(Of String))
      qualifiedName:
        CSharp: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[], System.Collections.Generic.List<System.String>)
        VB: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte(), System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SearchAllMemoryPPR
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 875
      summary: "\nSearches all memory associated with a given process and associated modules for POP X POP X RET instructions. \nPassing a list of module paths or names will exclude those modules from the search. \n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<Dictionary<IntPtr, string>> SearchAllMemoryPPR(byte[] ptrsToExclude, List<string> excludes = null)
          VB: Public Function SearchAllMemoryPPR(ptrsToExclude As Byte(), excludes As List(Of String) = Nothing) As ErcResult(Of Dictionary(Of IntPtr, String))
        parameters:
        - id: ptrsToExclude
          type: System.Byte[]
          description: Takes a byte array of values used to disqualify pointers
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: Takes a list of module names to be excluded from the search
        return:
          type: ERC.ErcResult{System.Collections.Generic.Dictionary{System.IntPtr,System.String}}
          description: Returns an ERC_Result containing a dictionary of pointers and the main module in which they were found
      overload: ERC.ProcessInfo.SearchAllMemoryPPR*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
      commentId: M:ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: SearchMemory(Int32, Byte[], String, List<String>)
        VB: SearchMemory(Int32, Byte(), String, List(Of String))
      nameWithType:
        CSharp: ProcessInfo.SearchMemory(Int32, Byte[], String, List<String>)
        VB: ProcessInfo.SearchMemory(Int32, Byte(), String, List(Of String))
      qualifiedName:
        CSharp: ERC.ProcessInfo.SearchMemory(System.Int32, System.Byte[], System.String, System.Collections.Generic.List<System.String>)
        VB: ERC.ProcessInfo.SearchMemory(System.Int32, System.Byte(), System.String, System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SearchMemory
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 1028
      summary: "\nSearches all memory (the process and associated DLLs) for a specific string or byte array. Strings can be passed as ASCII, Unicode, UTF7 or UTF8.\nSpecific modules can be exclude through passing a Listof strings containing module names or paths.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<Dictionary<IntPtr, string>> SearchMemory(int searchType, byte[] searchBytes = null, string searchString = null, List<string> excludes = null)
          VB: Public Function SearchMemory(searchType As Integer, searchBytes As Byte() = Nothing, searchString As String = Nothing, excludes As List(Of String) = Nothing) As ErcResult(Of Dictionary(Of IntPtr, String))
        parameters:
        - id: searchType
          type: System.Int32
          description: 0 = search term is in bytes\n1 = search term is in unicode\n2 = search term is in ASCII\n3 = Search term is in UTF8\n4 = Search term is in UTF7\n5 = Search term is in UTF32
        - id: searchBytes
          type: System.Byte[]
          description: Byte array to be searched for (optional)
        - id: searchString
          type: System.String
          description: String to be searched for (optional)
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: Modules to be excluded from the search (optional)
        return:
          type: ERC.ErcResult{System.Collections.Generic.Dictionary{System.IntPtr,System.String}}
          description: Returns an ERC_Result containing pointers to all instances of the search query.
      overload: ERC.ProcessInfo.SearchMemory*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
      commentId: M:ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: SearchMemory(Int32, Byte[], Byte[], String, List<String>)
        VB: SearchMemory(Int32, Byte(), Byte(), String, List(Of String))
      nameWithType:
        CSharp: ProcessInfo.SearchMemory(Int32, Byte[], Byte[], String, List<String>)
        VB: ProcessInfo.SearchMemory(Int32, Byte(), Byte(), String, List(Of String))
      qualifiedName:
        CSharp: ERC.ProcessInfo.SearchMemory(System.Int32, System.Byte[], System.Byte[], System.String, System.Collections.Generic.List<System.String>)
        VB: ERC.ProcessInfo.SearchMemory(System.Int32, System.Byte(), System.Byte(), System.String, System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: SearchMemory
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 1121
      summary: "\nSearches all memory (the process and associated DLLs) for a specific string or byte array. Strings can be passed as ASCII, Unicode, UTF7 or UTF8.\nSpecific modules can be exclude through passing a Listof strings containing module names or paths.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<Dictionary<IntPtr, string>> SearchMemory(int searchType, byte[] ptrsToExclude, byte[] searchBytes = null, string searchString = null, List<string> excludes = null)
          VB: Public Function SearchMemory(searchType As Integer, ptrsToExclude As Byte(), searchBytes As Byte() = Nothing, searchString As String = Nothing, excludes As List(Of String) = Nothing) As ErcResult(Of Dictionary(Of IntPtr, String))
        parameters:
        - id: searchType
          type: System.Int32
          description: 0 = search term is in bytes\n1 = search term is in unicode\n2 = search term is in ASCII\n3 = Search term is in UTF8\n4 = Search term is in UTF7\n5 = Search term is in UTF32
        - id: ptrsToExclude
          type: System.Byte[]
          description: Takes a byte array of values used to disqualify pointers
        - id: searchBytes
          type: System.Byte[]
          description: Byte array to be searched for (optional)
        - id: searchString
          type: System.String
          description: String to be searched for (optional)
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: Modules to be excluded from the search (optional)
        return:
          type: ERC.ErcResult{System.Collections.Generic.Dictionary{System.IntPtr,System.String}}
          description: Returns an ERC_Result containing pointers to all instances of the search query.
      overload: ERC.ProcessInfo.SearchMemory*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
      commentId: M:ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: FindNRP(Int32, Boolean)
        VB: FindNRP(Int32, Boolean)
      nameWithType:
        CSharp: ProcessInfo.FindNRP(Int32, Boolean)
        VB: ProcessInfo.FindNRP(Int32, Boolean)
      qualifiedName:
        CSharp: ERC.ProcessInfo.FindNRP(System.Int32, System.Boolean)
        VB: ERC.ProcessInfo.FindNRP(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: FindNRP
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 1213
      summary: "\nSearches process registers and identifies pointers to buffers in memory containing a non repeating pattern. Functionality to identify SEH overwrites not yet implements.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<List<RegisterInfo>> FindNRP(int searchType = 0, bool extended = false)
          VB: Public Function FindNRP(searchType As Integer = 0, extended As Boolean = False) As ErcResult(Of List(Of RegisterInfo))
        parameters:
        - id: searchType
          type: System.Int32
          description: (Optional) 0 = search term is system default\n1 = search term is in unicode\n2 = search term is in ASCII\n3 = Search term is in UTF8\n4 = Search term is in UTF7\n5 = Search term is in UTF32
        - id: extended
          type: System.Boolean
          description: (Optional) Include additional characters in the pattern (!#$%^ etc) in the to be searched
        return:
          type: ERC.ErcResult{System.Collections.Generic.List{ERC.Structures.RegisterInfo}}
          description: Returns a ERC_Result containing a List of RegisterOffset
      overload: ERC.ProcessInfo.FindNRP*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
      commentId: M:ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: CreateExcludesList(Boolean, Boolean, Boolean, Boolean, Boolean)
        VB: CreateExcludesList(Boolean, Boolean, Boolean, Boolean, Boolean)
      nameWithType:
        CSharp: ProcessInfo.CreateExcludesList(Boolean, Boolean, Boolean, Boolean, Boolean)
        VB: ProcessInfo.CreateExcludesList(Boolean, Boolean, Boolean, Boolean, Boolean)
      qualifiedName:
        CSharp: ERC.ProcessInfo.CreateExcludesList(System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
        VB: ERC.ProcessInfo.CreateExcludesList(System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: CreateExcludesList
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 1895
      summary: "\nCreates a list of modules to exclude from a search of memory.\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> CreateExcludesList(bool aslr = false, bool safeseh = false, bool rebase = false, bool nxcompat = false, bool osdll = false)
          VB: Public Function CreateExcludesList(aslr As Boolean = False, safeseh As Boolean = False, rebase As Boolean = False, nxcompat As Boolean = False, osdll As Boolean = False) As List(Of String)
        parameters:
        - id: aslr
          type: System.Boolean
        - id: safeseh
          type: System.Boolean
        - id: rebase
          type: System.Boolean
        - id: nxcompat
          type: System.Boolean
        - id: osdll
          type: System.Boolean
        return:
          type: System.Collections.Generic.List{System.String}
          description: Returns an ErcResult containing a list of stringss
      overload: ERC.ProcessInfo.CreateExcludesList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.ToString
      commentId: M:ERC.ProcessInfo.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ProcessInfo.ToString()
        VB: ProcessInfo.ToString()
      qualifiedName:
        CSharp: ERC.ProcessInfo.ToString()
        VB: ERC.ProcessInfo.ToString()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ToString
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 1937
      summary: "\nOverride of the ToString method. Returns information about the process in a pleasantly formatted string\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: A string
      overload: ERC.ProcessInfo.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ERC.ProcessInfo.GetModuleHandles
      commentId: M:ERC.ProcessInfo.GetModuleHandles
      language: CSharp
      name:
        CSharp: GetModuleHandles()
        VB: GetModuleHandles()
      nameWithType:
        CSharp: ProcessInfo.GetModuleHandles()
        VB: ProcessInfo.GetModuleHandles()
      qualifiedName:
        CSharp: ERC.ProcessInfo.GetModuleHandles()
        VB: ERC.ProcessInfo.GetModuleHandles()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GetModuleHandles
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 1963
      summary: "\nReturns a list of module handles associated with the process.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<Dictionary<string, IntPtr>> GetModuleHandles()
          VB: Public Function GetModuleHandles As ErcResult(Of Dictionary(Of String, IntPtr))
        return:
          type: ERC.ErcResult{System.Collections.Generic.Dictionary{System.String,System.IntPtr}}
          description: Returns a dictionary containing the handle and path of each module
      overload: ERC.ProcessInfo.GetModuleHandles*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.GetProcessModuleInformation
      commentId: M:ERC.ProcessInfo.GetProcessModuleInformation
      language: CSharp
      name:
        CSharp: GetProcessModuleInformation()
        VB: GetProcessModuleInformation()
      nameWithType:
        CSharp: ProcessInfo.GetProcessModuleInformation()
        VB: ProcessInfo.GetProcessModuleInformation()
      qualifiedName:
        CSharp: ERC.ProcessInfo.GetProcessModuleInformation()
        VB: ERC.ProcessInfo.GetProcessModuleInformation()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GetProcessModuleInformation
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 1984
      summary: "\nGets the list of ModuleInfo objects associated with the current process.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<List<ModuleInfo>> GetProcessModuleInformation()
          VB: Public Function GetProcessModuleInformation As ErcResult(Of List(Of ModuleInfo))
        return:
          type: ERC.ErcResult{System.Collections.Generic.List{ERC.ModuleInfo}}
          description: Returns an ErcResult containing a list of ModuleInfo objects
      overload: ERC.ProcessInfo.GetProcessModuleInformation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.GetProcessThreadInformation
      commentId: M:ERC.ProcessInfo.GetProcessThreadInformation
      language: CSharp
      name:
        CSharp: GetProcessThreadInformation()
        VB: GetProcessThreadInformation()
      nameWithType:
        CSharp: ProcessInfo.GetProcessThreadInformation()
        VB: ProcessInfo.GetProcessThreadInformation()
      qualifiedName:
        CSharp: ERC.ProcessInfo.GetProcessThreadInformation()
        VB: ERC.ProcessInfo.GetProcessThreadInformation()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GetProcessThreadInformation
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 2005
      summary: "\nGets the list of ThreadInfo objects associated with the current process.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<List<ThreadInfo>> GetProcessThreadInformation()
          VB: Public Function GetProcessThreadInformation As ErcResult(Of List(Of ThreadInfo))
        return:
          type: ERC.ErcResult{System.Collections.Generic.List{ERC.ThreadInfo}}
          description: Returns an ErcResult containing a list of ThreadInfo objects
      overload: ERC.ProcessInfo.GetProcessThreadInformation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
      commentId: M:ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
      language: CSharp
      name:
        CSharp: DumpMemoryRegion(IntPtr, Int32)
        VB: DumpMemoryRegion(IntPtr, Int32)
      nameWithType:
        CSharp: ProcessInfo.DumpMemoryRegion(IntPtr, Int32)
        VB: ProcessInfo.DumpMemoryRegion(IntPtr, Int32)
      qualifiedName:
        CSharp: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr, System.Int32)
        VB: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr, System.Int32)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: DumpMemoryRegion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Process_Info.cs
        startLine: 2028
      summary: "\nReads process memory from a specific address for a set number of bytes. \n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<byte[]> DumpMemoryRegion(IntPtr startAddress, int length)
          VB: Public Function DumpMemoryRegion(startAddress As IntPtr, length As Integer) As ErcResult(Of Byte())
        parameters:
        - id: startAddress
          type: System.IntPtr
          description: The address to start reading from.
        - id: length
          type: System.Int32
          description: Number of bytes to read.
        return:
          type: ERC.ErcResult{System.Byte[]}
          description: Returns a bytes array containing the specified contents of process memory.
      overload: ERC.ProcessInfo.DumpMemoryRegion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.ThreadInfo
    commentId: T:ERC.ThreadInfo
    language: CSharp
    name:
      CSharp: ThreadInfo
      VB: ThreadInfo
    nameWithType:
      CSharp: ThreadInfo
      VB: ThreadInfo
    qualifiedName:
      CSharp: ERC.ThreadInfo
      VB: ERC.ThreadInfo
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC
    source:
      id: ThreadInfo
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
      startLine: 15
    summary: "\nStores information about the current thread.\n"
    example: []
    syntax:
      content:
        CSharp: public class ThreadInfo
        VB: Public Class ThreadInfo
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.ThreadInfo.ThreadHandle
      commentId: P:ERC.ThreadInfo.ThreadHandle
      language: CSharp
      name:
        CSharp: ThreadHandle
        VB: ThreadHandle
      nameWithType:
        CSharp: ThreadInfo.ThreadHandle
        VB: ThreadInfo.ThreadHandle
      qualifiedName:
        CSharp: ERC.ThreadInfo.ThreadHandle
        VB: ERC.ThreadInfo.ThreadHandle
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ThreadHandle
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
        startLine: 21
      summary: "\nA handle for the current thread.\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ThreadHandle { get; }
          VB: Public ReadOnly Property ThreadHandle As IntPtr
        parameters: []
        return:
          type: System.IntPtr
      overload: ERC.ThreadInfo.ThreadHandle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ThreadInfo.ThreadID
      commentId: P:ERC.ThreadInfo.ThreadID
      language: CSharp
      name:
        CSharp: ThreadID
        VB: ThreadID
      nameWithType:
        CSharp: ThreadInfo.ThreadID
        VB: ThreadInfo.ThreadID
      qualifiedName:
        CSharp: ERC.ThreadInfo.ThreadID
        VB: ERC.ThreadInfo.ThreadID
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ThreadID
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
        startLine: 25
      summary: "\nThe ID number of the current thread.\n"
      example: []
      syntax:
        content:
          CSharp: public int ThreadID { get; }
          VB: Public ReadOnly Property ThreadID As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ERC.ThreadInfo.ThreadID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ERC.ThreadInfo.Context32
      commentId: F:ERC.ThreadInfo.Context32
      language: CSharp
      name:
        CSharp: Context32
        VB: Context32
      nameWithType:
        CSharp: ThreadInfo.Context32
        VB: ThreadInfo.Context32
      qualifiedName:
        CSharp: ERC.ThreadInfo.Context32
        VB: ERC.ThreadInfo.Context32
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: Context32
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
        startLine: 29
      summary: "\nx86 CPU Register values.\n"
      example: []
      syntax:
        content:
          CSharp: public CONTEXT32 Context32
          VB: Public Context32 As CONTEXT32
        return:
          type: ERC.Structures.CONTEXT32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ThreadInfo.Context64
      commentId: F:ERC.ThreadInfo.Context64
      language: CSharp
      name:
        CSharp: Context64
        VB: Context64
      nameWithType:
        CSharp: ThreadInfo.Context64
        VB: ThreadInfo.Context64
      qualifiedName:
        CSharp: ERC.ThreadInfo.Context64
        VB: ERC.ThreadInfo.Context64
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: Context64
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
        startLine: 33
      summary: "\nx64 CPU Register values.\n"
      example: []
      syntax:
        content:
          CSharp: public CONTEXT64 Context64
          VB: Public Context64 As CONTEXT64
        return:
          type: ERC.Structures.CONTEXT64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ThreadInfo.Get_Context
      commentId: M:ERC.ThreadInfo.Get_Context
      language: CSharp
      name:
        CSharp: Get_Context()
        VB: Get_Context()
      nameWithType:
        CSharp: ThreadInfo.Get_Context()
        VB: ThreadInfo.Get_Context()
      qualifiedName:
        CSharp: ERC.ThreadInfo.Get_Context()
        VB: ERC.ThreadInfo.Get_Context()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: Get_Context
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
        startLine: 91
      summary: "\nGets the register values of a thread and populates the CONTEXT structs. Should only be used on a suspended thread, results on an active thread are unreliable.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<string> Get_Context()
          VB: Public Function Get_Context As ErcResult(Of String)
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ErcResult, the return value can be ignored, the object should only be checked for error values
      overload: ERC.ThreadInfo.Get_Context*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ThreadInfo.GetSehChain
      commentId: M:ERC.ThreadInfo.GetSehChain
      language: CSharp
      name:
        CSharp: GetSehChain()
        VB: GetSehChain()
      nameWithType:
        CSharp: ThreadInfo.GetSehChain()
        VB: ThreadInfo.GetSehChain()
      qualifiedName:
        CSharp: ERC.ThreadInfo.GetSehChain()
        VB: ERC.ThreadInfo.GetSehChain()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GetSehChain
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
        startLine: 495
      summary: "\nGets the current SEH chain for the process.\n"
      example: []
      syntax:
        content:
          CSharp: public List<IntPtr> GetSehChain()
          VB: Public Function GetSehChain As List(Of IntPtr)
        return:
          type: System.Collections.Generic.List{System.IntPtr}
          description: Returns a list of IntPtr containing the SEH chain
      overload: ERC.ThreadInfo.GetSehChain*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ThreadInfo.GetTeb
      commentId: M:ERC.ThreadInfo.GetTeb
      language: CSharp
      name:
        CSharp: GetTeb()
        VB: GetTeb()
      nameWithType:
        CSharp: ThreadInfo.GetTeb()
        VB: ThreadInfo.GetTeb()
      qualifiedName:
        CSharp: ERC.ThreadInfo.GetTeb()
        VB: ERC.ThreadInfo.GetTeb()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: GetTeb
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
        startLine: 535
      summary: "\nGets the Thread environment block of the current thread.\n"
      example: []
      syntax:
        content:
          CSharp: public TEB GetTeb()
          VB: Public Function GetTeb As TEB
        return:
          type: ERC.Structures.TEB
          description: Returns a TEB struct
      overload: ERC.ThreadInfo.GetTeb*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.ThreadInfo.ToString
      commentId: M:ERC.ThreadInfo.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: ThreadInfo.ToString()
        VB: ThreadInfo.ToString()
      qualifiedName:
        CSharp: ERC.ThreadInfo.ToString()
        VB: ERC.ThreadInfo.ToString()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC
      source:
        id: ToString
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
        startLine: 548
      summary: "\nGets information specific to the current thread and returns it as a string.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: Returns a string
      overload: ERC.ThreadInfo.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: ERC.Utilities
  commentId: N:ERC.Utilities
  language: CSharp
  name:
    CSharp: ERC.Utilities
    VB: ERC.Utilities
  nameWithType:
    CSharp: ERC.Utilities
    VB: ERC.Utilities
  qualifiedName:
    CSharp: ERC.Utilities
    VB: ERC.Utilities
  type: Namespace
  assemblies:
  - ERC.Net
  modifiers: {}
  items:
  - id: ERC.Utilities.Convert
    commentId: T:ERC.Utilities.Convert
    language: CSharp
    name:
      CSharp: Convert
      VB: Convert
    nameWithType:
      CSharp: Convert
      VB: Convert
    qualifiedName:
      CSharp: ERC.Utilities.Convert
      VB: ERC.Utilities.Convert
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: Convert
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
      startLine: 10
    summary: "\nStatic class containing methods for common conversions.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Convert
        VB: Public Module Convert
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ERC.Utilities.Convert.HexToAscii(System.String)
      commentId: M:ERC.Utilities.Convert.HexToAscii(System.String)
      language: CSharp
      name:
        CSharp: HexToAscii(String)
        VB: HexToAscii(String)
      nameWithType:
        CSharp: Convert.HexToAscii(String)
        VB: Convert.HexToAscii(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.HexToAscii(System.String)
        VB: ERC.Utilities.Convert.HexToAscii(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: HexToAscii
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 20
      summary: "\nConverts a hex string to ASCII.&quot;\n"
      example: []
      syntax:
        content:
          CSharp: public static string HexToAscii(string hex)
          VB: Public Shared Function HexToAscii(hex As String) As String
        parameters:
        - id: hex
          type: System.String
          description: A string containing hex characters.
        return:
          type: System.String
          description: A string containing the equivalent ASCII values
      overload: ERC.Utilities.Convert.HexToAscii*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.HexToBytes(System.String)
      commentId: M:ERC.Utilities.Convert.HexToBytes(System.String)
      language: CSharp
      name:
        CSharp: HexToBytes(String)
        VB: HexToBytes(String)
      nameWithType:
        CSharp: Convert.HexToBytes(String)
        VB: Convert.HexToBytes(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.HexToBytes(System.String)
        VB: ERC.Utilities.Convert.HexToBytes(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: HexToBytes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 62
      summary: "\nConverts a hex string to the equivalent bytes.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] HexToBytes(string hex)
          VB: Public Shared Function HexToBytes(hex As String) As Byte()
        parameters:
        - id: hex
          type: System.String
          description: A string containing hex characters.
        return:
          type: System.Byte[]
          description: A byte array containing the associated values.
      overload: ERC.Utilities.Convert.HexToBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.AsciiToBytes(System.String)
      commentId: M:ERC.Utilities.Convert.AsciiToBytes(System.String)
      language: CSharp
      name:
        CSharp: AsciiToBytes(String)
        VB: AsciiToBytes(String)
      nameWithType:
        CSharp: Convert.AsciiToBytes(String)
        VB: Convert.AsciiToBytes(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.AsciiToBytes(System.String)
        VB: ERC.Utilities.Convert.AsciiToBytes(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: AsciiToBytes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 86
      summary: "\nConverts an ASCII string to a byte array.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] AsciiToBytes(string ascii)
          VB: Public Shared Function AsciiToBytes(ascii As String) As Byte()
        parameters:
        - id: ascii
          type: System.String
          description: An ASCII string.
        return:
          type: System.Byte[]
          description: A byte array containing the associated values.
      overload: ERC.Utilities.Convert.AsciiToBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.AsciiToHex(System.String)
      commentId: M:ERC.Utilities.Convert.AsciiToHex(System.String)
      language: CSharp
      name:
        CSharp: AsciiToHex(String)
        VB: AsciiToHex(String)
      nameWithType:
        CSharp: Convert.AsciiToHex(String)
        VB: Convert.AsciiToHex(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.AsciiToHex(System.String)
        VB: ERC.Utilities.Convert.AsciiToHex(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: AsciiToHex
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 96
      summary: "\nConverts an ASCII string to a hex string\n"
      example: []
      syntax:
        content:
          CSharp: public static string AsciiToHex(string ascii)
          VB: Public Shared Function AsciiToHex(ascii As String) As String
        parameters:
        - id: ascii
          type: System.String
          description: An ASCII string.
        return:
          type: System.String
          description: A hex string.
      overload: ERC.Utilities.Convert.AsciiToHex*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.UnicodeToBytes(System.String)
      commentId: M:ERC.Utilities.Convert.UnicodeToBytes(System.String)
      language: CSharp
      name:
        CSharp: UnicodeToBytes(String)
        VB: UnicodeToBytes(String)
      nameWithType:
        CSharp: Convert.UnicodeToBytes(String)
        VB: Convert.UnicodeToBytes(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.UnicodeToBytes(System.String)
        VB: ERC.Utilities.Convert.UnicodeToBytes(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: UnicodeToBytes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 108
      summary: "\nConverts a Unicode string to a byte array.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] UnicodeToBytes(string unicode)
          VB: Public Shared Function UnicodeToBytes(unicode As String) As Byte()
        parameters:
        - id: unicode
          type: System.String
          description: A Unicode string.
        return:
          type: System.Byte[]
          description: A byte array.
      overload: ERC.Utilities.Convert.UnicodeToBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.UnicodeToHex(System.String)
      commentId: M:ERC.Utilities.Convert.UnicodeToHex(System.String)
      language: CSharp
      name:
        CSharp: UnicodeToHex(String)
        VB: UnicodeToHex(String)
      nameWithType:
        CSharp: Convert.UnicodeToHex(String)
        VB: Convert.UnicodeToHex(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.UnicodeToHex(System.String)
        VB: ERC.Utilities.Convert.UnicodeToHex(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: UnicodeToHex
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 118
      summary: "\nConverts a Unicode string to a hex string.\n"
      example: []
      syntax:
        content:
          CSharp: public static string UnicodeToHex(string unicode)
          VB: Public Shared Function UnicodeToHex(unicode As String) As String
        parameters:
        - id: unicode
          type: System.String
          description: A Unicode string.
        return:
          type: System.String
          description: A hex string.
      overload: ERC.Utilities.Convert.UnicodeToHex*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.UTF7ToBytes(System.String)
      commentId: M:ERC.Utilities.Convert.UTF7ToBytes(System.String)
      language: CSharp
      name:
        CSharp: UTF7ToBytes(String)
        VB: UTF7ToBytes(String)
      nameWithType:
        CSharp: Convert.UTF7ToBytes(String)
        VB: Convert.UTF7ToBytes(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.UTF7ToBytes(System.String)
        VB: ERC.Utilities.Convert.UTF7ToBytes(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: UTF7ToBytes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 130
      summary: "\nConverts a UTF-7 string to a byte array.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] UTF7ToBytes(string utf7)
          VB: Public Shared Function UTF7ToBytes(utf7 As String) As Byte()
        parameters:
        - id: utf7
          type: System.String
          description: A UTF-7 string.
        return:
          type: System.Byte[]
          description: A byte array.
      overload: ERC.Utilities.Convert.UTF7ToBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.UTF7ToHex(System.String)
      commentId: M:ERC.Utilities.Convert.UTF7ToHex(System.String)
      language: CSharp
      name:
        CSharp: UTF7ToHex(String)
        VB: UTF7ToHex(String)
      nameWithType:
        CSharp: Convert.UTF7ToHex(String)
        VB: Convert.UTF7ToHex(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.UTF7ToHex(System.String)
        VB: ERC.Utilities.Convert.UTF7ToHex(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: UTF7ToHex
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 140
      summary: "\nConverts a UTF-7 string to a hex string.\n"
      example: []
      syntax:
        content:
          CSharp: public static string UTF7ToHex(string utf7)
          VB: Public Shared Function UTF7ToHex(utf7 As String) As String
        parameters:
        - id: utf7
          type: System.String
          description: A UTF-7 string.
        return:
          type: System.String
          description: A hex string.
      overload: ERC.Utilities.Convert.UTF7ToHex*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.UTF8ToBytes(System.String)
      commentId: M:ERC.Utilities.Convert.UTF8ToBytes(System.String)
      language: CSharp
      name:
        CSharp: UTF8ToBytes(String)
        VB: UTF8ToBytes(String)
      nameWithType:
        CSharp: Convert.UTF8ToBytes(String)
        VB: Convert.UTF8ToBytes(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.UTF8ToBytes(System.String)
        VB: ERC.Utilities.Convert.UTF8ToBytes(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: UTF8ToBytes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 152
      summary: "\nConverts a UTF-8 string to a byte array.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] UTF8ToBytes(string utf8)
          VB: Public Shared Function UTF8ToBytes(utf8 As String) As Byte()
        parameters:
        - id: utf8
          type: System.String
          description: A UTF-8 string.
        return:
          type: System.Byte[]
          description: A byte array.
      overload: ERC.Utilities.Convert.UTF8ToBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.UTF8ToHex(System.String)
      commentId: M:ERC.Utilities.Convert.UTF8ToHex(System.String)
      language: CSharp
      name:
        CSharp: UTF8ToHex(String)
        VB: UTF8ToHex(String)
      nameWithType:
        CSharp: Convert.UTF8ToHex(String)
        VB: Convert.UTF8ToHex(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.UTF8ToHex(System.String)
        VB: ERC.Utilities.Convert.UTF8ToHex(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: UTF8ToHex
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 162
      summary: "\nConverts a UTF-8 string to a hex string.\n"
      example: []
      syntax:
        content:
          CSharp: public static string UTF8ToHex(string utf8)
          VB: Public Shared Function UTF8ToHex(utf8 As String) As String
        parameters:
        - id: utf8
          type: System.String
          description: A UTF-8 string.
        return:
          type: System.String
          description: A hex string.
      overload: ERC.Utilities.Convert.UTF8ToHex*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.UTF32ToBytes(System.String)
      commentId: M:ERC.Utilities.Convert.UTF32ToBytes(System.String)
      language: CSharp
      name:
        CSharp: UTF32ToBytes(String)
        VB: UTF32ToBytes(String)
      nameWithType:
        CSharp: Convert.UTF32ToBytes(String)
        VB: Convert.UTF32ToBytes(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.UTF32ToBytes(System.String)
        VB: ERC.Utilities.Convert.UTF32ToBytes(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: UTF32ToBytes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 174
      summary: "\nConverts a UTF-32 string to a byte array.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] UTF32ToBytes(string utf32)
          VB: Public Shared Function UTF32ToBytes(utf32 As String) As Byte()
        parameters:
        - id: utf32
          type: System.String
          description: A UTF-32 string.
        return:
          type: System.Byte[]
          description: A byte array.
      overload: ERC.Utilities.Convert.UTF32ToBytes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Convert.UTF32ToHex(System.String)
      commentId: M:ERC.Utilities.Convert.UTF32ToHex(System.String)
      language: CSharp
      name:
        CSharp: UTF32ToHex(String)
        VB: UTF32ToHex(String)
      nameWithType:
        CSharp: Convert.UTF32ToHex(String)
        VB: Convert.UTF32ToHex(String)
      qualifiedName:
        CSharp: ERC.Utilities.Convert.UTF32ToHex(System.String)
        VB: ERC.Utilities.Convert.UTF32ToHex(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: UTF32ToHex
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Convert.cs
        startLine: 184
      summary: "\nConverts a UTF-32 string to a hex string.\n"
      example: []
      syntax:
        content:
          CSharp: public static string UTF32ToHex(string utf32)
          VB: Public Shared Function UTF32ToHex(utf32 As String) As String
        parameters:
        - id: utf32
          type: System.String
          description: A UTF-32 string.
        return:
          type: System.String
          description: A hex string.
      overload: ERC.Utilities.Convert.UTF32ToHex*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ERC.Utilities.OpcodeAssembler
    commentId: T:ERC.Utilities.OpcodeAssembler
    language: CSharp
    name:
      CSharp: OpcodeAssembler
      VB: OpcodeAssembler
    nameWithType:
      CSharp: OpcodeAssembler
      VB: OpcodeAssembler
    qualifiedName:
      CSharp: ERC.Utilities.OpcodeAssembler
      VB: ERC.Utilities.OpcodeAssembler
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: OpcodeAssembler
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Opcode_Assembler.cs
      startLine: 10
    summary: "\nOpcodeAssembler class, can be declared and inherit from a ProcessInfo object to inherit the values of the current process or be called as \na static function to assemble instructions.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OpcodeAssembler : ProcessInfo'
        VB: >-
          Public Class OpcodeAssembler

              Inherits ProcessInfo
    inheritance:
    - System.Object
    - ERC.ErcCore
    - ERC.ProcessInfo
    inheritedMembers:
    - ERC.ProcessInfo.ProcessName
    - ERC.ProcessInfo.ProcessDescription
    - ERC.ProcessInfo.ProcessPath
    - ERC.ProcessInfo.ProcessID
    - ERC.ProcessInfo.ProcessHandle
    - ERC.ProcessInfo.ProcessCurrent
    - ERC.ProcessInfo.ProcessMachineType
    - ERC.ProcessInfo.ModulesInfo
    - ERC.ProcessInfo.ThreadsInfo
    - ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
    - ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
    - ERC.ProcessInfo.GetProcessModules
    - ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
    - ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
    - ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
    - ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
    - ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
    - ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
    - ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    - ERC.ProcessInfo.ToString
    - ERC.ProcessInfo.GetModuleHandles
    - ERC.ProcessInfo.GetProcessModuleInformation
    - ERC.ProcessInfo.GetProcessThreadInformation
    - ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
    - ERC.ErcCore.ErcVersion
    - ERC.ErcCore.WorkingDirectory
    - ERC.ErcCore.Author
    - ERC.ErcCore.SystemErrorLogPath
    - ERC.ErcCore.PatternStandardPath
    - ERC.ErcCore.PatternExtendedPath
    - ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
    - ERC.ErcCore.SetWorkingDirectory(System.String)
    - ERC.ErcCore.SetPatternStandardPath(System.String)
    - ERC.ErcCore.SetPatternExtendedPath(System.String)
    - ERC.ErcCore.SetAuthor(System.String)
    - ERC.ErcCore.SetErrorFile(System.String)
    - ERC.ErcCore.LogEvent(System.Exception)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.Utilities.OpcodeAssembler.#ctor(ERC.ProcessInfo)
      commentId: M:ERC.Utilities.OpcodeAssembler.#ctor(ERC.ProcessInfo)
      language: CSharp
      name:
        CSharp: OpcodeAssembler(ProcessInfo)
        VB: OpcodeAssembler(ProcessInfo)
      nameWithType:
        CSharp: OpcodeAssembler.OpcodeAssembler(ProcessInfo)
        VB: OpcodeAssembler.OpcodeAssembler(ProcessInfo)
      qualifiedName:
        CSharp: ERC.Utilities.OpcodeAssembler.OpcodeAssembler(ERC.ProcessInfo)
        VB: ERC.Utilities.OpcodeAssembler.OpcodeAssembler(ERC.ProcessInfo)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Opcode_Assembler.cs
        startLine: 16
      summary: "\nConstructor.\n"
      example: []
      syntax:
        content:
          CSharp: public OpcodeAssembler(ProcessInfo parent)
          VB: Public Sub New(parent As ProcessInfo)
        parameters:
        - id: parent
          type: ERC.ProcessInfo
          description: ProcessInfo object to be inherited from.
      overload: ERC.Utilities.OpcodeAssembler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String})
      commentId: M:ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: AssembleOpcodes(List<String>)
        VB: AssembleOpcodes(List(Of String))
      nameWithType:
        CSharp: OpcodeAssembler.AssembleOpcodes(List<String>)
        VB: OpcodeAssembler.AssembleOpcodes(List(Of String))
      qualifiedName:
        CSharp: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List<System.String>)
        VB: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: AssembleOpcodes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Opcode_Assembler.cs
        startLine: 26
      summary: "\nTakes either an array or list of strings containing assembly instructions and returns the associated opcodes.  \n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<byte[]> AssembleOpcodes(List<string> instructions)
          VB: Public Function AssembleOpcodes(instructions As List(Of String)) As ErcResult(Of Byte())
        parameters:
        - id: instructions
          type: System.Collections.Generic.List{System.String}
          description: The instructions to be assembled
        return:
          type: ERC.ErcResult{System.Byte[]}
          description: Returns an ErcResult byte array containing the assembled instructions
      overload: ERC.Utilities.OpcodeAssembler.AssembleOpcodes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String},ERC.MachineType)
      commentId: M:ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String},ERC.MachineType)
      language: CSharp
      name:
        CSharp: AssembleOpcodes(List<String>, MachineType)
        VB: AssembleOpcodes(List(Of String), MachineType)
      nameWithType:
        CSharp: OpcodeAssembler.AssembleOpcodes(List<String>, MachineType)
        VB: OpcodeAssembler.AssembleOpcodes(List(Of String), MachineType)
      qualifiedName:
        CSharp: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List<System.String>, ERC.MachineType)
        VB: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List(Of System.String), ERC.MachineType)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: AssembleOpcodes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Opcode_Assembler.cs
        startLine: 70
      summary: "\nTakes either an array or list of strings containing assembly instructions, a MachineType of I386 or x64, \nan instance of the ERC_Core object and returns the associated opcodes.  \n"
      example: []
      syntax:
        content:
          CSharp: public static ErcResult<byte[]> AssembleOpcodes(List<string> instructions, MachineType machineType)
          VB: Public Shared Function AssembleOpcodes(instructions As List(Of String), machineType As MachineType) As ErcResult(Of Byte())
        parameters:
        - id: instructions
          type: System.Collections.Generic.List{System.String}
          description: The instructions to be assemble=d
        - id: machineType
          type: ERC.MachineType
          description: a ERC.MachineType of either I386 or x64
        return:
          type: ERC.ErcResult{System.Byte[]}
          description: Returns an ERC_Result byte array containing the assembled instructions
      overload: ERC.Utilities.OpcodeAssembler.AssembleOpcodes*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ERC.Utilities.OpcodeDisassembler
    commentId: T:ERC.Utilities.OpcodeDisassembler
    language: CSharp
    name:
      CSharp: OpcodeDisassembler
      VB: OpcodeDisassembler
    nameWithType:
      CSharp: OpcodeDisassembler
      VB: OpcodeDisassembler
    qualifiedName:
      CSharp: ERC.Utilities.OpcodeDisassembler
      VB: ERC.Utilities.OpcodeDisassembler
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: OpcodeDisassembler
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Opcode_Disassembler.cs
      startLine: 9
    summary: "\nOpcodeDisassembler class, can be declared and inherit from a ProcessInfo object to inherit the values of the current process or be called as \na static function to disassemble opcodes.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OpcodeDisassembler : ProcessInfo'
        VB: >-
          Public Class OpcodeDisassembler

              Inherits ProcessInfo
    inheritance:
    - System.Object
    - ERC.ErcCore
    - ERC.ProcessInfo
    inheritedMembers:
    - ERC.ProcessInfo.ProcessName
    - ERC.ProcessInfo.ProcessDescription
    - ERC.ProcessInfo.ProcessPath
    - ERC.ProcessInfo.ProcessID
    - ERC.ProcessInfo.ProcessHandle
    - ERC.ProcessInfo.ProcessCurrent
    - ERC.ProcessInfo.ProcessMachineType
    - ERC.ProcessInfo.ModulesInfo
    - ERC.ProcessInfo.ThreadsInfo
    - ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
    - ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
    - ERC.ProcessInfo.GetProcessModules
    - ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
    - ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
    - ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
    - ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
    - ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
    - ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
    - ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    - ERC.ProcessInfo.ToString
    - ERC.ProcessInfo.GetModuleHandles
    - ERC.ProcessInfo.GetProcessModuleInformation
    - ERC.ProcessInfo.GetProcessThreadInformation
    - ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
    - ERC.ErcCore.ErcVersion
    - ERC.ErcCore.WorkingDirectory
    - ERC.ErcCore.Author
    - ERC.ErcCore.SystemErrorLogPath
    - ERC.ErcCore.PatternStandardPath
    - ERC.ErcCore.PatternExtendedPath
    - ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
    - ERC.ErcCore.SetWorkingDirectory(System.String)
    - ERC.ErcCore.SetPatternStandardPath(System.String)
    - ERC.ErcCore.SetPatternExtendedPath(System.String)
    - ERC.ErcCore.SetAuthor(System.String)
    - ERC.ErcCore.SetErrorFile(System.String)
    - ERC.ErcCore.LogEvent(System.Exception)
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.Utilities.OpcodeDisassembler.#ctor(ERC.ProcessInfo)
      commentId: M:ERC.Utilities.OpcodeDisassembler.#ctor(ERC.ProcessInfo)
      language: CSharp
      name:
        CSharp: OpcodeDisassembler(ProcessInfo)
        VB: OpcodeDisassembler(ProcessInfo)
      nameWithType:
        CSharp: OpcodeDisassembler.OpcodeDisassembler(ProcessInfo)
        VB: OpcodeDisassembler.OpcodeDisassembler(ProcessInfo)
      qualifiedName:
        CSharp: ERC.Utilities.OpcodeDisassembler.OpcodeDisassembler(ERC.ProcessInfo)
        VB: ERC.Utilities.OpcodeDisassembler.OpcodeDisassembler(ERC.ProcessInfo)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Opcode_Disassembler.cs
        startLine: 15
      summary: "\nConstructor.\n"
      example: []
      syntax:
        content:
          CSharp: public OpcodeDisassembler(ProcessInfo parent)
          VB: Public Sub New(parent As ProcessInfo)
        parameters:
        - id: parent
          type: ERC.ProcessInfo
          description: ProcessInfo object to be inherited from.
      overload: ERC.Utilities.OpcodeDisassembler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.OpcodeDisassembler.Disassemble(System.Byte[])
      commentId: M:ERC.Utilities.OpcodeDisassembler.Disassemble(System.Byte[])
      language: CSharp
      name:
        CSharp: Disassemble(Byte[])
        VB: Disassemble(Byte())
      nameWithType:
        CSharp: OpcodeDisassembler.Disassemble(Byte[])
        VB: OpcodeDisassembler.Disassemble(Byte())
      qualifiedName:
        CSharp: ERC.Utilities.OpcodeDisassembler.Disassemble(System.Byte[])
        VB: ERC.Utilities.OpcodeDisassembler.Disassemble(System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: Disassemble
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Opcode_Disassembler.cs
        startLine: 25
      summary: "\nDisassembles opcodes into the associated instructions. Takes a byte array containing opcodes. \n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<string> Disassemble(byte[] opcodes)
          VB: Public Function Disassemble(opcodes As Byte()) As ErcResult(Of String)
        parameters:
        - id: opcodes
          type: System.Byte[]
          description: The opcodes to be disassembled
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ERC_Result containing associated instructions.
      overload: ERC.Utilities.OpcodeDisassembler.Disassemble*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.OpcodeDisassembler.Disassemble(System.Byte[],ERC.MachineType)
      commentId: M:ERC.Utilities.OpcodeDisassembler.Disassemble(System.Byte[],ERC.MachineType)
      language: CSharp
      name:
        CSharp: Disassemble(Byte[], MachineType)
        VB: Disassemble(Byte(), MachineType)
      nameWithType:
        CSharp: OpcodeDisassembler.Disassemble(Byte[], MachineType)
        VB: OpcodeDisassembler.Disassemble(Byte(), MachineType)
      qualifiedName:
        CSharp: ERC.Utilities.OpcodeDisassembler.Disassemble(System.Byte[], ERC.MachineType)
        VB: ERC.Utilities.OpcodeDisassembler.Disassemble(System.Byte(), ERC.MachineType)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: Disassemble
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Opcode_Disassembler.cs
        startLine: 84
      summary: "\nDisassembles opcodes into the associated instructions. Takes a byte array containing opcodes, a MachineType of I386 or x64, \nan instance of the ERC_Core object and returns an ERC_Result containing associated instructions.\n"
      example: []
      syntax:
        content:
          CSharp: public static ErcResult<string> Disassemble(byte[] opcodes, MachineType machineType)
          VB: Public Shared Function Disassemble(opcodes As Byte(), machineType As MachineType) As ErcResult(Of String)
        parameters:
        - id: opcodes
          type: System.Byte[]
          description: A byte array containing opcodes to be disassembled
        - id: machineType
          type: ERC.MachineType
          description: a ERC.MachineType of either I386 or x64
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ERC_Result containing associated instructions.
      overload: ERC.Utilities.OpcodeDisassembler.Disassemble*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ERC.Utilities.PatternTools
    commentId: T:ERC.Utilities.PatternTools
    language: CSharp
    name:
      CSharp: PatternTools
      VB: PatternTools
    nameWithType:
      CSharp: PatternTools
      VB: PatternTools
    qualifiedName:
      CSharp: ERC.Utilities.PatternTools
      VB: ERC.Utilities.PatternTools
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: PatternTools
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Pattern_Tools.cs
      startLine: 10
    summary: "\nStatic class used to build a non repeating pattern and identify the position of a string in a non repeating pattern.\n"
    example: []
    syntax:
      content:
        CSharp: public static class PatternTools
        VB: Public Module PatternTools
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ERC.Utilities.PatternTools.PatternCreate(System.Int32,ERC.ErcCore,System.Boolean)
      commentId: M:ERC.Utilities.PatternTools.PatternCreate(System.Int32,ERC.ErcCore,System.Boolean)
      language: CSharp
      name:
        CSharp: PatternCreate(Int32, ErcCore, Boolean)
        VB: PatternCreate(Int32, ErcCore, Boolean)
      nameWithType:
        CSharp: PatternTools.PatternCreate(Int32, ErcCore, Boolean)
        VB: PatternTools.PatternCreate(Int32, ErcCore, Boolean)
      qualifiedName:
        CSharp: ERC.Utilities.PatternTools.PatternCreate(System.Int32, ERC.ErcCore, System.Boolean)
        VB: ERC.Utilities.PatternTools.PatternCreate(System.Int32, ERC.ErcCore, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: PatternCreate
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Pattern_Tools.cs
        startLine: 26
      summary: "\nCreates a string of non repeating characters.\n"
      example: []
      syntax:
        content:
          CSharp: public static ErcResult<string> PatternCreate(int length, ErcCore core, bool extended = false)
          VB: Public Shared Function PatternCreate(length As Integer, core As ErcCore, extended As Boolean = False) As ErcResult(Of String)
        parameters:
        - id: length
          type: System.Int32
          description: The length of the pattern to be created as integer
        - id: core
          type: ERC.ErcCore
          description: An ErcCore object
        - id: extended
          type: System.Boolean
          description: (Optional) bool specifying whether the extended character set should be used
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ErcResult string containing the generated pattern
      overload: ERC.Utilities.PatternTools.PatternCreate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.PatternTools.PatternOffset(System.String,ERC.ErcCore,System.Boolean)
      commentId: M:ERC.Utilities.PatternTools.PatternOffset(System.String,ERC.ErcCore,System.Boolean)
      language: CSharp
      name:
        CSharp: PatternOffset(String, ErcCore, Boolean)
        VB: PatternOffset(String, ErcCore, Boolean)
      nameWithType:
        CSharp: PatternTools.PatternOffset(String, ErcCore, Boolean)
        VB: PatternTools.PatternOffset(String, ErcCore, Boolean)
      qualifiedName:
        CSharp: ERC.Utilities.PatternTools.PatternOffset(System.String, ERC.ErcCore, System.Boolean)
        VB: ERC.Utilities.PatternTools.PatternOffset(System.String, ERC.ErcCore, System.Boolean)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: PatternOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Pattern_Tools.cs
        startLine: 126
      summary: "\nTakes a string of characters and returns the location of the first character in a pattern created by Pattern_Create.\n"
      example: []
      syntax:
        content:
          CSharp: public static ErcResult<string> PatternOffset(string pattern, ErcCore core, bool extended = false)
          VB: Public Shared Function PatternOffset(pattern As String, core As ErcCore, extended As Boolean = False) As ErcResult(Of String)
        parameters:
        - id: pattern
          type: System.String
          description: The pattern to be searched for.
        - id: core
          type: ERC.ErcCore
          description: An ErcCore object
        - id: extended
          type: System.Boolean
          description: (Optional) bool specifying whether the extended character set should be used
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ErcResult int containing the offset of the supplied pattern within the generated pattern
      overload: ERC.Utilities.PatternTools.PatternOffset*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ERC.Utilities.Payloads
    commentId: T:ERC.Utilities.Payloads
    language: CSharp
    name:
      CSharp: Payloads
      VB: Payloads
    nameWithType:
      CSharp: Payloads
      VB: Payloads
    qualifiedName:
      CSharp: ERC.Utilities.Payloads
      VB: ERC.Utilities.Payloads
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: Payloads
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
      startLine: 9
    summary: "\nA collecton of methods which generate payloads.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Payloads
        VB: Public Module Payloads
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ERC.Utilities.Payloads.DefaultEgg
      commentId: F:ERC.Utilities.Payloads.DefaultEgg
      language: CSharp
      name:
        CSharp: DefaultEgg
        VB: DefaultEgg
      nameWithType:
        CSharp: Payloads.DefaultEgg
        VB: Payloads.DefaultEgg
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.DefaultEgg
        VB: ERC.Utilities.Payloads.DefaultEgg
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: DefaultEgg
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 35
      summary: "\nDefault egg hunter tag.\n"
      example: []
      syntax:
        content:
          CSharp: public static string DefaultEgg
          VB: Public Shared DefaultEgg As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.EggHunter641
      commentId: F:ERC.Utilities.Payloads.EggHunter641
      language: CSharp
      name:
        CSharp: EggHunter641
        VB: EggHunter641
      nameWithType:
        CSharp: Payloads.EggHunter641
        VB: Payloads.EggHunter641
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.EggHunter641
        VB: ERC.Utilities.Payloads.EggHunter641
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: EggHunter641
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 40
      summary: "\nA 64 bit egg hunter.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] EggHunter641
          VB: Public Shared EggHunter641 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.EggHunter642
      commentId: F:ERC.Utilities.Payloads.EggHunter642
      language: CSharp
      name:
        CSharp: EggHunter642
        VB: EggHunter642
      nameWithType:
        CSharp: Payloads.EggHunter642
        VB: Payloads.EggHunter642
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.EggHunter642
        VB: ERC.Utilities.Payloads.EggHunter642
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: EggHunter642
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 51
      summary: "\nA second 64 bit egg hunter.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] EggHunter642
          VB: Public Shared EggHunter642 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.EggHunter32
      commentId: F:ERC.Utilities.Payloads.EggHunter32
      language: CSharp
      name:
        CSharp: EggHunter32
        VB: EggHunter32
      nameWithType:
        CSharp: Payloads.EggHunter32
        VB: Payloads.EggHunter32
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.EggHunter32
        VB: ERC.Utilities.Payloads.EggHunter32
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: EggHunter32
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 60
      summary: "\nA 32 bit egg hunter.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] EggHunter32
          VB: Public Shared EggHunter32 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.EggHunterWOW64
      commentId: F:ERC.Utilities.Payloads.EggHunterWOW64
      language: CSharp
      name:
        CSharp: EggHunterWOW64
        VB: EggHunterWOW64
      nameWithType:
        CSharp: Payloads.EggHunterWOW64
        VB: Payloads.EggHunterWOW64
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.EggHunterWOW64
        VB: ERC.Utilities.Payloads.EggHunterWOW64
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: EggHunterWOW64
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 69
      summary: "\nAn egg hunter that will work on 32 bit systems or 32 bit processes running under WOW64.\n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] EggHunterWOW64
          VB: Public Shared EggHunterWOW64 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.ByteArrayConstructor(System.Byte[])
      commentId: M:ERC.Utilities.Payloads.ByteArrayConstructor(System.Byte[])
      language: CSharp
      name:
        CSharp: ByteArrayConstructor(Byte[])
        VB: ByteArrayConstructor(Byte())
      nameWithType:
        CSharp: Payloads.ByteArrayConstructor(Byte[])
        VB: Payloads.ByteArrayConstructor(Byte())
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.ByteArrayConstructor(System.Byte[])
        VB: ERC.Utilities.Payloads.ByteArrayConstructor(System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: ByteArrayConstructor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 85
      summary: "\nCreates an array of all possible byte values except those passed to the function. \n"
      example: []
      syntax:
        content:
          CSharp: public static byte[] ByteArrayConstructor(byte[] unwantedBytes)
          VB: Public Shared Function ByteArrayConstructor(unwantedBytes As Byte()) As Byte()
        parameters:
        - id: unwantedBytes
          type: System.Byte[]
          description: Takes a byte array of bytes to be excluded
        return:
          type: System.Byte[]
          description: Returns an array of all other possible bytes.
      overload: ERC.Utilities.Payloads.ByteArrayConstructor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.EggHunterConstructor(System.String)
      commentId: M:ERC.Utilities.Payloads.EggHunterConstructor(System.String)
      language: CSharp
      name:
        CSharp: EggHunterConstructor(String)
        VB: EggHunterConstructor(String)
      nameWithType:
        CSharp: Payloads.EggHunterConstructor(String)
        VB: Payloads.EggHunterConstructor(String)
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.EggHunterConstructor(System.String)
        VB: ERC.Utilities.Payloads.EggHunterConstructor(System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: EggHunterConstructor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 126
      summary: "\nGenerates a selection of EggHunter payloads. A custom tag can be specified, if no tag is specified EggHunters will search for the default tag (ERCD)\n"
      example: []
      syntax:
        content:
          CSharp: public static Dictionary<string, byte[]> EggHunterConstructor(string tag = null)
          VB: Public Shared Function EggHunterConstructor(tag As String = Nothing) As Dictionary(Of String, Byte())
        parameters:
        - id: tag
          type: System.String
          description: A custom tag which the egg hunters will search for.
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Byte[]}
          description: Returns a dictionary containing a list of EggHunters and string detailing them
      overload: ERC.Utilities.Payloads.EggHunterConstructor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.PopPopRet(System.Byte[])
      commentId: M:ERC.Utilities.Payloads.PopPopRet(System.Byte[])
      language: CSharp
      name:
        CSharp: PopPopRet(Byte[])
        VB: PopPopRet(Byte())
      nameWithType:
        CSharp: Payloads.PopPopRet(Byte[])
        VB: Payloads.PopPopRet(Byte())
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.PopPopRet(System.Byte[])
        VB: ERC.Utilities.Payloads.PopPopRet(System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: PopPopRet
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 200
      summary: "\nFinds all instances of POP X POP X RET in a given byte array. \n"
      example: []
      syntax:
        content:
          CSharp: public static List<int> PopPopRet(byte[] data)
          VB: Public Shared Function PopPopRet(data As Byte()) As List(Of Integer)
        parameters:
        - id: data
          type: System.Byte[]
          description: Byte array to be searched
        return:
          type: System.Collections.Generic.List{System.Int32}
          description: Returns an array of integers containing the offsets of the instruction sets.
      overload: ERC.Utilities.Payloads.PopPopRet*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.ByteCompare(ERC.ProcessInfo,System.IntPtr,System.Byte[])
      commentId: M:ERC.Utilities.Payloads.ByteCompare(ERC.ProcessInfo,System.IntPtr,System.Byte[])
      language: CSharp
      name:
        CSharp: ByteCompare(ProcessInfo, IntPtr, Byte[])
        VB: ByteCompare(ProcessInfo, IntPtr, Byte())
      nameWithType:
        CSharp: Payloads.ByteCompare(ProcessInfo, IntPtr, Byte[])
        VB: Payloads.ByteCompare(ProcessInfo, IntPtr, Byte())
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.ByteCompare(ERC.ProcessInfo, System.IntPtr, System.Byte[])
        VB: ERC.Utilities.Payloads.ByteCompare(ERC.ProcessInfo, System.IntPtr, System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: ByteCompare
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 305
      summary: "\nCompares a byte array with an area in memory of equal size. This method should be used in conjunction with the ByteArrayConstructor to identify \nbytes which can not be passed into a program without corrupting the input.\n"
      example: []
      syntax:
        content:
          CSharp: public static Tuple<bool, byte[], byte[]> ByteCompare(ProcessInfo info, IntPtr startAddress, byte[] bytes)
          VB: Public Shared Function ByteCompare(info As ProcessInfo, startAddress As IntPtr, bytes As Byte()) As Tuple(Of Boolean, Byte(), Byte())
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The process to compare memory from
        - id: startAddress
          type: System.IntPtr
          description: The address at which to start the comparison
        - id: bytes
          type: System.Byte[]
          description: The byte array containing the bytes to be compared
        return:
          type: System.Tuple{System.Boolean,System.Byte[],System.Byte[]}
          description: "Returns a Tuple containing a bool which is true if the comparison was identical and false if it was not, a byte array containing \nthe bytes provided and a byte array containing the bytes read from process memory"
      overload: ERC.Utilities.Payloads.ByteCompare*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.Payloads.ByteCompare(ERC.ProcessInfo,System.IntPtr,System.String)
      commentId: M:ERC.Utilities.Payloads.ByteCompare(ERC.ProcessInfo,System.IntPtr,System.String)
      language: CSharp
      name:
        CSharp: ByteCompare(ProcessInfo, IntPtr, String)
        VB: ByteCompare(ProcessInfo, IntPtr, String)
      nameWithType:
        CSharp: Payloads.ByteCompare(ProcessInfo, IntPtr, String)
        VB: Payloads.ByteCompare(ProcessInfo, IntPtr, String)
      qualifiedName:
        CSharp: ERC.Utilities.Payloads.ByteCompare(ERC.ProcessInfo, System.IntPtr, System.String)
        VB: ERC.Utilities.Payloads.ByteCompare(ERC.ProcessInfo, System.IntPtr, System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: ByteCompare
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\Payloads.cs
        startLine: 328
      summary: "\nCompares a byte array with an area in memory of equal size. This method should be used in conjunction with the ByteArrayConstructor to identify \nbytes which can not be passed into a program without corrupting the input.\n"
      example: []
      syntax:
        content:
          CSharp: public static Tuple<bool, byte[], byte[]> ByteCompare(ProcessInfo info, IntPtr startAddress, string byteFilePath)
          VB: Public Shared Function ByteCompare(info As ProcessInfo, startAddress As IntPtr, byteFilePath As String) As Tuple(Of Boolean, Byte(), Byte())
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: The process to compare memory from
        - id: startAddress
          type: System.IntPtr
          description: The address at which to start the comparison
        - id: byteFilePath
          type: System.String
          description: The path to a file containing the bytes to be compared
        return:
          type: System.Tuple{System.Boolean,System.Byte[],System.Byte[]}
          description: "Returns a Tuple containing a bool which is true if the comparison was identical and false if it was not, a byte array containing \nthe bytes provided and a byte array containing the bytes read from process memory"
      overload: ERC.Utilities.Payloads.ByteCompare*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ERC.Utilities.PtrRemover
    commentId: T:ERC.Utilities.PtrRemover
    language: CSharp
    name:
      CSharp: PtrRemover
      VB: PtrRemover
    nameWithType:
      CSharp: PtrRemover
      VB: PtrRemover
    qualifiedName:
      CSharp: ERC.Utilities.PtrRemover
      VB: ERC.Utilities.PtrRemover
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: PtrRemover
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\PtrRemover.cs
      startLine: 9
    summary: "\nContains methods for identifying and removing pointers to unwanted data.\n"
    example: []
    syntax:
      content:
        CSharp: public static class PtrRemover
        VB: Public Module PtrRemover
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: ERC.Utilities.PtrRemover.RemovePointers(ERC.MachineType,System.Collections.Generic.List{System.IntPtr},System.Byte[])
      commentId: M:ERC.Utilities.PtrRemover.RemovePointers(ERC.MachineType,System.Collections.Generic.List{System.IntPtr},System.Byte[])
      language: CSharp
      name:
        CSharp: RemovePointers(MachineType, List<IntPtr>, Byte[])
        VB: RemovePointers(MachineType, List(Of IntPtr), Byte())
      nameWithType:
        CSharp: PtrRemover.RemovePointers(MachineType, List<IntPtr>, Byte[])
        VB: PtrRemover.RemovePointers(MachineType, List(Of IntPtr), Byte())
      qualifiedName:
        CSharp: ERC.Utilities.PtrRemover.RemovePointers(ERC.MachineType, System.Collections.Generic.List<System.IntPtr>, System.Byte[])
        VB: ERC.Utilities.PtrRemover.RemovePointers(ERC.MachineType, System.Collections.Generic.List(Of System.IntPtr), System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: RemovePointers
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\PtrRemover.cs
        startLine: 18
      summary: "\nRemoves pointers which contain unwanted bytes. \n"
      example: []
      syntax:
        content:
          CSharp: public static List<IntPtr> RemovePointers(MachineType mt, List<IntPtr> srcList, byte[] bytes)
          VB: Public Shared Function RemovePointers(mt As MachineType, srcList As List(Of IntPtr), bytes As Byte()) As List(Of IntPtr)
        parameters:
        - id: mt
          type: ERC.MachineType
          description: MachineType architecture of the associated process.
        - id: srcList
          type: System.Collections.Generic.List{System.IntPtr}
          description: The list from which to remove the pointers
        - id: bytes
          type: System.Byte[]
          description: If a pointer contains any of these bytes it will be discarded
        return:
          type: System.Collections.Generic.List{System.IntPtr}
          description: Returns a ErcResult of List IntPtr
      overload: ERC.Utilities.PtrRemover.RemovePointers*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.PtrRemover.RemovePointers(ERC.MachineType,System.Collections.Generic.Dictionary{System.IntPtr,System.String},System.Byte[])
      commentId: M:ERC.Utilities.PtrRemover.RemovePointers(ERC.MachineType,System.Collections.Generic.Dictionary{System.IntPtr,System.String},System.Byte[])
      language: CSharp
      name:
        CSharp: RemovePointers(MachineType, Dictionary<IntPtr, String>, Byte[])
        VB: RemovePointers(MachineType, Dictionary(Of IntPtr, String), Byte())
      nameWithType:
        CSharp: PtrRemover.RemovePointers(MachineType, Dictionary<IntPtr, String>, Byte[])
        VB: PtrRemover.RemovePointers(MachineType, Dictionary(Of IntPtr, String), Byte())
      qualifiedName:
        CSharp: ERC.Utilities.PtrRemover.RemovePointers(ERC.MachineType, System.Collections.Generic.Dictionary<System.IntPtr, System.String>, System.Byte[])
        VB: ERC.Utilities.PtrRemover.RemovePointers(ERC.MachineType, System.Collections.Generic.Dictionary(Of System.IntPtr, System.String), System.Byte())
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: RemovePointers
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\PtrRemover.cs
        startLine: 74
      summary: "\nRemoves pointers which contain unwanted bytes. \n"
      example: []
      syntax:
        content:
          CSharp: public static Dictionary<IntPtr, string> RemovePointers(MachineType mt, Dictionary<IntPtr, string> srcList, byte[] bytes)
          VB: Public Shared Function RemovePointers(mt As MachineType, srcList As Dictionary(Of IntPtr, String), bytes As Byte()) As Dictionary(Of IntPtr, String)
        parameters:
        - id: mt
          type: ERC.MachineType
          description: MachineType architecture of the associated process.
        - id: srcList
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
          description: The list from which to remove the pointers
        - id: bytes
          type: System.Byte[]
          description: If a pointer contains any of these bytes it will be discarded
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
          description: Returns a ErcResult of Dictionary IntPtr, String
      overload: ERC.Utilities.PtrRemover.RemovePointers*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.PtrRemover.RemovePointersProtection(ERC.ProcessInfo,System.Collections.Generic.List{System.IntPtr},System.String)
      commentId: M:ERC.Utilities.PtrRemover.RemovePointersProtection(ERC.ProcessInfo,System.Collections.Generic.List{System.IntPtr},System.String)
      language: CSharp
      name:
        CSharp: RemovePointersProtection(ProcessInfo, List<IntPtr>, String)
        VB: RemovePointersProtection(ProcessInfo, List(Of IntPtr), String)
      nameWithType:
        CSharp: PtrRemover.RemovePointersProtection(ProcessInfo, List<IntPtr>, String)
        VB: PtrRemover.RemovePointersProtection(ProcessInfo, List(Of IntPtr), String)
      qualifiedName:
        CSharp: ERC.Utilities.PtrRemover.RemovePointersProtection(ERC.ProcessInfo, System.Collections.Generic.List<System.IntPtr>, System.String)
        VB: ERC.Utilities.PtrRemover.RemovePointersProtection(ERC.ProcessInfo, System.Collections.Generic.List(Of System.IntPtr), System.String)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: RemovePointersProtection
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\PtrRemover.cs
        startLine: 131
      summary: "\nRemoves pointers from a dictionary when pointers do not have the protection level specified.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<IntPtr> RemovePointersProtection(ProcessInfo info, List<IntPtr> srcList, string protection = "exec")
          VB: Public Shared Function RemovePointersProtection(info As ProcessInfo, srcList As List(Of IntPtr), protection As String = "exec") As List(Of IntPtr)
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: ProcessInfo object of the associated process.
        - id: srcList
          type: System.Collections.Generic.List{System.IntPtr}
          description: List of pointers.
        - id: protection
          type: System.String
          description: Specified protection level of pointers.
        return:
          type: System.Collections.Generic.List{System.IntPtr}
          description: Returns a Dictionary of Intptr, string
      overload: ERC.Utilities.PtrRemover.RemovePointersProtection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: ERC.Utilities.PtrRemover.RemovePointersProtection(ERC.ProcessInfo,System.Collections.Generic.List{System.IntPtr},System.UInt32)
      commentId: M:ERC.Utilities.PtrRemover.RemovePointersProtection(ERC.ProcessInfo,System.Collections.Generic.List{System.IntPtr},System.UInt32)
      language: CSharp
      name:
        CSharp: RemovePointersProtection(ProcessInfo, List<IntPtr>, UInt32)
        VB: RemovePointersProtection(ProcessInfo, List(Of IntPtr), UInt32)
      nameWithType:
        CSharp: PtrRemover.RemovePointersProtection(ProcessInfo, List<IntPtr>, UInt32)
        VB: PtrRemover.RemovePointersProtection(ProcessInfo, List(Of IntPtr), UInt32)
      qualifiedName:
        CSharp: ERC.Utilities.PtrRemover.RemovePointersProtection(ERC.ProcessInfo, System.Collections.Generic.List<System.IntPtr>, System.UInt32)
        VB: ERC.Utilities.PtrRemover.RemovePointersProtection(ERC.ProcessInfo, System.Collections.Generic.List(Of System.IntPtr), System.UInt32)
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: RemovePointersProtection
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\PtrRemover.cs
        startLine: 295
      summary: "\nRemoves pointers from a dictionary when pointers do not have the protection level specified.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<IntPtr> RemovePointersProtection(ProcessInfo info, List<IntPtr> srcList, uint protection)
          VB: Public Shared Function RemovePointersProtection(info As ProcessInfo, srcList As List(Of IntPtr), protection As UInteger) As List(Of IntPtr)
        parameters:
        - id: info
          type: ERC.ProcessInfo
          description: ProcessInfo object of the associated process.
        - id: srcList
          type: System.Collections.Generic.List{System.IntPtr}
          description: List of pointers.
        - id: protection
          type: System.UInt32
          description: Specified protection level of pointers.
        return:
          type: System.Collections.Generic.List{System.IntPtr}
          description: Returns a Dictionary of Intptr, string
      overload: ERC.Utilities.PtrRemover.RemovePointersProtection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: ERC.Utilities.RopChainGenerator32
    commentId: T:ERC.Utilities.RopChainGenerator32
    language: CSharp
    name:
      CSharp: RopChainGenerator32
      VB: RopChainGenerator32
    nameWithType:
      CSharp: RopChainGenerator32
      VB: RopChainGenerator32
    qualifiedName:
      CSharp: ERC.Utilities.RopChainGenerator32
      VB: ERC.Utilities.RopChainGenerator32
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: RopChainGenerator32
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
      startLine: 13
    summary: 'Attempts to create Rop chains from 64 bit processes. '
    example: []
    syntax:
      content:
        CSharp: public class RopChainGenerator32
        VB: Public Class RopChainGenerator32
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.Utilities.RopChainGenerator32.VirtualAllocChain
      commentId: F:ERC.Utilities.RopChainGenerator32.VirtualAllocChain
      language: CSharp
      name:
        CSharp: VirtualAllocChain
        VB: VirtualAllocChain
      nameWithType:
        CSharp: RopChainGenerator32.VirtualAllocChain
        VB: RopChainGenerator32.VirtualAllocChain
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.VirtualAllocChain
        VB: ERC.Utilities.RopChainGenerator32.VirtualAllocChain
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: VirtualAllocChain
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 21
      summary: "\nContains a ROP chain which calls the VirtualAlloc method.\n"
      example: []
      syntax:
        content:
          CSharp: public List<Tuple<byte[], string>> VirtualAllocChain
          VB: Public VirtualAllocChain As List(Of Tuple(Of Byte(), String))
        return:
          type: System.Collections.Generic.List{System.Tuple{System.Byte[],System.String}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.#ctor(ERC.ProcessInfo)
      commentId: M:ERC.Utilities.RopChainGenerator32.#ctor(ERC.ProcessInfo)
      language: CSharp
      name:
        CSharp: RopChainGenerator32(ProcessInfo)
        VB: RopChainGenerator32(ProcessInfo)
      nameWithType:
        CSharp: RopChainGenerator32.RopChainGenerator32(ProcessInfo)
        VB: RopChainGenerator32.RopChainGenerator32(ProcessInfo)
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.RopChainGenerator32(ERC.ProcessInfo)
        VB: ERC.Utilities.RopChainGenerator32.RopChainGenerator32(ERC.ProcessInfo)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 36
      summary: "\nConstructor.\n"
      example: []
      syntax:
        content:
          CSharp: public RopChainGenerator32(ProcessInfo _info)
          VB: Public Sub New(_info As ProcessInfo)
        parameters:
        - id: _info
          type: ERC.ProcessInfo
          description: The ProcessInfo object.
      overload: ERC.Utilities.RopChainGenerator32.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.GenerateRopChain32(System.Byte[],System.Byte[],System.Collections.Generic.List{System.String})
      commentId: M:ERC.Utilities.RopChainGenerator32.GenerateRopChain32(System.Byte[],System.Byte[],System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GenerateRopChain32(Byte[], Byte[], List<String>)
        VB: GenerateRopChain32(Byte(), Byte(), List(Of String))
      nameWithType:
        CSharp: RopChainGenerator32.GenerateRopChain32(Byte[], Byte[], List<String>)
        VB: RopChainGenerator32.GenerateRopChain32(Byte(), Byte(), List(Of String))
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.GenerateRopChain32(System.Byte[], System.Byte[], System.Collections.Generic.List<System.String>)
        VB: ERC.Utilities.RopChainGenerator32.GenerateRopChain32(System.Byte(), System.Byte(), System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: GenerateRopChain32
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 152
      summary: "\nCreates a RopChain for a specific process.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<string> GenerateRopChain32(byte[] ptrsToExclude, byte[] startAddress = null, List<string> excludes = null)
          VB: Public Function GenerateRopChain32(ptrsToExclude As Byte(), startAddress As Byte() = Nothing, excludes As List(Of String) = Nothing) As ErcResult(Of String)
        parameters:
        - id: ptrsToExclude
          type: System.Byte[]
          description: Takes a byte array of values used to disqualify ROP gadgets
        - id: startAddress
          type: System.Byte[]
          description: A Address to be used as the start location for which memory will be made executable
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: A list of modules to be excluded from the search for ROP gadgets
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ErcResult string containing
      overload: ERC.Utilities.RopChainGenerator32.GenerateRopChain32*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.GenerateRopChain32(System.Byte[],System.Collections.Generic.List{System.String})
      commentId: M:ERC.Utilities.RopChainGenerator32.GenerateRopChain32(System.Byte[],System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GenerateRopChain32(Byte[], List<String>)
        VB: GenerateRopChain32(Byte(), List(Of String))
      nameWithType:
        CSharp: RopChainGenerator32.GenerateRopChain32(Byte[], List<String>)
        VB: RopChainGenerator32.GenerateRopChain32(Byte(), List(Of String))
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.GenerateRopChain32(System.Byte[], System.Collections.Generic.List<System.String>)
        VB: ERC.Utilities.RopChainGenerator32.GenerateRopChain32(System.Byte(), System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: GenerateRopChain32
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 238
      summary: "\nCreates a RopChain for a specific process.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<string> GenerateRopChain32(byte[] startAddress = null, List<string> excludes = null)
          VB: Public Function GenerateRopChain32(startAddress As Byte() = Nothing, excludes As List(Of String) = Nothing) As ErcResult(Of String)
        parameters:
        - id: startAddress
          type: System.Byte[]
          description: A Address to be used as the start location for which memory will be made executable
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: A list of modules to be excluded from the search for ROP gadgets
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ErcResult string containing
      overload: ERC.Utilities.RopChainGenerator32.GenerateRopChain32*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Utilities.RopChainGenerator32.X86Lists
    commentId: T:ERC.Utilities.RopChainGenerator32.X86Lists
    language: CSharp
    name:
      CSharp: RopChainGenerator32.X86Lists
      VB: RopChainGenerator32.X86Lists
    nameWithType:
      CSharp: RopChainGenerator32.X86Lists
      VB: RopChainGenerator32.X86Lists
    qualifiedName:
      CSharp: ERC.Utilities.RopChainGenerator32.X86Lists
      VB: ERC.Utilities.RopChainGenerator32.X86Lists
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: X86Lists
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
      startLine: 2553
    summary: "\nContains lists of instructions for specific registers.\n"
    example: []
    syntax:
      content:
        CSharp: public class X86Lists
        VB: Public Class X86Lists
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushEax
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEax
      language: CSharp
      name:
        CSharp: pushEax
        VB: pushEax
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushEax
        VB: RopChainGenerator32.X86Lists.pushEax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushEax
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushEax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushEax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2558
      summary: "\npushEax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushEax
          VB: Public pushEax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEbx
      language: CSharp
      name:
        CSharp: pushEbx
        VB: pushEbx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushEbx
        VB: RopChainGenerator32.X86Lists.pushEbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushEbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2562
      summary: "\npushEbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushEbx
          VB: Public pushEbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushEcx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEcx
      language: CSharp
      name:
        CSharp: pushEcx
        VB: pushEcx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushEcx
        VB: RopChainGenerator32.X86Lists.pushEcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushEcx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushEcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushEcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2566
      summary: "\npushEcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushEcx
          VB: Public pushEcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEdx
      language: CSharp
      name:
        CSharp: pushEdx
        VB: pushEdx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushEdx
        VB: RopChainGenerator32.X86Lists.pushEdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushEdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2570
      summary: "\npushEdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushEdx
          VB: Public pushEdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEsp
      language: CSharp
      name:
        CSharp: pushEsp
        VB: pushEsp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushEsp
        VB: RopChainGenerator32.X86Lists.pushEsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushEsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2574
      summary: "\npushEsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushEsp
          VB: Public pushEsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEbp
      language: CSharp
      name:
        CSharp: pushEbp
        VB: pushEbp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushEbp
        VB: RopChainGenerator32.X86Lists.pushEbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushEbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2578
      summary: "\npushEbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushEbp
          VB: Public pushEbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEsi
      language: CSharp
      name:
        CSharp: pushEsi
        VB: pushEsi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushEsi
        VB: RopChainGenerator32.X86Lists.pushEsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushEsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2582
      summary: "\npushEsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushEsi
          VB: Public pushEsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEdi
      language: CSharp
      name:
        CSharp: pushEdi
        VB: pushEdi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushEdi
        VB: RopChainGenerator32.X86Lists.pushEdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushEdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2586
      summary: "\npushEdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushEdi
          VB: Public pushEdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.jmpEsp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.jmpEsp
      language: CSharp
      name:
        CSharp: jmpEsp
        VB: jmpEsp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.jmpEsp
        VB: RopChainGenerator32.X86Lists.jmpEsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.jmpEsp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.jmpEsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: jmpEsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2590
      summary: "\njmpEsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> jmpEsp
          VB: Public jmpEsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.callEsp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.callEsp
      language: CSharp
      name:
        CSharp: callEsp
        VB: callEsp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.callEsp
        VB: RopChainGenerator32.X86Lists.callEsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.callEsp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.callEsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: callEsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2594
      summary: "\ncallEsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> callEsp
          VB: Public callEsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.xorEax
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEax
      language: CSharp
      name:
        CSharp: xorEax
        VB: xorEax
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.xorEax
        VB: RopChainGenerator32.X86Lists.xorEax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.xorEax
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.xorEax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorEax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2598
      summary: "\nxorEax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorEax
          VB: Public xorEax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.xorEbx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEbx
      language: CSharp
      name:
        CSharp: xorEbx
        VB: xorEbx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.xorEbx
        VB: RopChainGenerator32.X86Lists.xorEbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.xorEbx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.xorEbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorEbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2602
      summary: "\nxorEbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorEbx
          VB: Public xorEbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.xorEcx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEcx
      language: CSharp
      name:
        CSharp: xorEcx
        VB: xorEcx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.xorEcx
        VB: RopChainGenerator32.X86Lists.xorEcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.xorEcx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.xorEcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorEcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2606
      summary: "\nxorEcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorEcx
          VB: Public xorEcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEdx
      language: CSharp
      name:
        CSharp: xorEdx
        VB: xorEdx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.xorEdx
        VB: RopChainGenerator32.X86Lists.xorEdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorEdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2610
      summary: "\nxorEdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorEdx
          VB: Public xorEdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.xorEsi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEsi
      language: CSharp
      name:
        CSharp: xorEsi
        VB: xorEsi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.xorEsi
        VB: RopChainGenerator32.X86Lists.xorEsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.xorEsi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.xorEsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorEsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2614
      summary: "\nxorEsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorEsi
          VB: Public xorEsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEdi
      language: CSharp
      name:
        CSharp: xorEdi
        VB: xorEdi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.xorEdi
        VB: RopChainGenerator32.X86Lists.xorEdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorEdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2618
      summary: "\nxorEdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorEdi
          VB: Public xorEdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.popEax
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEax
      language: CSharp
      name:
        CSharp: popEax
        VB: popEax
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.popEax
        VB: RopChainGenerator32.X86Lists.popEax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.popEax
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.popEax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popEax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2622
      summary: "\npopEax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popEax
          VB: Public popEax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.popEbx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEbx
      language: CSharp
      name:
        CSharp: popEbx
        VB: popEbx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.popEbx
        VB: RopChainGenerator32.X86Lists.popEbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.popEbx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.popEbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popEbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2626
      summary: "\npopEbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popEbx
          VB: Public popEbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.popEcx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEcx
      language: CSharp
      name:
        CSharp: popEcx
        VB: popEcx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.popEcx
        VB: RopChainGenerator32.X86Lists.popEcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.popEcx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.popEcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popEcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2630
      summary: "\npopEcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popEcx
          VB: Public popEcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.popEdx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEdx
      language: CSharp
      name:
        CSharp: popEdx
        VB: popEdx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.popEdx
        VB: RopChainGenerator32.X86Lists.popEdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.popEdx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.popEdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popEdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2634
      summary: "\npopEdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popEdx
          VB: Public popEdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.popEsp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEsp
      language: CSharp
      name:
        CSharp: popEsp
        VB: popEsp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.popEsp
        VB: RopChainGenerator32.X86Lists.popEsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.popEsp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.popEsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popEsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2638
      summary: "\npopEsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popEsp
          VB: Public popEsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.popEbp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEbp
      language: CSharp
      name:
        CSharp: popEbp
        VB: popEbp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.popEbp
        VB: RopChainGenerator32.X86Lists.popEbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.popEbp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.popEbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popEbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2642
      summary: "\npopEbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popEbp
          VB: Public popEbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.popEsi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEsi
      language: CSharp
      name:
        CSharp: popEsi
        VB: popEsi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.popEsi
        VB: RopChainGenerator32.X86Lists.popEsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.popEsi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.popEsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popEsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2646
      summary: "\npopEsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popEsi
          VB: Public popEsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.popEdi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEdi
      language: CSharp
      name:
        CSharp: popEdi
        VB: popEdi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.popEdi
        VB: RopChainGenerator32.X86Lists.popEdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.popEdi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.popEdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popEdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2650
      summary: "\npopEdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popEdi
          VB: Public popEdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.pushad
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushad
      language: CSharp
      name:
        CSharp: pushad
        VB: pushad
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.pushad
        VB: RopChainGenerator32.X86Lists.pushad
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.pushad
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.pushad
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushad
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2654
      summary: "\npushad list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushad
          VB: Public pushad As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.incEax
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEax
      language: CSharp
      name:
        CSharp: incEax
        VB: incEax
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.incEax
        VB: RopChainGenerator32.X86Lists.incEax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.incEax
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.incEax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incEax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2658
      summary: "\nincEax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incEax
          VB: Public incEax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.incEbx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEbx
      language: CSharp
      name:
        CSharp: incEbx
        VB: incEbx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.incEbx
        VB: RopChainGenerator32.X86Lists.incEbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.incEbx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.incEbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incEbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2662
      summary: "\nincEbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incEbx
          VB: Public incEbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.incEcx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEcx
      language: CSharp
      name:
        CSharp: incEcx
        VB: incEcx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.incEcx
        VB: RopChainGenerator32.X86Lists.incEcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.incEcx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.incEcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incEcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2666
      summary: "\nincEcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incEcx
          VB: Public incEcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.incEdx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEdx
      language: CSharp
      name:
        CSharp: incEdx
        VB: incEdx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.incEdx
        VB: RopChainGenerator32.X86Lists.incEdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.incEdx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.incEdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incEdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2670
      summary: "\nincEdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incEdx
          VB: Public incEdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.incEbp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEbp
      language: CSharp
      name:
        CSharp: incEbp
        VB: incEbp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.incEbp
        VB: RopChainGenerator32.X86Lists.incEbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.incEbp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.incEbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incEbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2674
      summary: "\nincEbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incEbp
          VB: Public incEbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.incEsp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEsp
      language: CSharp
      name:
        CSharp: incEsp
        VB: incEsp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.incEsp
        VB: RopChainGenerator32.X86Lists.incEsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.incEsp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.incEsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incEsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2678
      summary: "\nincEsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incEsp
          VB: Public incEsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.incEsi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEsi
      language: CSharp
      name:
        CSharp: incEsi
        VB: incEsi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.incEsi
        VB: RopChainGenerator32.X86Lists.incEsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.incEsi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.incEsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incEsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2682
      summary: "\nincEsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incEsi
          VB: Public incEsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.incEdi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEdi
      language: CSharp
      name:
        CSharp: incEdi
        VB: incEdi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.incEdi
        VB: RopChainGenerator32.X86Lists.incEdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.incEdi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.incEdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incEdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2686
      summary: "\nincEdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incEdi
          VB: Public incEdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.decEax
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEax
      language: CSharp
      name:
        CSharp: decEax
        VB: decEax
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.decEax
        VB: RopChainGenerator32.X86Lists.decEax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.decEax
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.decEax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decEax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2690
      summary: "\ndecEax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decEax
          VB: Public decEax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.decEbx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEbx
      language: CSharp
      name:
        CSharp: decEbx
        VB: decEbx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.decEbx
        VB: RopChainGenerator32.X86Lists.decEbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.decEbx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.decEbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decEbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2694
      summary: "\ndecEbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decEbx
          VB: Public decEbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.decEcx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEcx
      language: CSharp
      name:
        CSharp: decEcx
        VB: decEcx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.decEcx
        VB: RopChainGenerator32.X86Lists.decEcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.decEcx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.decEcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decEcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2698
      summary: "\ndecEcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decEcx
          VB: Public decEcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.decEdx
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEdx
      language: CSharp
      name:
        CSharp: decEdx
        VB: decEdx
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.decEdx
        VB: RopChainGenerator32.X86Lists.decEdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.decEdx
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.decEdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decEdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2702
      summary: "\ndecEdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decEdx
          VB: Public decEdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.decEbp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEbp
      language: CSharp
      name:
        CSharp: decEbp
        VB: decEbp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.decEbp
        VB: RopChainGenerator32.X86Lists.decEbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.decEbp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.decEbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decEbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2706
      summary: "\ndecEbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decEbp
          VB: Public decEbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.decEsp
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEsp
      language: CSharp
      name:
        CSharp: decEsp
        VB: decEsp
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.decEsp
        VB: RopChainGenerator32.X86Lists.decEsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.decEsp
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.decEsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decEsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2710
      summary: "\ndecEsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decEsp
          VB: Public decEsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.decEsi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEsi
      language: CSharp
      name:
        CSharp: decEsi
        VB: decEsi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.decEsi
        VB: RopChainGenerator32.X86Lists.decEsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.decEsi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.decEsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decEsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2714
      summary: "\ndecEsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decEsi
          VB: Public decEsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.decEdi
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEdi
      language: CSharp
      name:
        CSharp: decEdi
        VB: decEdi
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.decEdi
        VB: RopChainGenerator32.X86Lists.decEdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.decEdi
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.decEdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decEdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2718
      summary: "\ndecEdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decEdi
          VB: Public decEdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.add
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.add
      language: CSharp
      name:
        CSharp: add
        VB: add
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.add
        VB: RopChainGenerator32.X86Lists.add
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.add
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.add
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: add
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2722
      summary: "\nadd list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> add
          VB: Public add As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.sub
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.sub
      language: CSharp
      name:
        CSharp: sub
        VB: sub
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.sub
        VB: RopChainGenerator32.X86Lists.sub
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.sub
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.sub
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: sub
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2726
      summary: "\nsub list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> sub
          VB: Public sub As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.mov
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.mov
      language: CSharp
      name:
        CSharp: mov
        VB: mov
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.mov
        VB: RopChainGenerator32.X86Lists.mov
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.mov
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.mov
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: mov
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2730
      summary: "\nmov list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> mov
          VB: Public mov As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator32.X86Lists.and
      commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.and
      language: CSharp
      name:
        CSharp: and
        VB: and
      nameWithType:
        CSharp: RopChainGenerator32.X86Lists.and
        VB: RopChainGenerator32.X86Lists.and
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator32.X86Lists.and
        VB: ERC.Utilities.RopChainGenerator32.X86Lists.and
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: and
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
        startLine: 2734
      summary: "\nand list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> and
          VB: Public and As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Utilities.RopChainGenerator64
    commentId: T:ERC.Utilities.RopChainGenerator64
    language: CSharp
    name:
      CSharp: RopChainGenerator64
      VB: RopChainGenerator64
    nameWithType:
      CSharp: RopChainGenerator64
      VB: RopChainGenerator64
    qualifiedName:
      CSharp: ERC.Utilities.RopChainGenerator64
      VB: ERC.Utilities.RopChainGenerator64
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: RopChainGenerator64
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
      startLine: 9
    summary: 'Attempts to create Rop chains from 64 bit processes. '
    example: []
    syntax:
      content:
        CSharp: public class RopChainGenerator64
        VB: Public Class RopChainGenerator64
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.Utilities.RopChainGenerator64.VirtualAllocChain
      commentId: F:ERC.Utilities.RopChainGenerator64.VirtualAllocChain
      language: CSharp
      name:
        CSharp: VirtualAllocChain
        VB: VirtualAllocChain
      nameWithType:
        CSharp: RopChainGenerator64.VirtualAllocChain
        VB: RopChainGenerator64.VirtualAllocChain
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.VirtualAllocChain
        VB: ERC.Utilities.RopChainGenerator64.VirtualAllocChain
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: VirtualAllocChain
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 16
      summary: "\nContains a ROP chain which calls the VirtualAlloc method.\n"
      example: []
      syntax:
        content:
          CSharp: public List<Tuple<byte[], string>> VirtualAllocChain
          VB: Public VirtualAllocChain As List(Of Tuple(Of Byte(), String))
        return:
          type: System.Collections.Generic.List{System.Tuple{System.Byte[],System.String}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.#ctor(ERC.ProcessInfo)
      commentId: M:ERC.Utilities.RopChainGenerator64.#ctor(ERC.ProcessInfo)
      language: CSharp
      name:
        CSharp: RopChainGenerator64(ProcessInfo)
        VB: RopChainGenerator64(ProcessInfo)
      nameWithType:
        CSharp: RopChainGenerator64.RopChainGenerator64(ProcessInfo)
        VB: RopChainGenerator64.RopChainGenerator64(ProcessInfo)
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.RopChainGenerator64(ERC.ProcessInfo)
        VB: ERC.Utilities.RopChainGenerator64.RopChainGenerator64(ERC.ProcessInfo)
      type: Constructor
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: .ctor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 30
      summary: "\nConstructor\n"
      example: []
      syntax:
        content:
          CSharp: public RopChainGenerator64(ProcessInfo _info)
          VB: Public Sub New(_info As ProcessInfo)
        parameters:
        - id: _info
          type: ERC.ProcessInfo
          description: ProcessInfo object for which a ROP chain will be generated
      overload: ERC.Utilities.RopChainGenerator64.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.GenerateRopChain64(System.Byte[],System.Byte[],System.Collections.Generic.List{System.String})
      commentId: M:ERC.Utilities.RopChainGenerator64.GenerateRopChain64(System.Byte[],System.Byte[],System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GenerateRopChain64(Byte[], Byte[], List<String>)
        VB: GenerateRopChain64(Byte(), Byte(), List(Of String))
      nameWithType:
        CSharp: RopChainGenerator64.GenerateRopChain64(Byte[], Byte[], List<String>)
        VB: RopChainGenerator64.GenerateRopChain64(Byte(), Byte(), List(Of String))
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.GenerateRopChain64(System.Byte[], System.Byte[], System.Collections.Generic.List<System.String>)
        VB: ERC.Utilities.RopChainGenerator64.GenerateRopChain64(System.Byte(), System.Byte(), System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: GenerateRopChain64
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 243
      summary: "\nCreates a RopChain for a specific process.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<string> GenerateRopChain64(byte[] ptrsToExclude, byte[] startAddress = null, List<string> excludes = null)
          VB: Public Function GenerateRopChain64(ptrsToExclude As Byte(), startAddress As Byte() = Nothing, excludes As List(Of String) = Nothing) As ErcResult(Of String)
        parameters:
        - id: ptrsToExclude
          type: System.Byte[]
          description: Takes a byte array of values used to disqualify ROP gadgets
        - id: startAddress
          type: System.Byte[]
          description: A Address to be used as the start location for which memory will be made executable
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: A list of modules to be excluded from the search for ROP gadgets
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ErcResult string containing
      overload: ERC.Utilities.RopChainGenerator64.GenerateRopChain64*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.GenerateRopChain64(System.Byte[],System.Collections.Generic.List{System.String})
      commentId: M:ERC.Utilities.RopChainGenerator64.GenerateRopChain64(System.Byte[],System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GenerateRopChain64(Byte[], List<String>)
        VB: GenerateRopChain64(Byte(), List(Of String))
      nameWithType:
        CSharp: RopChainGenerator64.GenerateRopChain64(Byte[], List<String>)
        VB: RopChainGenerator64.GenerateRopChain64(Byte(), List(Of String))
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.GenerateRopChain64(System.Byte[], System.Collections.Generic.List<System.String>)
        VB: ERC.Utilities.RopChainGenerator64.GenerateRopChain64(System.Byte(), System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: GenerateRopChain64
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 382
      summary: "\nCreates a RopChain for a specific process.\n"
      example: []
      syntax:
        content:
          CSharp: public ErcResult<string> GenerateRopChain64(byte[] startAddress = null, List<string> excludes = null)
          VB: Public Function GenerateRopChain64(startAddress As Byte() = Nothing, excludes As List(Of String) = Nothing) As ErcResult(Of String)
        parameters:
        - id: startAddress
          type: System.Byte[]
          description: A Address to be used as the start location for which memory will be made executable
        - id: excludes
          type: System.Collections.Generic.List{System.String}
          description: A list of modules to be excluded from the search for ROP gadgets
        return:
          type: ERC.ErcResult{System.String}
          description: Returns an ErcResult string containing
      overload: ERC.Utilities.RopChainGenerator64.GenerateRopChain64*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Utilities.RopChainGenerator64.X64Lists
    commentId: T:ERC.Utilities.RopChainGenerator64.X64Lists
    language: CSharp
    name:
      CSharp: RopChainGenerator64.X64Lists
      VB: RopChainGenerator64.X64Lists
    nameWithType:
      CSharp: RopChainGenerator64.X64Lists
      VB: RopChainGenerator64.X64Lists
    qualifiedName:
      CSharp: ERC.Utilities.RopChainGenerator64.X64Lists
      VB: ERC.Utilities.RopChainGenerator64.X64Lists
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Utilities
    source:
      id: X64Lists
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
      startLine: 3801
    summary: "\nContains lists of instructions for specific registers.\n"
    example: []
    syntax:
      content:
        CSharp: public class X64Lists
        VB: Public Class X64Lists
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushRax
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushRax
      language: CSharp
      name:
        CSharp: pushRax
        VB: pushRax
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushRax
        VB: RopChainGenerator64.X64Lists.pushRax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushRax
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushRax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushRax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3806
      summary: "\npushRax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushRax
          VB: Public pushRax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushRcx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushRcx
      language: CSharp
      name:
        CSharp: pushRcx
        VB: pushRcx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushRcx
        VB: RopChainGenerator64.X64Lists.pushRcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushRcx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushRcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushRcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3810
      summary: "\npushRcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushRcx
          VB: Public pushRcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushRdx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushRdx
      language: CSharp
      name:
        CSharp: pushRdx
        VB: pushRdx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushRdx
        VB: RopChainGenerator64.X64Lists.pushRdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushRdx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushRdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushRdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3814
      summary: "\npushRdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushRdx
          VB: Public pushRdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushRbx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushRbx
      language: CSharp
      name:
        CSharp: pushRbx
        VB: pushRbx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushRbx
        VB: RopChainGenerator64.X64Lists.pushRbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushRbx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushRbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushRbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3818
      summary: "\npushRbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushRbx
          VB: Public pushRbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushRsp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushRsp
      language: CSharp
      name:
        CSharp: pushRsp
        VB: pushRsp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushRsp
        VB: RopChainGenerator64.X64Lists.pushRsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushRsp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushRsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushRsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3822
      summary: "\npushRsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushRsp
          VB: Public pushRsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushRbp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushRbp
      language: CSharp
      name:
        CSharp: pushRbp
        VB: pushRbp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushRbp
        VB: RopChainGenerator64.X64Lists.pushRbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushRbp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushRbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushRbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3826
      summary: "\npushRbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushRbp
          VB: Public pushRbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushRsi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushRsi
      language: CSharp
      name:
        CSharp: pushRsi
        VB: pushRsi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushRsi
        VB: RopChainGenerator64.X64Lists.pushRsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushRsi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushRsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushRsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3830
      summary: "\npushRsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushRsi
          VB: Public pushRsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushRdi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushRdi
      language: CSharp
      name:
        CSharp: pushRdi
        VB: pushRdi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushRdi
        VB: RopChainGenerator64.X64Lists.pushRdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushRdi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushRdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushRdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3834
      summary: "\npushRdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushRdi
          VB: Public pushRdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushR8
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushR8
      language: CSharp
      name:
        CSharp: pushR8
        VB: pushR8
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushR8
        VB: RopChainGenerator64.X64Lists.pushR8
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushR8
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushR8
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushR8
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3838
      summary: "\npushR8 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushR8
          VB: Public pushR8 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushR9
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushR9
      language: CSharp
      name:
        CSharp: pushR9
        VB: pushR9
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushR9
        VB: RopChainGenerator64.X64Lists.pushR9
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushR9
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushR9
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushR9
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3842
      summary: "\npushR9 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushR9
          VB: Public pushR9 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushR10
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushR10
      language: CSharp
      name:
        CSharp: pushR10
        VB: pushR10
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushR10
        VB: RopChainGenerator64.X64Lists.pushR10
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushR10
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushR10
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushR10
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3846
      summary: "\npushR10 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushR10
          VB: Public pushR10 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushR11
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushR11
      language: CSharp
      name:
        CSharp: pushR11
        VB: pushR11
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushR11
        VB: RopChainGenerator64.X64Lists.pushR11
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushR11
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushR11
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushR11
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3850
      summary: "\npushR11 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushR11
          VB: Public pushR11 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushR12
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushR12
      language: CSharp
      name:
        CSharp: pushR12
        VB: pushR12
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushR12
        VB: RopChainGenerator64.X64Lists.pushR12
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushR12
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushR12
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushR12
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3854
      summary: "\npushR12 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushR12
          VB: Public pushR12 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushR13
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushR13
      language: CSharp
      name:
        CSharp: pushR13
        VB: pushR13
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushR13
        VB: RopChainGenerator64.X64Lists.pushR13
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushR13
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushR13
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushR13
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3858
      summary: "\npushR13 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushR13
          VB: Public pushR13 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushR14
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushR14
      language: CSharp
      name:
        CSharp: pushR14
        VB: pushR14
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushR14
        VB: RopChainGenerator64.X64Lists.pushR14
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushR14
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushR14
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushR14
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3862
      summary: "\npushR14 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushR14
          VB: Public pushR14 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.pushR15
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.pushR15
      language: CSharp
      name:
        CSharp: pushR15
        VB: pushR15
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.pushR15
        VB: RopChainGenerator64.X64Lists.pushR15
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.pushR15
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.pushR15
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: pushR15
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3866
      summary: "\npushR15 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> pushR15
          VB: Public pushR15 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popRax
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popRax
      language: CSharp
      name:
        CSharp: popRax
        VB: popRax
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popRax
        VB: RopChainGenerator64.X64Lists.popRax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popRax
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popRax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popRax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3870
      summary: "\npopRax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popRax
          VB: Public popRax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popRbx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popRbx
      language: CSharp
      name:
        CSharp: popRbx
        VB: popRbx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popRbx
        VB: RopChainGenerator64.X64Lists.popRbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popRbx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popRbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popRbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3874
      summary: "\npopRbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popRbx
          VB: Public popRbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popRcx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popRcx
      language: CSharp
      name:
        CSharp: popRcx
        VB: popRcx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popRcx
        VB: RopChainGenerator64.X64Lists.popRcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popRcx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popRcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popRcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3878
      summary: "\npopRcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popRcx
          VB: Public popRcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popRdx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popRdx
      language: CSharp
      name:
        CSharp: popRdx
        VB: popRdx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popRdx
        VB: RopChainGenerator64.X64Lists.popRdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popRdx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popRdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popRdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3882
      summary: "\npopRdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popRdx
          VB: Public popRdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popRsp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popRsp
      language: CSharp
      name:
        CSharp: popRsp
        VB: popRsp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popRsp
        VB: RopChainGenerator64.X64Lists.popRsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popRsp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popRsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popRsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3886
      summary: "\npopRsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popRsp
          VB: Public popRsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popRbp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popRbp
      language: CSharp
      name:
        CSharp: popRbp
        VB: popRbp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popRbp
        VB: RopChainGenerator64.X64Lists.popRbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popRbp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popRbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popRbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3890
      summary: "\npopRbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popRbp
          VB: Public popRbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popRsi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popRsi
      language: CSharp
      name:
        CSharp: popRsi
        VB: popRsi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popRsi
        VB: RopChainGenerator64.X64Lists.popRsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popRsi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popRsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popRsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3894
      summary: "\npopRsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popRsi
          VB: Public popRsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popRdi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popRdi
      language: CSharp
      name:
        CSharp: popRdi
        VB: popRdi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popRdi
        VB: RopChainGenerator64.X64Lists.popRdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popRdi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popRdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popRdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3898
      summary: "\npopRdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popRdi
          VB: Public popRdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popR8
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popR8
      language: CSharp
      name:
        CSharp: popR8
        VB: popR8
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popR8
        VB: RopChainGenerator64.X64Lists.popR8
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popR8
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popR8
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popR8
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3902
      summary: "\npopR8 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popR8
          VB: Public popR8 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popR9
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popR9
      language: CSharp
      name:
        CSharp: popR9
        VB: popR9
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popR9
        VB: RopChainGenerator64.X64Lists.popR9
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popR9
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popR9
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popR9
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3906
      summary: "\npopR9 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popR9
          VB: Public popR9 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popR10
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popR10
      language: CSharp
      name:
        CSharp: popR10
        VB: popR10
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popR10
        VB: RopChainGenerator64.X64Lists.popR10
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popR10
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popR10
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popR10
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3910
      summary: "\npopR10 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popR10
          VB: Public popR10 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popR11
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popR11
      language: CSharp
      name:
        CSharp: popR11
        VB: popR11
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popR11
        VB: RopChainGenerator64.X64Lists.popR11
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popR11
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popR11
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popR11
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3914
      summary: "\npopR11 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popR11
          VB: Public popR11 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popR12
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popR12
      language: CSharp
      name:
        CSharp: popR12
        VB: popR12
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popR12
        VB: RopChainGenerator64.X64Lists.popR12
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popR12
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popR12
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popR12
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3918
      summary: "\npopR12 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popR12
          VB: Public popR12 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popR13
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popR13
      language: CSharp
      name:
        CSharp: popR13
        VB: popR13
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popR13
        VB: RopChainGenerator64.X64Lists.popR13
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popR13
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popR13
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popR13
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3922
      summary: "\npopR13 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popR13
          VB: Public popR13 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popR14
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popR14
      language: CSharp
      name:
        CSharp: popR14
        VB: popR14
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popR14
        VB: RopChainGenerator64.X64Lists.popR14
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popR14
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popR14
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popR14
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3926
      summary: "\npopR14 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popR14
          VB: Public popR14 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.popR15
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.popR15
      language: CSharp
      name:
        CSharp: popR15
        VB: popR15
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.popR15
        VB: RopChainGenerator64.X64Lists.popR15
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.popR15
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.popR15
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: popR15
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3930
      summary: "\npopR15 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> popR15
          VB: Public popR15 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorRax
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorRax
      language: CSharp
      name:
        CSharp: xorRax
        VB: xorRax
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorRax
        VB: RopChainGenerator64.X64Lists.xorRax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorRax
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorRax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorRax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3934
      summary: "\nxorRax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorRax
          VB: Public xorRax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorRbx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorRbx
      language: CSharp
      name:
        CSharp: xorRbx
        VB: xorRbx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorRbx
        VB: RopChainGenerator64.X64Lists.xorRbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorRbx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorRbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorRbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3938
      summary: "\nxorRbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorRbx
          VB: Public xorRbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorRcx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorRcx
      language: CSharp
      name:
        CSharp: xorRcx
        VB: xorRcx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorRcx
        VB: RopChainGenerator64.X64Lists.xorRcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorRcx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorRcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorRcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3942
      summary: "\nxorRcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorRcx
          VB: Public xorRcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorRdx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorRdx
      language: CSharp
      name:
        CSharp: xorRdx
        VB: xorRdx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorRdx
        VB: RopChainGenerator64.X64Lists.xorRdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorRdx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorRdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorRdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3946
      summary: "\nxorRdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorRdx
          VB: Public xorRdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorRsi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorRsi
      language: CSharp
      name:
        CSharp: xorRsi
        VB: xorRsi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorRsi
        VB: RopChainGenerator64.X64Lists.xorRsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorRsi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorRsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorRsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3950
      summary: "\nxorRsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorRsi
          VB: Public xorRsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorRdi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorRdi
      language: CSharp
      name:
        CSharp: xorRdi
        VB: xorRdi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorRdi
        VB: RopChainGenerator64.X64Lists.xorRdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorRdi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorRdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorRdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3954
      summary: "\nxorRdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorRdi
          VB: Public xorRdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorRsp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorRsp
      language: CSharp
      name:
        CSharp: xorRsp
        VB: xorRsp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorRsp
        VB: RopChainGenerator64.X64Lists.xorRsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorRsp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorRsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorRsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3958
      summary: "\nxorRsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorRsp
          VB: Public xorRsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorRbp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorRbp
      language: CSharp
      name:
        CSharp: xorRbp
        VB: xorRbp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorRbp
        VB: RopChainGenerator64.X64Lists.xorRbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorRbp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorRbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorRbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3962
      summary: "\nxorRbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorRbp
          VB: Public xorRbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorR8
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorR8
      language: CSharp
      name:
        CSharp: xorR8
        VB: xorR8
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorR8
        VB: RopChainGenerator64.X64Lists.xorR8
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorR8
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorR8
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorR8
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3966
      summary: "\nxorR8 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorR8
          VB: Public xorR8 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorR9
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorR9
      language: CSharp
      name:
        CSharp: xorR9
        VB: xorR9
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorR9
        VB: RopChainGenerator64.X64Lists.xorR9
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorR9
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorR9
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorR9
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3970
      summary: "\nxorR9 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorR9
          VB: Public xorR9 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorR10
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorR10
      language: CSharp
      name:
        CSharp: xorR10
        VB: xorR10
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorR10
        VB: RopChainGenerator64.X64Lists.xorR10
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorR10
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorR10
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorR10
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3974
      summary: "\nxorR10 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorR10
          VB: Public xorR10 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorR11
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorR11
      language: CSharp
      name:
        CSharp: xorR11
        VB: xorR11
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorR11
        VB: RopChainGenerator64.X64Lists.xorR11
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorR11
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorR11
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorR11
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3978
      summary: "\nxorR11 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorR11
          VB: Public xorR11 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorR12
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorR12
      language: CSharp
      name:
        CSharp: xorR12
        VB: xorR12
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorR12
        VB: RopChainGenerator64.X64Lists.xorR12
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorR12
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorR12
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorR12
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3982
      summary: "\nxorR12 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorR12
          VB: Public xorR12 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorR13
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorR13
      language: CSharp
      name:
        CSharp: xorR13
        VB: xorR13
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorR13
        VB: RopChainGenerator64.X64Lists.xorR13
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorR13
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorR13
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorR13
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3986
      summary: "\nxorR13 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorR13
          VB: Public xorR13 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorR14
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorR14
      language: CSharp
      name:
        CSharp: xorR14
        VB: xorR14
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorR14
        VB: RopChainGenerator64.X64Lists.xorR14
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorR14
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorR14
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorR14
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3990
      summary: "\nxorR14 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorR14
          VB: Public xorR14 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.xorR15
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.xorR15
      language: CSharp
      name:
        CSharp: xorR15
        VB: xorR15
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.xorR15
        VB: RopChainGenerator64.X64Lists.xorR15
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.xorR15
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.xorR15
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: xorR15
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3994
      summary: "\nxorR15 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> xorR15
          VB: Public xorR15 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.jmpRsp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.jmpRsp
      language: CSharp
      name:
        CSharp: jmpRsp
        VB: jmpRsp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.jmpRsp
        VB: RopChainGenerator64.X64Lists.jmpRsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.jmpRsp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.jmpRsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: jmpRsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 3998
      summary: "\njmpRsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> jmpRsp
          VB: Public jmpRsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.callRsp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.callRsp
      language: CSharp
      name:
        CSharp: callRsp
        VB: callRsp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.callRsp
        VB: RopChainGenerator64.X64Lists.callRsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.callRsp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.callRsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: callRsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4002
      summary: "\ncallRsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> callRsp
          VB: Public callRsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incRax
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incRax
      language: CSharp
      name:
        CSharp: incRax
        VB: incRax
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incRax
        VB: RopChainGenerator64.X64Lists.incRax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incRax
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incRax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incRax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4006
      summary: "\nincRax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incRax
          VB: Public incRax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incRbx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incRbx
      language: CSharp
      name:
        CSharp: incRbx
        VB: incRbx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incRbx
        VB: RopChainGenerator64.X64Lists.incRbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incRbx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incRbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incRbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4010
      summary: "\nincRbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incRbx
          VB: Public incRbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incRcx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incRcx
      language: CSharp
      name:
        CSharp: incRcx
        VB: incRcx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incRcx
        VB: RopChainGenerator64.X64Lists.incRcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incRcx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incRcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incRcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4014
      summary: "\nincRcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incRcx
          VB: Public incRcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incRdx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incRdx
      language: CSharp
      name:
        CSharp: incRdx
        VB: incRdx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incRdx
        VB: RopChainGenerator64.X64Lists.incRdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incRdx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incRdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incRdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4018
      summary: "\nincRdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incRdx
          VB: Public incRdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incRbp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incRbp
      language: CSharp
      name:
        CSharp: incRbp
        VB: incRbp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incRbp
        VB: RopChainGenerator64.X64Lists.incRbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incRbp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incRbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incRbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4022
      summary: "\nincRbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incRbp
          VB: Public incRbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incRsp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incRsp
      language: CSharp
      name:
        CSharp: incRsp
        VB: incRsp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incRsp
        VB: RopChainGenerator64.X64Lists.incRsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incRsp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incRsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incRsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4026
      summary: "\nincRsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incRsp
          VB: Public incRsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incRsi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incRsi
      language: CSharp
      name:
        CSharp: incRsi
        VB: incRsi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incRsi
        VB: RopChainGenerator64.X64Lists.incRsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incRsi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incRsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incRsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4030
      summary: "\nincRsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incRsi
          VB: Public incRsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incRdi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incRdi
      language: CSharp
      name:
        CSharp: incRdi
        VB: incRdi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incRdi
        VB: RopChainGenerator64.X64Lists.incRdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incRdi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incRdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incRdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4034
      summary: "\nincRdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incRdi
          VB: Public incRdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incR8
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incR8
      language: CSharp
      name:
        CSharp: incR8
        VB: incR8
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incR8
        VB: RopChainGenerator64.X64Lists.incR8
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incR8
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incR8
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incR8
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4038
      summary: "\nincR8 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incR8
          VB: Public incR8 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incR9
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incR9
      language: CSharp
      name:
        CSharp: incR9
        VB: incR9
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incR9
        VB: RopChainGenerator64.X64Lists.incR9
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incR9
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incR9
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incR9
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4042
      summary: "\nincR9 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incR9
          VB: Public incR9 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incR10
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incR10
      language: CSharp
      name:
        CSharp: incR10
        VB: incR10
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incR10
        VB: RopChainGenerator64.X64Lists.incR10
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incR10
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incR10
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incR10
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4046
      summary: "\nincR10 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incR10
          VB: Public incR10 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incR11
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incR11
      language: CSharp
      name:
        CSharp: incR11
        VB: incR11
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incR11
        VB: RopChainGenerator64.X64Lists.incR11
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incR11
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incR11
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incR11
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4050
      summary: "\nincR11 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incR11
          VB: Public incR11 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incR12
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incR12
      language: CSharp
      name:
        CSharp: incR12
        VB: incR12
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incR12
        VB: RopChainGenerator64.X64Lists.incR12
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incR12
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incR12
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incR12
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4054
      summary: "\nincR12 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incR12
          VB: Public incR12 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incR13
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incR13
      language: CSharp
      name:
        CSharp: incR13
        VB: incR13
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incR13
        VB: RopChainGenerator64.X64Lists.incR13
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incR13
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incR13
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incR13
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4058
      summary: "\nincR13 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incR13
          VB: Public incR13 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incR14
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incR14
      language: CSharp
      name:
        CSharp: incR14
        VB: incR14
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incR14
        VB: RopChainGenerator64.X64Lists.incR14
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incR14
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incR14
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incR14
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4062
      summary: "\nincR14 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incR14
          VB: Public incR14 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.incR15
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.incR15
      language: CSharp
      name:
        CSharp: incR15
        VB: incR15
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.incR15
        VB: RopChainGenerator64.X64Lists.incR15
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.incR15
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.incR15
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: incR15
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4066
      summary: "\nincR15 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> incR15
          VB: Public incR15 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decRax
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decRax
      language: CSharp
      name:
        CSharp: decRax
        VB: decRax
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decRax
        VB: RopChainGenerator64.X64Lists.decRax
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decRax
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decRax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decRax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4070
      summary: "\ndecRax list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decRax
          VB: Public decRax As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decRbx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decRbx
      language: CSharp
      name:
        CSharp: decRbx
        VB: decRbx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decRbx
        VB: RopChainGenerator64.X64Lists.decRbx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decRbx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decRbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decRbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4074
      summary: "\ndecRbx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decRbx
          VB: Public decRbx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decRcx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decRcx
      language: CSharp
      name:
        CSharp: decRcx
        VB: decRcx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decRcx
        VB: RopChainGenerator64.X64Lists.decRcx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decRcx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decRcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decRcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4078
      summary: "\ndecRcx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decRcx
          VB: Public decRcx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decRdx
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decRdx
      language: CSharp
      name:
        CSharp: decRdx
        VB: decRdx
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decRdx
        VB: RopChainGenerator64.X64Lists.decRdx
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decRdx
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decRdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decRdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4082
      summary: "\ndecRdx list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decRdx
          VB: Public decRdx As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decRbp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decRbp
      language: CSharp
      name:
        CSharp: decRbp
        VB: decRbp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decRbp
        VB: RopChainGenerator64.X64Lists.decRbp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decRbp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decRbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decRbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4086
      summary: "\ndecRbp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decRbp
          VB: Public decRbp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decRsp
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decRsp
      language: CSharp
      name:
        CSharp: decRsp
        VB: decRsp
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decRsp
        VB: RopChainGenerator64.X64Lists.decRsp
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decRsp
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decRsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decRsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4090
      summary: "\ndecRsp list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decRsp
          VB: Public decRsp As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decRsi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decRsi
      language: CSharp
      name:
        CSharp: decRsi
        VB: decRsi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decRsi
        VB: RopChainGenerator64.X64Lists.decRsi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decRsi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decRsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decRsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4094
      summary: "\ndecRsi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decRsi
          VB: Public decRsi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decRdi
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decRdi
      language: CSharp
      name:
        CSharp: decRdi
        VB: decRdi
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decRdi
        VB: RopChainGenerator64.X64Lists.decRdi
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decRdi
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decRdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decRdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4098
      summary: "\ndecRdi list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decRdi
          VB: Public decRdi As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decR8
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decR8
      language: CSharp
      name:
        CSharp: decR8
        VB: decR8
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decR8
        VB: RopChainGenerator64.X64Lists.decR8
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decR8
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decR8
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decR8
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4102
      summary: "\ndecR8 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decR8
          VB: Public decR8 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decR9
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decR9
      language: CSharp
      name:
        CSharp: decR9
        VB: decR9
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decR9
        VB: RopChainGenerator64.X64Lists.decR9
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decR9
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decR9
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decR9
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4106
      summary: "\ndecR9 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decR9
          VB: Public decR9 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decR10
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decR10
      language: CSharp
      name:
        CSharp: decR10
        VB: decR10
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decR10
        VB: RopChainGenerator64.X64Lists.decR10
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decR10
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decR10
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decR10
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4110
      summary: "\ndecR10 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decR10
          VB: Public decR10 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decR11
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decR11
      language: CSharp
      name:
        CSharp: decR11
        VB: decR11
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decR11
        VB: RopChainGenerator64.X64Lists.decR11
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decR11
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decR11
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decR11
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4114
      summary: "\ndecR11 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decR11
          VB: Public decR11 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decR12
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decR12
      language: CSharp
      name:
        CSharp: decR12
        VB: decR12
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decR12
        VB: RopChainGenerator64.X64Lists.decR12
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decR12
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decR12
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decR12
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4118
      summary: "\ndecR12 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decR12
          VB: Public decR12 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decR13
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decR13
      language: CSharp
      name:
        CSharp: decR13
        VB: decR13
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decR13
        VB: RopChainGenerator64.X64Lists.decR13
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decR13
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decR13
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decR13
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4122
      summary: "\ndecR13 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decR13
          VB: Public decR13 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decR14
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decR14
      language: CSharp
      name:
        CSharp: decR14
        VB: decR14
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decR14
        VB: RopChainGenerator64.X64Lists.decR14
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decR14
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decR14
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decR14
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4126
      summary: "\ndecR14 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decR14
          VB: Public decR14 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.decR15
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.decR15
      language: CSharp
      name:
        CSharp: decR15
        VB: decR15
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.decR15
        VB: RopChainGenerator64.X64Lists.decR15
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.decR15
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.decR15
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: decR15
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4130
      summary: "\ndecR15 list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> decR15
          VB: Public decR15 As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.add
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.add
      language: CSharp
      name:
        CSharp: add
        VB: add
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.add
        VB: RopChainGenerator64.X64Lists.add
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.add
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.add
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: add
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4134
      summary: "\nadd list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> add
          VB: Public add As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.mov
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.mov
      language: CSharp
      name:
        CSharp: mov
        VB: mov
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.mov
        VB: RopChainGenerator64.X64Lists.mov
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.mov
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.mov
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: mov
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4138
      summary: "\nmov list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> mov
          VB: Public mov As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Utilities.RopChainGenerator64.X64Lists.sub
      commentId: F:ERC.Utilities.RopChainGenerator64.X64Lists.sub
      language: CSharp
      name:
        CSharp: sub
        VB: sub
      nameWithType:
        CSharp: RopChainGenerator64.X64Lists.sub
        VB: RopChainGenerator64.X64Lists.sub
      qualifiedName:
        CSharp: ERC.Utilities.RopChainGenerator64.X64Lists.sub
        VB: ERC.Utilities.RopChainGenerator64.X64Lists.sub
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Utilities
      source:
        id: sub
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\RopChainGenerator64.cs
        startLine: 4142
      summary: "\nsub list.\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<IntPtr, string> sub
          VB: Public sub As Dictionary(Of IntPtr, String)
        return:
          type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: ERC.Structures
  commentId: N:ERC.Structures
  language: CSharp
  name:
    CSharp: ERC.Structures
    VB: ERC.Structures
  nameWithType:
    CSharp: ERC.Structures
    VB: ERC.Structures
  qualifiedName:
    CSharp: ERC.Structures
    VB: ERC.Structures
  type: Namespace
  assemblies:
  - ERC.Net
  modifiers: {}
  items:
  - id: ERC.Structures.IMAGE_DOS_HEADER
    commentId: T:ERC.Structures.IMAGE_DOS_HEADER
    language: CSharp
    name:
      CSharp: IMAGE_DOS_HEADER
      VB: IMAGE_DOS_HEADER
    nameWithType:
      CSharp: IMAGE_DOS_HEADER
      VB: IMAGE_DOS_HEADER
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_DOS_HEADER
      VB: ERC.Structures.IMAGE_DOS_HEADER
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_DOS_HEADER
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 778
    summary: "\nIMAGE_DOS_HEADER.\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_DOS_HEADER
        VB: Public Structure IMAGE_DOS_HEADER
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_DOS_HEADER.nt_head_ptr
      commentId: F:ERC.Structures.IMAGE_DOS_HEADER.nt_head_ptr
      language: CSharp
      name:
        CSharp: nt_head_ptr
        VB: nt_head_ptr
      nameWithType:
        CSharp: IMAGE_DOS_HEADER.nt_head_ptr
        VB: IMAGE_DOS_HEADER.nt_head_ptr
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_DOS_HEADER.nt_head_ptr
        VB: ERC.Structures.IMAGE_DOS_HEADER.nt_head_ptr
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: nt_head_ptr
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 784
      summary: "\nA pointer to the IMAGE_NT_HEADER.\n"
      example: []
      syntax:
        content:
          CSharp: public int nt_head_ptr
          VB: Public nt_head_ptr As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.IMAGE_FILE_HEADER
    commentId: T:ERC.Structures.IMAGE_FILE_HEADER
    language: CSharp
    name:
      CSharp: IMAGE_FILE_HEADER
      VB: IMAGE_FILE_HEADER
    nameWithType:
      CSharp: IMAGE_FILE_HEADER
      VB: IMAGE_FILE_HEADER
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_FILE_HEADER
      VB: ERC.Structures.IMAGE_FILE_HEADER
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_FILE_HEADER
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 792
    summary: "\nIMAGE_FILE_HEADER. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-image_file_header\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_FILE_HEADER
        VB: Public Structure IMAGE_FILE_HEADER
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_FILE_HEADER.Machine
      commentId: F:ERC.Structures.IMAGE_FILE_HEADER.Machine
      language: CSharp
      name:
        CSharp: Machine
        VB: Machine
      nameWithType:
        CSharp: IMAGE_FILE_HEADER.Machine
        VB: IMAGE_FILE_HEADER.Machine
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_FILE_HEADER.Machine
        VB: ERC.Structures.IMAGE_FILE_HEADER.Machine
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Machine
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 798
      summary: "\nMachine\n"
      example: []
      syntax:
        content:
          CSharp: public ushort Machine
          VB: Public Machine As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_FILE_HEADER.NumberOfSections
      commentId: F:ERC.Structures.IMAGE_FILE_HEADER.NumberOfSections
      language: CSharp
      name:
        CSharp: NumberOfSections
        VB: NumberOfSections
      nameWithType:
        CSharp: IMAGE_FILE_HEADER.NumberOfSections
        VB: IMAGE_FILE_HEADER.NumberOfSections
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_FILE_HEADER.NumberOfSections
        VB: ERC.Structures.IMAGE_FILE_HEADER.NumberOfSections
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: NumberOfSections
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 802
      summary: "\nNumberOfSections\n"
      example: []
      syntax:
        content:
          CSharp: public ushort NumberOfSections
          VB: Public NumberOfSections As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_FILE_HEADER.TimeDateStamp
      commentId: F:ERC.Structures.IMAGE_FILE_HEADER.TimeDateStamp
      language: CSharp
      name:
        CSharp: TimeDateStamp
        VB: TimeDateStamp
      nameWithType:
        CSharp: IMAGE_FILE_HEADER.TimeDateStamp
        VB: IMAGE_FILE_HEADER.TimeDateStamp
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_FILE_HEADER.TimeDateStamp
        VB: ERC.Structures.IMAGE_FILE_HEADER.TimeDateStamp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TimeDateStamp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 806
      summary: "\nTimeDateStamp\n"
      example: []
      syntax:
        content:
          CSharp: public uint TimeDateStamp
          VB: Public TimeDateStamp As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_FILE_HEADER.PointerToSymbolTable
      commentId: F:ERC.Structures.IMAGE_FILE_HEADER.PointerToSymbolTable
      language: CSharp
      name:
        CSharp: PointerToSymbolTable
        VB: PointerToSymbolTable
      nameWithType:
        CSharp: IMAGE_FILE_HEADER.PointerToSymbolTable
        VB: IMAGE_FILE_HEADER.PointerToSymbolTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_FILE_HEADER.PointerToSymbolTable
        VB: ERC.Structures.IMAGE_FILE_HEADER.PointerToSymbolTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PointerToSymbolTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 810
      summary: "\nPointerToSymbolTable\n"
      example: []
      syntax:
        content:
          CSharp: public uint PointerToSymbolTable
          VB: Public PointerToSymbolTable As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_FILE_HEADER.NumberOfSymbols
      commentId: F:ERC.Structures.IMAGE_FILE_HEADER.NumberOfSymbols
      language: CSharp
      name:
        CSharp: NumberOfSymbols
        VB: NumberOfSymbols
      nameWithType:
        CSharp: IMAGE_FILE_HEADER.NumberOfSymbols
        VB: IMAGE_FILE_HEADER.NumberOfSymbols
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_FILE_HEADER.NumberOfSymbols
        VB: ERC.Structures.IMAGE_FILE_HEADER.NumberOfSymbols
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: NumberOfSymbols
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 814
      summary: "\nNumberOfSymbols\n"
      example: []
      syntax:
        content:
          CSharp: public uint NumberOfSymbols
          VB: Public NumberOfSymbols As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_FILE_HEADER.SizeOfOptionalHeader
      commentId: F:ERC.Structures.IMAGE_FILE_HEADER.SizeOfOptionalHeader
      language: CSharp
      name:
        CSharp: SizeOfOptionalHeader
        VB: SizeOfOptionalHeader
      nameWithType:
        CSharp: IMAGE_FILE_HEADER.SizeOfOptionalHeader
        VB: IMAGE_FILE_HEADER.SizeOfOptionalHeader
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_FILE_HEADER.SizeOfOptionalHeader
        VB: ERC.Structures.IMAGE_FILE_HEADER.SizeOfOptionalHeader
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfOptionalHeader
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 818
      summary: "\nSizeOfOptionalHeader\n"
      example: []
      syntax:
        content:
          CSharp: public ushort SizeOfOptionalHeader
          VB: Public SizeOfOptionalHeader As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_FILE_HEADER.Characteristics
      commentId: F:ERC.Structures.IMAGE_FILE_HEADER.Characteristics
      language: CSharp
      name:
        CSharp: Characteristics
        VB: Characteristics
      nameWithType:
        CSharp: IMAGE_FILE_HEADER.Characteristics
        VB: IMAGE_FILE_HEADER.Characteristics
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_FILE_HEADER.Characteristics
        VB: ERC.Structures.IMAGE_FILE_HEADER.Characteristics
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Characteristics
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 822
      summary: "\nCharacteristics\n"
      example: []
      syntax:
        content:
          CSharp: public ushort Characteristics
          VB: Public Characteristics As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.IMAGE_NT_HEADERS32
    commentId: T:ERC.Structures.IMAGE_NT_HEADERS32
    language: CSharp
    name:
      CSharp: IMAGE_NT_HEADERS32
      VB: IMAGE_NT_HEADERS32
    nameWithType:
      CSharp: IMAGE_NT_HEADERS32
      VB: IMAGE_NT_HEADERS32
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_NT_HEADERS32
      VB: ERC.Structures.IMAGE_NT_HEADERS32
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_NT_HEADERS32
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 830
    summary: "\nIMAGE_NT_HEADER 32 bit variant. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_image_nt_headers\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_NT_HEADERS32
        VB: Public Structure IMAGE_NT_HEADERS32
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_NT_HEADERS32.Signature
      commentId: F:ERC.Structures.IMAGE_NT_HEADERS32.Signature
      language: CSharp
      name:
        CSharp: Signature
        VB: Signature
      nameWithType:
        CSharp: IMAGE_NT_HEADERS32.Signature
        VB: IMAGE_NT_HEADERS32.Signature
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_NT_HEADERS32.Signature
        VB: ERC.Structures.IMAGE_NT_HEADERS32.Signature
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Signature
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 836
      summary: "\nSignature\n"
      example: []
      syntax:
        content:
          CSharp: public uint Signature
          VB: Public Signature As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_NT_HEADERS32.FileHeader
      commentId: F:ERC.Structures.IMAGE_NT_HEADERS32.FileHeader
      language: CSharp
      name:
        CSharp: FileHeader
        VB: FileHeader
      nameWithType:
        CSharp: IMAGE_NT_HEADERS32.FileHeader
        VB: IMAGE_NT_HEADERS32.FileHeader
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_NT_HEADERS32.FileHeader
        VB: ERC.Structures.IMAGE_NT_HEADERS32.FileHeader
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FileHeader
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 840
      summary: "\nFileHeader\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_FILE_HEADER FileHeader
          VB: Public FileHeader As IMAGE_FILE_HEADER
        return:
          type: ERC.Structures.IMAGE_FILE_HEADER
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_NT_HEADERS32.OptionalHeader
      commentId: F:ERC.Structures.IMAGE_NT_HEADERS32.OptionalHeader
      language: CSharp
      name:
        CSharp: OptionalHeader
        VB: OptionalHeader
      nameWithType:
        CSharp: IMAGE_NT_HEADERS32.OptionalHeader
        VB: IMAGE_NT_HEADERS32.OptionalHeader
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_NT_HEADERS32.OptionalHeader
        VB: ERC.Structures.IMAGE_NT_HEADERS32.OptionalHeader
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: OptionalHeader
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 844
      summary: "\nOptionalHeader\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_OPTIONAL_HEADER32 OptionalHeader
          VB: Public OptionalHeader As IMAGE_OPTIONAL_HEADER32
        return:
          type: ERC.Structures.IMAGE_OPTIONAL_HEADER32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.IMAGE_NT_HEADERS64
    commentId: T:ERC.Structures.IMAGE_NT_HEADERS64
    language: CSharp
    name:
      CSharp: IMAGE_NT_HEADERS64
      VB: IMAGE_NT_HEADERS64
    nameWithType:
      CSharp: IMAGE_NT_HEADERS64
      VB: IMAGE_NT_HEADERS64
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_NT_HEADERS64
      VB: ERC.Structures.IMAGE_NT_HEADERS64
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_NT_HEADERS64
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 850
    summary: "\nIMAGE_NT_HEADER 64 bit variant. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_image_nt_headers\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_NT_HEADERS64
        VB: Public Structure IMAGE_NT_HEADERS64
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_NT_HEADERS64.Signature
      commentId: F:ERC.Structures.IMAGE_NT_HEADERS64.Signature
      language: CSharp
      name:
        CSharp: Signature
        VB: Signature
      nameWithType:
        CSharp: IMAGE_NT_HEADERS64.Signature
        VB: IMAGE_NT_HEADERS64.Signature
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_NT_HEADERS64.Signature
        VB: ERC.Structures.IMAGE_NT_HEADERS64.Signature
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Signature
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 856
      summary: "\nSignature\n"
      example: []
      syntax:
        content:
          CSharp: public uint Signature
          VB: Public Signature As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_NT_HEADERS64.FileHeader
      commentId: F:ERC.Structures.IMAGE_NT_HEADERS64.FileHeader
      language: CSharp
      name:
        CSharp: FileHeader
        VB: FileHeader
      nameWithType:
        CSharp: IMAGE_NT_HEADERS64.FileHeader
        VB: IMAGE_NT_HEADERS64.FileHeader
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_NT_HEADERS64.FileHeader
        VB: ERC.Structures.IMAGE_NT_HEADERS64.FileHeader
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FileHeader
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 860
      summary: "\nFileHeader\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_FILE_HEADER FileHeader
          VB: Public FileHeader As IMAGE_FILE_HEADER
        return:
          type: ERC.Structures.IMAGE_FILE_HEADER
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_NT_HEADERS64.OptionalHeader
      commentId: F:ERC.Structures.IMAGE_NT_HEADERS64.OptionalHeader
      language: CSharp
      name:
        CSharp: OptionalHeader
        VB: OptionalHeader
      nameWithType:
        CSharp: IMAGE_NT_HEADERS64.OptionalHeader
        VB: IMAGE_NT_HEADERS64.OptionalHeader
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_NT_HEADERS64.OptionalHeader
        VB: ERC.Structures.IMAGE_NT_HEADERS64.OptionalHeader
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: OptionalHeader
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 864
      summary: "\nOptionalHeader\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_OPTIONAL_HEADER64 OptionalHeader
          VB: Public OptionalHeader As IMAGE_OPTIONAL_HEADER64
        return:
          type: ERC.Structures.IMAGE_OPTIONAL_HEADER64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.IMAGE_DATA_DIRECTORY
    commentId: T:ERC.Structures.IMAGE_DATA_DIRECTORY
    language: CSharp
    name:
      CSharp: IMAGE_DATA_DIRECTORY
      VB: IMAGE_DATA_DIRECTORY
    nameWithType:
      CSharp: IMAGE_DATA_DIRECTORY
      VB: IMAGE_DATA_DIRECTORY
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_DATA_DIRECTORY
      VB: ERC.Structures.IMAGE_DATA_DIRECTORY
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_DATA_DIRECTORY
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 872
    summary: "\nIMAGE_DATA_DIRECTORY. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-image_data_directory\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_DATA_DIRECTORY
        VB: Public Structure IMAGE_DATA_DIRECTORY
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_DATA_DIRECTORY.VirtualAddress
      commentId: F:ERC.Structures.IMAGE_DATA_DIRECTORY.VirtualAddress
      language: CSharp
      name:
        CSharp: VirtualAddress
        VB: VirtualAddress
      nameWithType:
        CSharp: IMAGE_DATA_DIRECTORY.VirtualAddress
        VB: IMAGE_DATA_DIRECTORY.VirtualAddress
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_DATA_DIRECTORY.VirtualAddress
        VB: ERC.Structures.IMAGE_DATA_DIRECTORY.VirtualAddress
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VirtualAddress
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 878
      summary: "\nVirtualAddress.\n"
      example: []
      syntax:
        content:
          CSharp: public uint VirtualAddress
          VB: Public VirtualAddress As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_DATA_DIRECTORY.Size
      commentId: F:ERC.Structures.IMAGE_DATA_DIRECTORY.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: IMAGE_DATA_DIRECTORY.Size
        VB: IMAGE_DATA_DIRECTORY.Size
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_DATA_DIRECTORY.Size
        VB: ERC.Structures.IMAGE_DATA_DIRECTORY.Size
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Size
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 882
      summary: "\nSize.\n"
      example: []
      syntax:
        content:
          CSharp: public uint Size
          VB: Public Size As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32
    commentId: T:ERC.Structures.IMAGE_OPTIONAL_HEADER32
    language: CSharp
    name:
      CSharp: IMAGE_OPTIONAL_HEADER32
      VB: IMAGE_OPTIONAL_HEADER32
    nameWithType:
      CSharp: IMAGE_OPTIONAL_HEADER32
      VB: IMAGE_OPTIONAL_HEADER32
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32
      VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_OPTIONAL_HEADER32
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 890
    summary: "\nIMAGE_OPTIONAL_HEADER 32 bit variant. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_image_optional_header\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_OPTIONAL_HEADER32
        VB: Public Structure IMAGE_OPTIONAL_HEADER32
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Magic
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.Magic
      language: CSharp
      name:
        CSharp: Magic
        VB: Magic
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.Magic
        VB: IMAGE_OPTIONAL_HEADER32.Magic
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Magic
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Magic
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Magic
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 896
      summary: "\nMagic\n"
      example: []
      syntax:
        content:
          CSharp: public MagicType Magic
          VB: Public Magic As MagicType
        return:
          type: ERC.Structures.MagicType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorLinkerVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorLinkerVersion
      language: CSharp
      name:
        CSharp: MajorLinkerVersion
        VB: MajorLinkerVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.MajorLinkerVersion
        VB: IMAGE_OPTIONAL_HEADER32.MajorLinkerVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorLinkerVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorLinkerVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorLinkerVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 900
      summary: "\nMajorLinkerVersion\n"
      example: []
      syntax:
        content:
          CSharp: public byte MajorLinkerVersion
          VB: Public MajorLinkerVersion As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorLinkerVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorLinkerVersion
      language: CSharp
      name:
        CSharp: MinorLinkerVersion
        VB: MinorLinkerVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.MinorLinkerVersion
        VB: IMAGE_OPTIONAL_HEADER32.MinorLinkerVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorLinkerVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorLinkerVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorLinkerVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 904
      summary: "\nMinorLinkerVersion\n"
      example: []
      syntax:
        content:
          CSharp: public byte MinorLinkerVersion
          VB: Public MinorLinkerVersion As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfCode
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfCode
      language: CSharp
      name:
        CSharp: SizeOfCode
        VB: SizeOfCode
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfCode
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfCode
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfCode
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfCode
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfCode
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 908
      summary: "\nSizeOfCode\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfCode
          VB: Public SizeOfCode As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfInitializedData
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfInitializedData
      language: CSharp
      name:
        CSharp: SizeOfInitializedData
        VB: SizeOfInitializedData
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfInitializedData
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfInitializedData
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfInitializedData
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfInitializedData
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfInitializedData
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 912
      summary: "\nSizeOfInitializedData\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfInitializedData
          VB: Public SizeOfInitializedData As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfUninitializedData
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfUninitializedData
      language: CSharp
      name:
        CSharp: SizeOfUninitializedData
        VB: SizeOfUninitializedData
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfUninitializedData
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfUninitializedData
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfUninitializedData
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfUninitializedData
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfUninitializedData
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 916
      summary: "\nSizeOfUninitializedData\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfUninitializedData
          VB: Public SizeOfUninitializedData As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.AddressOfEntryPoint
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.AddressOfEntryPoint
      language: CSharp
      name:
        CSharp: AddressOfEntryPoint
        VB: AddressOfEntryPoint
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.AddressOfEntryPoint
        VB: IMAGE_OPTIONAL_HEADER32.AddressOfEntryPoint
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.AddressOfEntryPoint
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.AddressOfEntryPoint
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: AddressOfEntryPoint
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 920
      summary: "\nAddressOfEntryPoint\n"
      example: []
      syntax:
        content:
          CSharp: public uint AddressOfEntryPoint
          VB: Public AddressOfEntryPoint As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseOfCode
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseOfCode
      language: CSharp
      name:
        CSharp: BaseOfCode
        VB: BaseOfCode
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.BaseOfCode
        VB: IMAGE_OPTIONAL_HEADER32.BaseOfCode
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseOfCode
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseOfCode
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BaseOfCode
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 924
      summary: "\nBaseOfCode\n"
      example: []
      syntax:
        content:
          CSharp: public uint BaseOfCode
          VB: Public BaseOfCode As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseOfData
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseOfData
      language: CSharp
      name:
        CSharp: BaseOfData
        VB: BaseOfData
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.BaseOfData
        VB: IMAGE_OPTIONAL_HEADER32.BaseOfData
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseOfData
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseOfData
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BaseOfData
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 928
      summary: "\nBaseOfData\n"
      example: []
      syntax:
        content:
          CSharp: public uint BaseOfData
          VB: Public BaseOfData As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ImageBase
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.ImageBase
      language: CSharp
      name:
        CSharp: ImageBase
        VB: ImageBase
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.ImageBase
        VB: IMAGE_OPTIONAL_HEADER32.ImageBase
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ImageBase
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ImageBase
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ImageBase
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 932
      summary: "\nImageBase\n"
      example: []
      syntax:
        content:
          CSharp: public uint ImageBase
          VB: Public ImageBase As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SectionAlignment
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SectionAlignment
      language: CSharp
      name:
        CSharp: SectionAlignment
        VB: SectionAlignment
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SectionAlignment
        VB: IMAGE_OPTIONAL_HEADER32.SectionAlignment
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SectionAlignment
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SectionAlignment
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SectionAlignment
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 936
      summary: "\nSectionAlignment\n"
      example: []
      syntax:
        content:
          CSharp: public uint SectionAlignment
          VB: Public SectionAlignment As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.FileAlignment
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.FileAlignment
      language: CSharp
      name:
        CSharp: FileAlignment
        VB: FileAlignment
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.FileAlignment
        VB: IMAGE_OPTIONAL_HEADER32.FileAlignment
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.FileAlignment
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.FileAlignment
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FileAlignment
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 940
      summary: "\nFileAlignment\n"
      example: []
      syntax:
        content:
          CSharp: public uint FileAlignment
          VB: Public FileAlignment As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorOperatingSystemVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorOperatingSystemVersion
      language: CSharp
      name:
        CSharp: MajorOperatingSystemVersion
        VB: MajorOperatingSystemVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.MajorOperatingSystemVersion
        VB: IMAGE_OPTIONAL_HEADER32.MajorOperatingSystemVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorOperatingSystemVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorOperatingSystemVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorOperatingSystemVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 944
      summary: "\nMajorOperatingSystemVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MajorOperatingSystemVersion
          VB: Public MajorOperatingSystemVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorOperatingSystemVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorOperatingSystemVersion
      language: CSharp
      name:
        CSharp: MinorOperatingSystemVersion
        VB: MinorOperatingSystemVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.MinorOperatingSystemVersion
        VB: IMAGE_OPTIONAL_HEADER32.MinorOperatingSystemVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorOperatingSystemVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorOperatingSystemVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorOperatingSystemVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 948
      summary: "\nMinorOperatingSystemVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MinorOperatingSystemVersion
          VB: Public MinorOperatingSystemVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorImageVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorImageVersion
      language: CSharp
      name:
        CSharp: MajorImageVersion
        VB: MajorImageVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.MajorImageVersion
        VB: IMAGE_OPTIONAL_HEADER32.MajorImageVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorImageVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorImageVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorImageVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 952
      summary: "\nMajorImageVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MajorImageVersion
          VB: Public MajorImageVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorImageVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorImageVersion
      language: CSharp
      name:
        CSharp: MinorImageVersion
        VB: MinorImageVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.MinorImageVersion
        VB: IMAGE_OPTIONAL_HEADER32.MinorImageVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorImageVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorImageVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorImageVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 956
      summary: "\nMinorImageVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MinorImageVersion
          VB: Public MinorImageVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorSubsystemVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorSubsystemVersion
      language: CSharp
      name:
        CSharp: MajorSubsystemVersion
        VB: MajorSubsystemVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.MajorSubsystemVersion
        VB: IMAGE_OPTIONAL_HEADER32.MajorSubsystemVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorSubsystemVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MajorSubsystemVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorSubsystemVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 960
      summary: "\nMajorSubsystemVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MajorSubsystemVersion
          VB: Public MajorSubsystemVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorSubsystemVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorSubsystemVersion
      language: CSharp
      name:
        CSharp: MinorSubsystemVersion
        VB: MinorSubsystemVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.MinorSubsystemVersion
        VB: IMAGE_OPTIONAL_HEADER32.MinorSubsystemVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorSubsystemVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.MinorSubsystemVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorSubsystemVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 964
      summary: "\nMinorSubsystemVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MinorSubsystemVersion
          VB: Public MinorSubsystemVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Win32VersionValue
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.Win32VersionValue
      language: CSharp
      name:
        CSharp: Win32VersionValue
        VB: Win32VersionValue
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.Win32VersionValue
        VB: IMAGE_OPTIONAL_HEADER32.Win32VersionValue
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Win32VersionValue
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Win32VersionValue
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Win32VersionValue
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 968
      summary: "\nWin32VersionValue\n"
      example: []
      syntax:
        content:
          CSharp: public uint Win32VersionValue
          VB: Public Win32VersionValue As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfImage
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfImage
      language: CSharp
      name:
        CSharp: SizeOfImage
        VB: SizeOfImage
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfImage
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfImage
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfImage
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfImage
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfImage
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 972
      summary: "\nSizeOfImage\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfImage
          VB: Public SizeOfImage As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeaders
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeaders
      language: CSharp
      name:
        CSharp: SizeOfHeaders
        VB: SizeOfHeaders
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfHeaders
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfHeaders
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeaders
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeaders
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfHeaders
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 976
      summary: "\nSizeOfHeaders\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfHeaders
          VB: Public SizeOfHeaders As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CheckSum
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.CheckSum
      language: CSharp
      name:
        CSharp: CheckSum
        VB: CheckSum
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.CheckSum
        VB: IMAGE_OPTIONAL_HEADER32.CheckSum
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CheckSum
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CheckSum
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CheckSum
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 980
      summary: "\nCheckSum\n"
      example: []
      syntax:
        content:
          CSharp: public uint CheckSum
          VB: Public CheckSum As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Subsystem
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.Subsystem
      language: CSharp
      name:
        CSharp: Subsystem
        VB: Subsystem
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.Subsystem
        VB: IMAGE_OPTIONAL_HEADER32.Subsystem
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Subsystem
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Subsystem
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Subsystem
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 984
      summary: "\nSubsystem\n"
      example: []
      syntax:
        content:
          CSharp: public SubSystemType Subsystem
          VB: Public Subsystem As SubSystemType
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.DllCharacteristics
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.DllCharacteristics
      language: CSharp
      name:
        CSharp: DllCharacteristics
        VB: DllCharacteristics
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.DllCharacteristics
        VB: IMAGE_OPTIONAL_HEADER32.DllCharacteristics
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.DllCharacteristics
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.DllCharacteristics
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DllCharacteristics
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 988
      summary: "\nDllCharacteristics\n"
      example: []
      syntax:
        content:
          CSharp: public ushort DllCharacteristics
          VB: Public DllCharacteristics As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfStackReserve
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfStackReserve
      language: CSharp
      name:
        CSharp: SizeOfStackReserve
        VB: SizeOfStackReserve
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfStackReserve
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfStackReserve
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfStackReserve
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfStackReserve
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfStackReserve
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 992
      summary: "\nSizeOfStackReserve\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfStackReserve
          VB: Public SizeOfStackReserve As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfStackCommit
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfStackCommit
      language: CSharp
      name:
        CSharp: SizeOfStackCommit
        VB: SizeOfStackCommit
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfStackCommit
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfStackCommit
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfStackCommit
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfStackCommit
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfStackCommit
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 996
      summary: "\nSizeOfStackCommit\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfStackCommit
          VB: Public SizeOfStackCommit As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeapReserve
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeapReserve
      language: CSharp
      name:
        CSharp: SizeOfHeapReserve
        VB: SizeOfHeapReserve
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfHeapReserve
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfHeapReserve
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeapReserve
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeapReserve
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfHeapReserve
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1000
      summary: "\nSizeOfHeapReserve\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfHeapReserve
          VB: Public SizeOfHeapReserve As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeapCommit
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeapCommit
      language: CSharp
      name:
        CSharp: SizeOfHeapCommit
        VB: SizeOfHeapCommit
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.SizeOfHeapCommit
        VB: IMAGE_OPTIONAL_HEADER32.SizeOfHeapCommit
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeapCommit
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.SizeOfHeapCommit
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfHeapCommit
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1004
      summary: "\nSizeOfHeapCommit\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfHeapCommit
          VB: Public SizeOfHeapCommit As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.LoaderFlags
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.LoaderFlags
      language: CSharp
      name:
        CSharp: LoaderFlags
        VB: LoaderFlags
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.LoaderFlags
        VB: IMAGE_OPTIONAL_HEADER32.LoaderFlags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.LoaderFlags
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.LoaderFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LoaderFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1008
      summary: "\nLoaderFlags\n"
      example: []
      syntax:
        content:
          CSharp: public uint LoaderFlags
          VB: Public LoaderFlags As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.NumberOfRvaAndSizes
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.NumberOfRvaAndSizes
      language: CSharp
      name:
        CSharp: NumberOfRvaAndSizes
        VB: NumberOfRvaAndSizes
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.NumberOfRvaAndSizes
        VB: IMAGE_OPTIONAL_HEADER32.NumberOfRvaAndSizes
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.NumberOfRvaAndSizes
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.NumberOfRvaAndSizes
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: NumberOfRvaAndSizes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1012
      summary: "\nNumberOfRvaAndSizes\n"
      example: []
      syntax:
        content:
          CSharp: public uint NumberOfRvaAndSizes
          VB: Public NumberOfRvaAndSizes As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ExportTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.ExportTable
      language: CSharp
      name:
        CSharp: ExportTable
        VB: ExportTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.ExportTable
        VB: IMAGE_OPTIONAL_HEADER32.ExportTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ExportTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ExportTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ExportTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1016
      summary: "\nExportTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY ExportTable
          VB: Public ExportTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ImportTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.ImportTable
      language: CSharp
      name:
        CSharp: ImportTable
        VB: ImportTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.ImportTable
        VB: IMAGE_OPTIONAL_HEADER32.ImportTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ImportTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ImportTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ImportTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1020
      summary: "\nImportTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY ImportTable
          VB: Public ImportTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ResourceTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.ResourceTable
      language: CSharp
      name:
        CSharp: ResourceTable
        VB: ResourceTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.ResourceTable
        VB: IMAGE_OPTIONAL_HEADER32.ResourceTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ResourceTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ResourceTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ResourceTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1024
      summary: "\nResourceTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY ResourceTable
          VB: Public ResourceTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ExceptionTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.ExceptionTable
      language: CSharp
      name:
        CSharp: ExceptionTable
        VB: ExceptionTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.ExceptionTable
        VB: IMAGE_OPTIONAL_HEADER32.ExceptionTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ExceptionTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.ExceptionTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ExceptionTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1028
      summary: "\nExceptionTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY ExceptionTable
          VB: Public ExceptionTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CertificateTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.CertificateTable
      language: CSharp
      name:
        CSharp: CertificateTable
        VB: CertificateTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.CertificateTable
        VB: IMAGE_OPTIONAL_HEADER32.CertificateTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CertificateTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CertificateTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CertificateTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1032
      summary: "\nCertificateTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY CertificateTable
          VB: Public CertificateTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseRelocationTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseRelocationTable
      language: CSharp
      name:
        CSharp: BaseRelocationTable
        VB: BaseRelocationTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.BaseRelocationTable
        VB: IMAGE_OPTIONAL_HEADER32.BaseRelocationTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseRelocationTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BaseRelocationTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BaseRelocationTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1036
      summary: "\nBaseRelocationTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY BaseRelocationTable
          VB: Public BaseRelocationTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Debug
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.Debug
      language: CSharp
      name:
        CSharp: Debug
        VB: Debug
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.Debug
        VB: IMAGE_OPTIONAL_HEADER32.Debug
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Debug
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Debug
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Debug
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1040
      summary: "\nDebug\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY Debug
          VB: Public Debug As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Architecture
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.Architecture
      language: CSharp
      name:
        CSharp: Architecture
        VB: Architecture
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.Architecture
        VB: IMAGE_OPTIONAL_HEADER32.Architecture
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Architecture
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Architecture
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Architecture
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1044
      summary: "\nArchitecture\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY Architecture
          VB: Public Architecture As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.GlobalPtr
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.GlobalPtr
      language: CSharp
      name:
        CSharp: GlobalPtr
        VB: GlobalPtr
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.GlobalPtr
        VB: IMAGE_OPTIONAL_HEADER32.GlobalPtr
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.GlobalPtr
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.GlobalPtr
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GlobalPtr
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1048
      summary: "\nGlobalPtr\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY GlobalPtr
          VB: Public GlobalPtr As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.TLSTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.TLSTable
      language: CSharp
      name:
        CSharp: TLSTable
        VB: TLSTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.TLSTable
        VB: IMAGE_OPTIONAL_HEADER32.TLSTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.TLSTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.TLSTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TLSTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1052
      summary: "\nTLSTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY TLSTable
          VB: Public TLSTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.LoadConfigTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.LoadConfigTable
      language: CSharp
      name:
        CSharp: LoadConfigTable
        VB: LoadConfigTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.LoadConfigTable
        VB: IMAGE_OPTIONAL_HEADER32.LoadConfigTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.LoadConfigTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.LoadConfigTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LoadConfigTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1056
      summary: "\nLoadConfigTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY LoadConfigTable
          VB: Public LoadConfigTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BoundImport
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.BoundImport
      language: CSharp
      name:
        CSharp: BoundImport
        VB: BoundImport
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.BoundImport
        VB: IMAGE_OPTIONAL_HEADER32.BoundImport
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BoundImport
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.BoundImport
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BoundImport
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1060
      summary: "\nBoundImport\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY BoundImport
          VB: Public BoundImport As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.IAT
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.IAT
      language: CSharp
      name:
        CSharp: IAT
        VB: IAT
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.IAT
        VB: IMAGE_OPTIONAL_HEADER32.IAT
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.IAT
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.IAT
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IAT
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1064
      summary: "\nIAT\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY IAT
          VB: Public IAT As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.DelayImportDescriptor
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.DelayImportDescriptor
      language: CSharp
      name:
        CSharp: DelayImportDescriptor
        VB: DelayImportDescriptor
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.DelayImportDescriptor
        VB: IMAGE_OPTIONAL_HEADER32.DelayImportDescriptor
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.DelayImportDescriptor
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.DelayImportDescriptor
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DelayImportDescriptor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1068
      summary: "\nDelayImportDescriptor\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY DelayImportDescriptor
          VB: Public DelayImportDescriptor As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CLRRuntimeHeader
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.CLRRuntimeHeader
      language: CSharp
      name:
        CSharp: CLRRuntimeHeader
        VB: CLRRuntimeHeader
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.CLRRuntimeHeader
        VB: IMAGE_OPTIONAL_HEADER32.CLRRuntimeHeader
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CLRRuntimeHeader
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.CLRRuntimeHeader
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CLRRuntimeHeader
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1072
      summary: "\nCLRRuntimeHeader\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY CLRRuntimeHeader
          VB: Public CLRRuntimeHeader As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Reserved
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER32.Reserved
      language: CSharp
      name:
        CSharp: Reserved
        VB: Reserved
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER32.Reserved
        VB: IMAGE_OPTIONAL_HEADER32.Reserved
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Reserved
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER32.Reserved
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1076
      summary: "\nReserved\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY Reserved
          VB: Public Reserved As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64
    commentId: T:ERC.Structures.IMAGE_OPTIONAL_HEADER64
    language: CSharp
    name:
      CSharp: IMAGE_OPTIONAL_HEADER64
      VB: IMAGE_OPTIONAL_HEADER64
    nameWithType:
      CSharp: IMAGE_OPTIONAL_HEADER64
      VB: IMAGE_OPTIONAL_HEADER64
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64
      VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_OPTIONAL_HEADER64
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1084
    summary: "\nIMAGE_OPTIONAL_HEADER 64 bit variant. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_image_optional_header\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_OPTIONAL_HEADER64
        VB: Public Structure IMAGE_OPTIONAL_HEADER64
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Magic
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.Magic
      language: CSharp
      name:
        CSharp: Magic
        VB: Magic
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.Magic
        VB: IMAGE_OPTIONAL_HEADER64.Magic
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Magic
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Magic
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Magic
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1090
      summary: "\nMagic\n"
      example: []
      syntax:
        content:
          CSharp: public MagicType Magic
          VB: Public Magic As MagicType
        return:
          type: ERC.Structures.MagicType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorLinkerVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorLinkerVersion
      language: CSharp
      name:
        CSharp: MajorLinkerVersion
        VB: MajorLinkerVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.MajorLinkerVersion
        VB: IMAGE_OPTIONAL_HEADER64.MajorLinkerVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorLinkerVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorLinkerVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorLinkerVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1094
      summary: "\nMajorLinkerVersion\n"
      example: []
      syntax:
        content:
          CSharp: public byte MajorLinkerVersion
          VB: Public MajorLinkerVersion As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorLinkerVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorLinkerVersion
      language: CSharp
      name:
        CSharp: MinorLinkerVersion
        VB: MinorLinkerVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.MinorLinkerVersion
        VB: IMAGE_OPTIONAL_HEADER64.MinorLinkerVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorLinkerVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorLinkerVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorLinkerVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1098
      summary: "\nMinorLinkerVersion\n"
      example: []
      syntax:
        content:
          CSharp: public byte MinorLinkerVersion
          VB: Public MinorLinkerVersion As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfCode
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfCode
      language: CSharp
      name:
        CSharp: SizeOfCode
        VB: SizeOfCode
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfCode
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfCode
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfCode
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfCode
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfCode
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1102
      summary: "\nSizeOfCode\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfCode
          VB: Public SizeOfCode As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfInitializedData
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfInitializedData
      language: CSharp
      name:
        CSharp: SizeOfInitializedData
        VB: SizeOfInitializedData
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfInitializedData
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfInitializedData
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfInitializedData
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfInitializedData
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfInitializedData
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1106
      summary: "\nSizeOfInitializedData\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfInitializedData
          VB: Public SizeOfInitializedData As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfUninitializedData
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfUninitializedData
      language: CSharp
      name:
        CSharp: SizeOfUninitializedData
        VB: SizeOfUninitializedData
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfUninitializedData
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfUninitializedData
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfUninitializedData
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfUninitializedData
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfUninitializedData
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1110
      summary: "\nSizeOfUninitializedData\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfUninitializedData
          VB: Public SizeOfUninitializedData As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.AddressOfEntryPoint
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.AddressOfEntryPoint
      language: CSharp
      name:
        CSharp: AddressOfEntryPoint
        VB: AddressOfEntryPoint
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.AddressOfEntryPoint
        VB: IMAGE_OPTIONAL_HEADER64.AddressOfEntryPoint
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.AddressOfEntryPoint
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.AddressOfEntryPoint
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: AddressOfEntryPoint
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1114
      summary: "\nAddressOfEntryPoint\n"
      example: []
      syntax:
        content:
          CSharp: public uint AddressOfEntryPoint
          VB: Public AddressOfEntryPoint As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BaseOfCode
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.BaseOfCode
      language: CSharp
      name:
        CSharp: BaseOfCode
        VB: BaseOfCode
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.BaseOfCode
        VB: IMAGE_OPTIONAL_HEADER64.BaseOfCode
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BaseOfCode
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BaseOfCode
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BaseOfCode
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1118
      summary: "\nBaseOfCode\n"
      example: []
      syntax:
        content:
          CSharp: public uint BaseOfCode
          VB: Public BaseOfCode As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ImageBase
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.ImageBase
      language: CSharp
      name:
        CSharp: ImageBase
        VB: ImageBase
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.ImageBase
        VB: IMAGE_OPTIONAL_HEADER64.ImageBase
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ImageBase
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ImageBase
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ImageBase
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1122
      summary: "\nImageBase\n"
      example: []
      syntax:
        content:
          CSharp: public ulong ImageBase
          VB: Public ImageBase As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SectionAlignment
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SectionAlignment
      language: CSharp
      name:
        CSharp: SectionAlignment
        VB: SectionAlignment
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SectionAlignment
        VB: IMAGE_OPTIONAL_HEADER64.SectionAlignment
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SectionAlignment
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SectionAlignment
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SectionAlignment
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1126
      summary: "\nSectionAlignment\n"
      example: []
      syntax:
        content:
          CSharp: public uint SectionAlignment
          VB: Public SectionAlignment As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.FileAlignment
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.FileAlignment
      language: CSharp
      name:
        CSharp: FileAlignment
        VB: FileAlignment
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.FileAlignment
        VB: IMAGE_OPTIONAL_HEADER64.FileAlignment
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.FileAlignment
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.FileAlignment
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FileAlignment
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1130
      summary: "\nFileAlignment\n"
      example: []
      syntax:
        content:
          CSharp: public uint FileAlignment
          VB: Public FileAlignment As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorOperatingSystemVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorOperatingSystemVersion
      language: CSharp
      name:
        CSharp: MajorOperatingSystemVersion
        VB: MajorOperatingSystemVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.MajorOperatingSystemVersion
        VB: IMAGE_OPTIONAL_HEADER64.MajorOperatingSystemVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorOperatingSystemVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorOperatingSystemVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorOperatingSystemVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1134
      summary: "\nMajorOperatingSystemVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MajorOperatingSystemVersion
          VB: Public MajorOperatingSystemVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorOperatingSystemVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorOperatingSystemVersion
      language: CSharp
      name:
        CSharp: MinorOperatingSystemVersion
        VB: MinorOperatingSystemVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.MinorOperatingSystemVersion
        VB: IMAGE_OPTIONAL_HEADER64.MinorOperatingSystemVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorOperatingSystemVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorOperatingSystemVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorOperatingSystemVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1138
      summary: "\nMinorOperatingSystemVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MinorOperatingSystemVersion
          VB: Public MinorOperatingSystemVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorImageVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorImageVersion
      language: CSharp
      name:
        CSharp: MajorImageVersion
        VB: MajorImageVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.MajorImageVersion
        VB: IMAGE_OPTIONAL_HEADER64.MajorImageVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorImageVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorImageVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorImageVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1142
      summary: "\nMajorImageVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MajorImageVersion
          VB: Public MajorImageVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorImageVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorImageVersion
      language: CSharp
      name:
        CSharp: MinorImageVersion
        VB: MinorImageVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.MinorImageVersion
        VB: IMAGE_OPTIONAL_HEADER64.MinorImageVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorImageVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorImageVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorImageVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1146
      summary: "\nMinorImageVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MinorImageVersion
          VB: Public MinorImageVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorSubsystemVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorSubsystemVersion
      language: CSharp
      name:
        CSharp: MajorSubsystemVersion
        VB: MajorSubsystemVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.MajorSubsystemVersion
        VB: IMAGE_OPTIONAL_HEADER64.MajorSubsystemVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorSubsystemVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MajorSubsystemVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorSubsystemVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1150
      summary: "\nMajorSubsystemVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MajorSubsystemVersion
          VB: Public MajorSubsystemVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorSubsystemVersion
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorSubsystemVersion
      language: CSharp
      name:
        CSharp: MinorSubsystemVersion
        VB: MinorSubsystemVersion
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.MinorSubsystemVersion
        VB: IMAGE_OPTIONAL_HEADER64.MinorSubsystemVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorSubsystemVersion
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.MinorSubsystemVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorSubsystemVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1154
      summary: "\nMinorSubsystemVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MinorSubsystemVersion
          VB: Public MinorSubsystemVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Win32VersionValue
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.Win32VersionValue
      language: CSharp
      name:
        CSharp: Win32VersionValue
        VB: Win32VersionValue
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.Win32VersionValue
        VB: IMAGE_OPTIONAL_HEADER64.Win32VersionValue
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Win32VersionValue
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Win32VersionValue
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Win32VersionValue
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1158
      summary: "\nWin32VersionValue\n"
      example: []
      syntax:
        content:
          CSharp: public uint Win32VersionValue
          VB: Public Win32VersionValue As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfImage
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfImage
      language: CSharp
      name:
        CSharp: SizeOfImage
        VB: SizeOfImage
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfImage
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfImage
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfImage
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfImage
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfImage
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1162
      summary: "\nSizeOfImage\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfImage
          VB: Public SizeOfImage As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeaders
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeaders
      language: CSharp
      name:
        CSharp: SizeOfHeaders
        VB: SizeOfHeaders
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfHeaders
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfHeaders
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeaders
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeaders
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfHeaders
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1166
      summary: "\nSizeOfHeaders\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfHeaders
          VB: Public SizeOfHeaders As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CheckSum
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.CheckSum
      language: CSharp
      name:
        CSharp: CheckSum
        VB: CheckSum
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.CheckSum
        VB: IMAGE_OPTIONAL_HEADER64.CheckSum
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CheckSum
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CheckSum
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CheckSum
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1170
      summary: "\nCheckSum\n"
      example: []
      syntax:
        content:
          CSharp: public uint CheckSum
          VB: Public CheckSum As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Subsystem
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.Subsystem
      language: CSharp
      name:
        CSharp: Subsystem
        VB: Subsystem
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.Subsystem
        VB: IMAGE_OPTIONAL_HEADER64.Subsystem
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Subsystem
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Subsystem
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Subsystem
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1174
      summary: "\nSubsystem\n"
      example: []
      syntax:
        content:
          CSharp: public SubSystemType Subsystem
          VB: Public Subsystem As SubSystemType
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.DllCharacteristics
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.DllCharacteristics
      language: CSharp
      name:
        CSharp: DllCharacteristics
        VB: DllCharacteristics
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.DllCharacteristics
        VB: IMAGE_OPTIONAL_HEADER64.DllCharacteristics
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.DllCharacteristics
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.DllCharacteristics
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DllCharacteristics
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1178
      summary: "\nDllCharacteristics\n"
      example: []
      syntax:
        content:
          CSharp: public ushort DllCharacteristics
          VB: Public DllCharacteristics As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfStackReserve
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfStackReserve
      language: CSharp
      name:
        CSharp: SizeOfStackReserve
        VB: SizeOfStackReserve
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfStackReserve
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfStackReserve
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfStackReserve
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfStackReserve
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfStackReserve
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1182
      summary: "\nSizeOfStackReserve\n"
      example: []
      syntax:
        content:
          CSharp: public ulong SizeOfStackReserve
          VB: Public SizeOfStackReserve As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfStackCommit
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfStackCommit
      language: CSharp
      name:
        CSharp: SizeOfStackCommit
        VB: SizeOfStackCommit
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfStackCommit
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfStackCommit
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfStackCommit
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfStackCommit
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfStackCommit
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1186
      summary: "\nSizeOfStackCommit\n"
      example: []
      syntax:
        content:
          CSharp: public ulong SizeOfStackCommit
          VB: Public SizeOfStackCommit As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeapReserve
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeapReserve
      language: CSharp
      name:
        CSharp: SizeOfHeapReserve
        VB: SizeOfHeapReserve
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfHeapReserve
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfHeapReserve
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeapReserve
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeapReserve
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfHeapReserve
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1190
      summary: "\nSizeOfHeapReserve\n"
      example: []
      syntax:
        content:
          CSharp: public ulong SizeOfHeapReserve
          VB: Public SizeOfHeapReserve As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeapCommit
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeapCommit
      language: CSharp
      name:
        CSharp: SizeOfHeapCommit
        VB: SizeOfHeapCommit
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.SizeOfHeapCommit
        VB: IMAGE_OPTIONAL_HEADER64.SizeOfHeapCommit
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeapCommit
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.SizeOfHeapCommit
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfHeapCommit
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1194
      summary: "\nSizeOfHeapCommit\n"
      example: []
      syntax:
        content:
          CSharp: public ulong SizeOfHeapCommit
          VB: Public SizeOfHeapCommit As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.LoaderFlags
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.LoaderFlags
      language: CSharp
      name:
        CSharp: LoaderFlags
        VB: LoaderFlags
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.LoaderFlags
        VB: IMAGE_OPTIONAL_HEADER64.LoaderFlags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.LoaderFlags
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.LoaderFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LoaderFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1198
      summary: "\nLoaderFlags\n"
      example: []
      syntax:
        content:
          CSharp: public uint LoaderFlags
          VB: Public LoaderFlags As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.NumberOfRvaAndSizes
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.NumberOfRvaAndSizes
      language: CSharp
      name:
        CSharp: NumberOfRvaAndSizes
        VB: NumberOfRvaAndSizes
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.NumberOfRvaAndSizes
        VB: IMAGE_OPTIONAL_HEADER64.NumberOfRvaAndSizes
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.NumberOfRvaAndSizes
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.NumberOfRvaAndSizes
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: NumberOfRvaAndSizes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1202
      summary: "\nNumberOfRvaAndSizes\n"
      example: []
      syntax:
        content:
          CSharp: public uint NumberOfRvaAndSizes
          VB: Public NumberOfRvaAndSizes As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ExportTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.ExportTable
      language: CSharp
      name:
        CSharp: ExportTable
        VB: ExportTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.ExportTable
        VB: IMAGE_OPTIONAL_HEADER64.ExportTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ExportTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ExportTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ExportTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1206
      summary: "\nExportTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY ExportTable
          VB: Public ExportTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ImportTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.ImportTable
      language: CSharp
      name:
        CSharp: ImportTable
        VB: ImportTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.ImportTable
        VB: IMAGE_OPTIONAL_HEADER64.ImportTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ImportTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ImportTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ImportTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1210
      summary: "\nImportTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY ImportTable
          VB: Public ImportTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ResourceTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.ResourceTable
      language: CSharp
      name:
        CSharp: ResourceTable
        VB: ResourceTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.ResourceTable
        VB: IMAGE_OPTIONAL_HEADER64.ResourceTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ResourceTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ResourceTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ResourceTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1214
      summary: "\nResourceTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY ResourceTable
          VB: Public ResourceTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ExceptionTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.ExceptionTable
      language: CSharp
      name:
        CSharp: ExceptionTable
        VB: ExceptionTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.ExceptionTable
        VB: IMAGE_OPTIONAL_HEADER64.ExceptionTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ExceptionTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.ExceptionTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ExceptionTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1218
      summary: "\nExceptionTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY ExceptionTable
          VB: Public ExceptionTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CertificateTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.CertificateTable
      language: CSharp
      name:
        CSharp: CertificateTable
        VB: CertificateTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.CertificateTable
        VB: IMAGE_OPTIONAL_HEADER64.CertificateTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CertificateTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CertificateTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CertificateTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1222
      summary: "\nCertificateTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY CertificateTable
          VB: Public CertificateTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BaseRelocationTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.BaseRelocationTable
      language: CSharp
      name:
        CSharp: BaseRelocationTable
        VB: BaseRelocationTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.BaseRelocationTable
        VB: IMAGE_OPTIONAL_HEADER64.BaseRelocationTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BaseRelocationTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BaseRelocationTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BaseRelocationTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1226
      summary: "\nBaseRelocationTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY BaseRelocationTable
          VB: Public BaseRelocationTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Debug
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.Debug
      language: CSharp
      name:
        CSharp: Debug
        VB: Debug
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.Debug
        VB: IMAGE_OPTIONAL_HEADER64.Debug
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Debug
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Debug
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Debug
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1230
      summary: "\nDebug\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY Debug
          VB: Public Debug As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Architecture
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.Architecture
      language: CSharp
      name:
        CSharp: Architecture
        VB: Architecture
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.Architecture
        VB: IMAGE_OPTIONAL_HEADER64.Architecture
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Architecture
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Architecture
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Architecture
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1234
      summary: "\nArchitecture\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY Architecture
          VB: Public Architecture As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.GlobalPtr
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.GlobalPtr
      language: CSharp
      name:
        CSharp: GlobalPtr
        VB: GlobalPtr
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.GlobalPtr
        VB: IMAGE_OPTIONAL_HEADER64.GlobalPtr
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.GlobalPtr
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.GlobalPtr
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GlobalPtr
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1238
      summary: "\nGlobalPtr\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY GlobalPtr
          VB: Public GlobalPtr As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.TLSTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.TLSTable
      language: CSharp
      name:
        CSharp: TLSTable
        VB: TLSTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.TLSTable
        VB: IMAGE_OPTIONAL_HEADER64.TLSTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.TLSTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.TLSTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TLSTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1242
      summary: "\nTLSTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY TLSTable
          VB: Public TLSTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.LoadConfigTable
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.LoadConfigTable
      language: CSharp
      name:
        CSharp: LoadConfigTable
        VB: LoadConfigTable
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.LoadConfigTable
        VB: IMAGE_OPTIONAL_HEADER64.LoadConfigTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.LoadConfigTable
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.LoadConfigTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LoadConfigTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1246
      summary: "\nLoadConfigTable\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY LoadConfigTable
          VB: Public LoadConfigTable As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BoundImport
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.BoundImport
      language: CSharp
      name:
        CSharp: BoundImport
        VB: BoundImport
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.BoundImport
        VB: IMAGE_OPTIONAL_HEADER64.BoundImport
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BoundImport
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.BoundImport
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BoundImport
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1250
      summary: "\nBoundImport\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY BoundImport
          VB: Public BoundImport As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.IAT
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.IAT
      language: CSharp
      name:
        CSharp: IAT
        VB: IAT
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.IAT
        VB: IMAGE_OPTIONAL_HEADER64.IAT
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.IAT
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.IAT
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IAT
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1254
      summary: "\nIAT\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY IAT
          VB: Public IAT As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.DelayImportDescriptor
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.DelayImportDescriptor
      language: CSharp
      name:
        CSharp: DelayImportDescriptor
        VB: DelayImportDescriptor
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.DelayImportDescriptor
        VB: IMAGE_OPTIONAL_HEADER64.DelayImportDescriptor
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.DelayImportDescriptor
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.DelayImportDescriptor
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DelayImportDescriptor
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1258
      summary: "\nDelayImportDescriptor\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY DelayImportDescriptor
          VB: Public DelayImportDescriptor As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CLRRuntimeHeader
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.CLRRuntimeHeader
      language: CSharp
      name:
        CSharp: CLRRuntimeHeader
        VB: CLRRuntimeHeader
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.CLRRuntimeHeader
        VB: IMAGE_OPTIONAL_HEADER64.CLRRuntimeHeader
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CLRRuntimeHeader
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.CLRRuntimeHeader
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CLRRuntimeHeader
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1262
      summary: "\nCLRRuntimeHeader\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY CLRRuntimeHeader
          VB: Public CLRRuntimeHeader As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Reserved
      commentId: F:ERC.Structures.IMAGE_OPTIONAL_HEADER64.Reserved
      language: CSharp
      name:
        CSharp: Reserved
        VB: Reserved
      nameWithType:
        CSharp: IMAGE_OPTIONAL_HEADER64.Reserved
        VB: IMAGE_OPTIONAL_HEADER64.Reserved
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Reserved
        VB: ERC.Structures.IMAGE_OPTIONAL_HEADER64.Reserved
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1266
      summary: "\nReserved\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_DATA_DIRECTORY Reserved
          VB: Public Reserved As IMAGE_DATA_DIRECTORY
        return:
          type: ERC.Structures.IMAGE_DATA_DIRECTORY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.MagicType
    commentId: T:ERC.Structures.MagicType
    language: CSharp
    name:
      CSharp: MagicType
      VB: MagicType
    nameWithType:
      CSharp: MagicType
      VB: MagicType
    qualifiedName:
      CSharp: ERC.Structures.MagicType
      VB: ERC.Structures.MagicType
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: MagicType
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1274
    summary: "\nImage Option Header Magic Type.\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum MagicType : ushort'
        VB: Public Enum MagicType As UShort
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.MagicType.IMAGE_NT_OPTIONAL_HDR32_MAGIC
      commentId: F:ERC.Structures.MagicType.IMAGE_NT_OPTIONAL_HDR32_MAGIC
      language: CSharp
      name:
        CSharp: IMAGE_NT_OPTIONAL_HDR32_MAGIC
        VB: IMAGE_NT_OPTIONAL_HDR32_MAGIC
      nameWithType:
        CSharp: MagicType.IMAGE_NT_OPTIONAL_HDR32_MAGIC
        VB: MagicType.IMAGE_NT_OPTIONAL_HDR32_MAGIC
      qualifiedName:
        CSharp: ERC.Structures.MagicType.IMAGE_NT_OPTIONAL_HDR32_MAGIC
        VB: ERC.Structures.MagicType.IMAGE_NT_OPTIONAL_HDR32_MAGIC
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_NT_OPTIONAL_HDR32_MAGIC
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1279
      summary: "\nIMAGE_NT_OPTIONAL_HDR32_MAGIC\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_NT_OPTIONAL_HDR32_MAGIC = 267
          VB: IMAGE_NT_OPTIONAL_HDR32_MAGIC = 267
        return:
          type: ERC.Structures.MagicType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.MagicType.IMAGE_NT_OPTIONAL_HDR64_MAGIC
      commentId: F:ERC.Structures.MagicType.IMAGE_NT_OPTIONAL_HDR64_MAGIC
      language: CSharp
      name:
        CSharp: IMAGE_NT_OPTIONAL_HDR64_MAGIC
        VB: IMAGE_NT_OPTIONAL_HDR64_MAGIC
      nameWithType:
        CSharp: MagicType.IMAGE_NT_OPTIONAL_HDR64_MAGIC
        VB: MagicType.IMAGE_NT_OPTIONAL_HDR64_MAGIC
      qualifiedName:
        CSharp: ERC.Structures.MagicType.IMAGE_NT_OPTIONAL_HDR64_MAGIC
        VB: ERC.Structures.MagicType.IMAGE_NT_OPTIONAL_HDR64_MAGIC
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_NT_OPTIONAL_HDR64_MAGIC
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1283
      summary: "\nIMAGE_NT_OPTIONAL_HDR64_MAGIC\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_NT_OPTIONAL_HDR64_MAGIC = 523
          VB: IMAGE_NT_OPTIONAL_HDR64_MAGIC = 523
        return:
          type: ERC.Structures.MagicType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.SubSystemType
    commentId: T:ERC.Structures.SubSystemType
    language: CSharp
    name:
      CSharp: SubSystemType
      VB: SubSystemType
    nameWithType:
      CSharp: SubSystemType
      VB: SubSystemType
    qualifiedName:
      CSharp: ERC.Structures.SubSystemType
      VB: ERC.Structures.SubSystemType
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: SubSystemType
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1291
    summary: "\nImage Option Header SubSystem Type.\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum SubSystemType : ushort'
        VB: Public Enum SubSystemType As UShort
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_UNKNOWN
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_UNKNOWN
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_UNKNOWN
        VB: IMAGE_SUBSYSTEM_UNKNOWN
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_UNKNOWN
        VB: SubSystemType.IMAGE_SUBSYSTEM_UNKNOWN
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_UNKNOWN
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_UNKNOWN
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_UNKNOWN
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1296
      summary: "\nIMAGE_SUBSYSTEM_UNKNOWN\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_UNKNOWN = 0
          VB: IMAGE_SUBSYSTEM_UNKNOWN = 0
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_NATIVE
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_NATIVE
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_NATIVE
        VB: IMAGE_SUBSYSTEM_NATIVE
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_NATIVE
        VB: SubSystemType.IMAGE_SUBSYSTEM_NATIVE
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_NATIVE
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_NATIVE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_NATIVE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1300
      summary: "\nIMAGE_SUBSYSTEM_NATIVE\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_NATIVE = 1
          VB: IMAGE_SUBSYSTEM_NATIVE = 1
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_GUI
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_GUI
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_WINDOWS_GUI
        VB: IMAGE_SUBSYSTEM_WINDOWS_GUI
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_GUI
        VB: SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_GUI
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_GUI
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_GUI
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_WINDOWS_GUI
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1304
      summary: "\nIMAGE_SUBSYSTEM_WINDOWS_GUI\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_WINDOWS_GUI = 2
          VB: IMAGE_SUBSYSTEM_WINDOWS_GUI = 2
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CUI
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CUI
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_WINDOWS_CUI
        VB: IMAGE_SUBSYSTEM_WINDOWS_CUI
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CUI
        VB: SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CUI
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CUI
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CUI
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_WINDOWS_CUI
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1308
      summary: "\nIMAGE_SUBSYSTEM_WINDOWS_CUI\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_WINDOWS_CUI = 3
          VB: IMAGE_SUBSYSTEM_WINDOWS_CUI = 3
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_POSIX_CUI
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_POSIX_CUI
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_POSIX_CUI
        VB: IMAGE_SUBSYSTEM_POSIX_CUI
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_POSIX_CUI
        VB: SubSystemType.IMAGE_SUBSYSTEM_POSIX_CUI
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_POSIX_CUI
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_POSIX_CUI
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_POSIX_CUI
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1312
      summary: "\nIMAGE_SUBSYSTEM_POSIX_CUI\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_POSIX_CUI = 7
          VB: IMAGE_SUBSYSTEM_POSIX_CUI = 7
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
        VB: IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
        VB: SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_WINDOWS_CE_GUI
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1316
      summary: "\nIMAGE_SUBSYSTEM_WINDOWS_CE_GUI\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9
          VB: IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_APPLICATION
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_APPLICATION
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_EFI_APPLICATION
        VB: IMAGE_SUBSYSTEM_EFI_APPLICATION
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_EFI_APPLICATION
        VB: SubSystemType.IMAGE_SUBSYSTEM_EFI_APPLICATION
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_APPLICATION
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_APPLICATION
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_EFI_APPLICATION
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1320
      summary: "\nIMAGE_SUBSYSTEM_EFI_APPLICATION\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_EFI_APPLICATION = 10
          VB: IMAGE_SUBSYSTEM_EFI_APPLICATION = 10
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
        VB: IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
        VB: SubSystemType.IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1324
      summary: "\nIMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11
          VB: IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
        VB: IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
        VB: SubSystemType.IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1328
      summary: "\nIMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12
          VB: IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_ROM
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_ROM
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_EFI_ROM
        VB: IMAGE_SUBSYSTEM_EFI_ROM
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_EFI_ROM
        VB: SubSystemType.IMAGE_SUBSYSTEM_EFI_ROM
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_ROM
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_EFI_ROM
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_EFI_ROM
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1332
      summary: "\nIMAGE_SUBSYSTEM_EFI_ROM\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_EFI_ROM = 13
          VB: IMAGE_SUBSYSTEM_EFI_ROM = 13
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_XBOX
      commentId: F:ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_XBOX
      language: CSharp
      name:
        CSharp: IMAGE_SUBSYSTEM_XBOX
        VB: IMAGE_SUBSYSTEM_XBOX
      nameWithType:
        CSharp: SubSystemType.IMAGE_SUBSYSTEM_XBOX
        VB: SubSystemType.IMAGE_SUBSYSTEM_XBOX
      qualifiedName:
        CSharp: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_XBOX
        VB: ERC.Structures.SubSystemType.IMAGE_SUBSYSTEM_XBOX
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMAGE_SUBSYSTEM_XBOX
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1336
      summary: "\nIMAGE_SUBSYSTEM_XBOX\n"
      example: []
      syntax:
        content:
          CSharp: IMAGE_SUBSYSTEM_XBOX = 14
          VB: IMAGE_SUBSYSTEM_XBOX = 14
        return:
          type: ERC.Structures.SubSystemType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
    commentId: T:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
    language: CSharp
    name:
      CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32
      VB: IMAGE_LOAD_CONFIG_DIRECTORY32
    nameWithType:
      CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32
      VB: IMAGE_LOAD_CONFIG_DIRECTORY32
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
      VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_LOAD_CONFIG_DIRECTORY32
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1344
    summary: "\nIMAGE_LOAD_CONFIG_DIRECTORY32. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_image_load_config_directory32\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_LOAD_CONFIG_DIRECTORY32
        VB: Public Structure IMAGE_LOAD_CONFIG_DIRECTORY32
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Size
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.Size
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.Size
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Size
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Size
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Size
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1350
      summary: "\nSize\n"
      example: []
      syntax:
        content:
          CSharp: public uint Size
          VB: Public Size As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.TimeDateStamp
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.TimeDateStamp
      language: CSharp
      name:
        CSharp: TimeDateStamp
        VB: TimeDateStamp
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.TimeDateStamp
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.TimeDateStamp
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.TimeDateStamp
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.TimeDateStamp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TimeDateStamp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1354
      summary: "\nTimeDateStamp\n"
      example: []
      syntax:
        content:
          CSharp: public uint TimeDateStamp
          VB: Public TimeDateStamp As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MajorVersion
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MajorVersion
      language: CSharp
      name:
        CSharp: MajorVersion
        VB: MajorVersion
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.MajorVersion
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.MajorVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MajorVersion
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MajorVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1358
      summary: "\nMajorVersio\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MajorVersion
          VB: Public MajorVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MinorVersion
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MinorVersion
      language: CSharp
      name:
        CSharp: MinorVersion
        VB: MinorVersion
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.MinorVersion
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.MinorVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MinorVersion
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MinorVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1362
      summary: "\nMinorVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MinorVersion
          VB: Public MinorVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsClear
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsClear
      language: CSharp
      name:
        CSharp: GlobalFlagsClear
        VB: GlobalFlagsClear
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsClear
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsClear
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsClear
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsClear
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GlobalFlagsClear
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1366
      summary: "\nGlobalFlagsClear\n"
      example: []
      syntax:
        content:
          CSharp: public uint GlobalFlagsClear
          VB: Public GlobalFlagsClear As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsSet
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsSet
      language: CSharp
      name:
        CSharp: GlobalFlagsSet
        VB: GlobalFlagsSet
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsSet
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsSet
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsSet
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GlobalFlagsSet
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GlobalFlagsSet
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1370
      summary: "\nGlobalFlagsSet\n"
      example: []
      syntax:
        content:
          CSharp: public uint GlobalFlagsSet
          VB: Public GlobalFlagsSet As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CriticalSectionDefaultTimeout
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CriticalSectionDefaultTimeout
      language: CSharp
      name:
        CSharp: CriticalSectionDefaultTimeout
        VB: CriticalSectionDefaultTimeout
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.CriticalSectionDefaultTimeout
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.CriticalSectionDefaultTimeout
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CriticalSectionDefaultTimeout
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CriticalSectionDefaultTimeout
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CriticalSectionDefaultTimeout
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1374
      summary: "\nCriticalSectionDefaultTimeout\n"
      example: []
      syntax:
        content:
          CSharp: public uint CriticalSectionDefaultTimeout
          VB: Public CriticalSectionDefaultTimeout As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitFreeBlockThreshold
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitFreeBlockThreshold
      language: CSharp
      name:
        CSharp: DeCommitFreeBlockThreshold
        VB: DeCommitFreeBlockThreshold
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitFreeBlockThreshold
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitFreeBlockThreshold
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitFreeBlockThreshold
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitFreeBlockThreshold
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DeCommitFreeBlockThreshold
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1378
      summary: "\nDeCommitFreeBlockThreshold\n"
      example: []
      syntax:
        content:
          CSharp: public uint DeCommitFreeBlockThreshold
          VB: Public DeCommitFreeBlockThreshold As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitTotalFreeThreshold
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitTotalFreeThreshold
      language: CSharp
      name:
        CSharp: DeCommitTotalFreeThreshold
        VB: DeCommitTotalFreeThreshold
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitTotalFreeThreshold
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitTotalFreeThreshold
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitTotalFreeThreshold
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DeCommitTotalFreeThreshold
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DeCommitTotalFreeThreshold
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1382
      summary: "\nDeCommitTotalFreeThreshold\n"
      example: []
      syntax:
        content:
          CSharp: public uint DeCommitTotalFreeThreshold
          VB: Public DeCommitTotalFreeThreshold As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.LockPrefixTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.LockPrefixTable
      language: CSharp
      name:
        CSharp: LockPrefixTable
        VB: LockPrefixTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.LockPrefixTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.LockPrefixTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.LockPrefixTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.LockPrefixTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LockPrefixTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1386
      summary: "\nLockPrefixTable\n"
      example: []
      syntax:
        content:
          CSharp: public uint LockPrefixTable
          VB: Public LockPrefixTable As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MaximumAllocationSize
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MaximumAllocationSize
      language: CSharp
      name:
        CSharp: MaximumAllocationSize
        VB: MaximumAllocationSize
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.MaximumAllocationSize
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.MaximumAllocationSize
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MaximumAllocationSize
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.MaximumAllocationSize
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MaximumAllocationSize
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1390
      summary: "\nMaximumAllocationSize\n"
      example: []
      syntax:
        content:
          CSharp: public uint MaximumAllocationSize
          VB: Public MaximumAllocationSize As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.VirtualMemoryThreshold
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.VirtualMemoryThreshold
      language: CSharp
      name:
        CSharp: VirtualMemoryThreshold
        VB: VirtualMemoryThreshold
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.VirtualMemoryThreshold
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.VirtualMemoryThreshold
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.VirtualMemoryThreshold
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.VirtualMemoryThreshold
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VirtualMemoryThreshold
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1394
      summary: "\nVirtualMemoryThreshold\n"
      example: []
      syntax:
        content:
          CSharp: public uint VirtualMemoryThreshold
          VB: Public VirtualMemoryThreshold As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessHeapFlags
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessHeapFlags
      language: CSharp
      name:
        CSharp: ProcessHeapFlags
        VB: ProcessHeapFlags
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessHeapFlags
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessHeapFlags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessHeapFlags
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessHeapFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ProcessHeapFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1398
      summary: "\nProcessHeapFlags\n"
      example: []
      syntax:
        content:
          CSharp: public uint ProcessHeapFlags
          VB: Public ProcessHeapFlags As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessAffinityMask
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessAffinityMask
      language: CSharp
      name:
        CSharp: ProcessAffinityMask
        VB: ProcessAffinityMask
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessAffinityMask
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessAffinityMask
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessAffinityMask
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.ProcessAffinityMask
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ProcessAffinityMask
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1402
      summary: "\nProcessAffinityMask\n"
      example: []
      syntax:
        content:
          CSharp: public uint ProcessAffinityMask
          VB: Public ProcessAffinityMask As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CSDVersion
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CSDVersion
      language: CSharp
      name:
        CSharp: CSDVersion
        VB: CSDVersion
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.CSDVersion
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.CSDVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CSDVersion
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CSDVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CSDVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1406
      summary: "\nCSDVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort CSDVersion
          VB: Public CSDVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DependentLoadFlags
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DependentLoadFlags
      language: CSharp
      name:
        CSharp: DependentLoadFlags
        VB: DependentLoadFlags
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.DependentLoadFlags
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.DependentLoadFlags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DependentLoadFlags
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DependentLoadFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DependentLoadFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1410
      summary: "\nDependentLoadFlags\n"
      example: []
      syntax:
        content:
          CSharp: public ushort DependentLoadFlags
          VB: Public DependentLoadFlags As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.EditList
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.EditList
      language: CSharp
      name:
        CSharp: EditList
        VB: EditList
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.EditList
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.EditList
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.EditList
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.EditList
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: EditList
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1414
      summary: "\nEditList\n"
      example: []
      syntax:
        content:
          CSharp: public uint EditList
          VB: Public EditList As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SecurityCookie
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SecurityCookie
      language: CSharp
      name:
        CSharp: SecurityCookie
        VB: SecurityCookie
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.SecurityCookie
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.SecurityCookie
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SecurityCookie
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SecurityCookie
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SecurityCookie
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1418
      summary: "\nSecurityCookie\n"
      example: []
      syntax:
        content:
          CSharp: public uint SecurityCookie
          VB: Public SecurityCookie As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerTable
      language: CSharp
      name:
        CSharp: SEHandlerTable
        VB: SEHandlerTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SEHandlerTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1422
      summary: "\nSEHandlerTable\n"
      example: []
      syntax:
        content:
          CSharp: public uint SEHandlerTable
          VB: Public SEHandlerTable As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerCount
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerCount
      language: CSharp
      name:
        CSharp: SEHandlerCount
        VB: SEHandlerCount
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerCount
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerCount
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerCount
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.SEHandlerCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SEHandlerCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1426
      summary: "\nSEHandlerCount\n"
      example: []
      syntax:
        content:
          CSharp: public uint SEHandlerCount
          VB: Public SEHandlerCount As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFCheckFunctionPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFCheckFunctionPointer
      language: CSharp
      name:
        CSharp: GuardCFCheckFunctionPointer
        VB: GuardCFCheckFunctionPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFCheckFunctionPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFCheckFunctionPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFCheckFunctionPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFCheckFunctionPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardCFCheckFunctionPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1430
      summary: "\nGuardCFCheckFunctionPointer\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardCFCheckFunctionPointer
          VB: Public GuardCFCheckFunctionPointer As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFDispatchFunctionPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFDispatchFunctionPointer
      language: CSharp
      name:
        CSharp: GuardCFDispatchFunctionPointer
        VB: GuardCFDispatchFunctionPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFDispatchFunctionPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFDispatchFunctionPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFDispatchFunctionPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFDispatchFunctionPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardCFDispatchFunctionPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1434
      summary: "\nGuardCFDispatchFunctionPointer\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardCFDispatchFunctionPointer
          VB: Public GuardCFDispatchFunctionPointer As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionTable
      language: CSharp
      name:
        CSharp: GuardCFFunctionTable
        VB: GuardCFFunctionTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardCFFunctionTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1438
      summary: "\nGuardCFFunctionTable\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardCFFunctionTable
          VB: Public GuardCFFunctionTable As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionCount
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionCount
      language: CSharp
      name:
        CSharp: GuardCFFunctionCount
        VB: GuardCFFunctionCount
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionCount
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionCount
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionCount
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardCFFunctionCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardCFFunctionCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1442
      summary: "\nGuardCFFunctionCount\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardCFFunctionCount
          VB: Public GuardCFFunctionCount As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardFlags
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardFlags
      language: CSharp
      name:
        CSharp: GuardFlags
        VB: GuardFlags
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardFlags
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardFlags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardFlags
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1446
      summary: "\nGuardFlags\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardFlags
          VB: Public GuardFlags As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CodeIntegrity
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CodeIntegrity
      language: CSharp
      name:
        CSharp: CodeIntegrity
        VB: CodeIntegrity
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.CodeIntegrity
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.CodeIntegrity
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CodeIntegrity
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CodeIntegrity
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CodeIntegrity
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1450
      summary: "\nCodeIntegrity\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity
          VB: Public CodeIntegrity As IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        return:
          type: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryTable
      language: CSharp
      name:
        CSharp: GuardAddressTakenIatEntryTable
        VB: GuardAddressTakenIatEntryTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardAddressTakenIatEntryTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1454
      summary: "\nGuardAddressTakenIatEntryTable\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardAddressTakenIatEntryTable
          VB: Public GuardAddressTakenIatEntryTable As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryCount
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryCount
      language: CSharp
      name:
        CSharp: GuardAddressTakenIatEntryCount
        VB: GuardAddressTakenIatEntryCount
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryCount
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryCount
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryCount
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardAddressTakenIatEntryCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardAddressTakenIatEntryCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1458
      summary: "\nGuardAddressTakenIatEntryCount\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardAddressTakenIatEntryCount
          VB: Public GuardAddressTakenIatEntryCount As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetTable
      language: CSharp
      name:
        CSharp: GuardLongJumpTargetTable
        VB: GuardLongJumpTargetTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardLongJumpTargetTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1462
      summary: "\nGuardLongJumpTargetTable\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardLongJumpTargetTable
          VB: Public GuardLongJumpTargetTable As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetCount
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetCount
      language: CSharp
      name:
        CSharp: GuardLongJumpTargetCount
        VB: GuardLongJumpTargetCount
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetCount
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetCount
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetCount
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardLongJumpTargetCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardLongJumpTargetCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1466
      summary: "\nGuardLongJumpTargetCount\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardLongJumpTargetCount
          VB: Public GuardLongJumpTargetCount As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTable
      language: CSharp
      name:
        CSharp: DynamicValueRelocTable
        VB: DynamicValueRelocTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DynamicValueRelocTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1470
      summary: "\nDynamicValueRelocTable\n"
      example: []
      syntax:
        content:
          CSharp: public uint DynamicValueRelocTable
          VB: Public DynamicValueRelocTable As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CHPEMetadataPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CHPEMetadataPointer
      language: CSharp
      name:
        CSharp: CHPEMetadataPointer
        VB: CHPEMetadataPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.CHPEMetadataPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.CHPEMetadataPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CHPEMetadataPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.CHPEMetadataPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CHPEMetadataPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1474
      summary: "\nCHPEMetadataPointer\n"
      example: []
      syntax:
        content:
          CSharp: public uint CHPEMetadataPointer
          VB: Public CHPEMetadataPointer As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutine
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutine
      language: CSharp
      name:
        CSharp: GuardRFFailureRoutine
        VB: GuardRFFailureRoutine
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutine
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutine
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutine
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutine
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardRFFailureRoutine
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1478
      summary: "\nGuardRFFailureRoutine\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardRFFailureRoutine
          VB: Public GuardRFFailureRoutine As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutineFunctionPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutineFunctionPointer
      language: CSharp
      name:
        CSharp: GuardRFFailureRoutineFunctionPointer
        VB: GuardRFFailureRoutineFunctionPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutineFunctionPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutineFunctionPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutineFunctionPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFFailureRoutineFunctionPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardRFFailureRoutineFunctionPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1482
      summary: "\nGuardRFFailureRoutineFunctionPointer\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardRFFailureRoutineFunctionPointer
          VB: Public GuardRFFailureRoutineFunctionPointer As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableOffset
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableOffset
      language: CSharp
      name:
        CSharp: DynamicValueRelocTableOffset
        VB: DynamicValueRelocTableOffset
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableOffset
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableOffset
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableOffset
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DynamicValueRelocTableOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1486
      summary: "\nDynamicValueRelocTableOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint DynamicValueRelocTableOffset
          VB: Public DynamicValueRelocTableOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableSection
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableSection
      language: CSharp
      name:
        CSharp: DynamicValueRelocTableSection
        VB: DynamicValueRelocTableSection
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableSection
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableSection
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableSection
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.DynamicValueRelocTableSection
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DynamicValueRelocTableSection
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1490
      summary: "\nDynamicValueRelocTableSection\n"
      example: []
      syntax:
        content:
          CSharp: public ushort DynamicValueRelocTableSection
          VB: Public DynamicValueRelocTableSection As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved2
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved2
      language: CSharp
      name:
        CSharp: Reserved2
        VB: Reserved2
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved2
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved2
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved2
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved2
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved2
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1494
      summary: "\nReserved2\n"
      example: []
      syntax:
        content:
          CSharp: public ushort Reserved2
          VB: Public Reserved2 As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFVerifyStackPointerFunctionPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFVerifyStackPointerFunctionPointer
      language: CSharp
      name:
        CSharp: GuardRFVerifyStackPointerFunctionPointer
        VB: GuardRFVerifyStackPointerFunctionPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFVerifyStackPointerFunctionPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFVerifyStackPointerFunctionPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFVerifyStackPointerFunctionPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.GuardRFVerifyStackPointerFunctionPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardRFVerifyStackPointerFunctionPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1498
      summary: "\nGuardRFVerifyStackPointerFunctionPointer\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardRFVerifyStackPointerFunctionPointer
          VB: Public GuardRFVerifyStackPointerFunctionPointer As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.HotPatchTableOffset
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.HotPatchTableOffset
      language: CSharp
      name:
        CSharp: HotPatchTableOffset
        VB: HotPatchTableOffset
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.HotPatchTableOffset
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.HotPatchTableOffset
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.HotPatchTableOffset
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.HotPatchTableOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: HotPatchTableOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1502
      summary: "\nHotPatchTableOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint HotPatchTableOffset
          VB: Public HotPatchTableOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved3
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved3
      language: CSharp
      name:
        CSharp: Reserved3
        VB: Reserved3
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved3
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved3
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved3
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.Reserved3
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved3
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1506
      summary: "\nReserved3\n"
      example: []
      syntax:
        content:
          CSharp: public uint Reserved3
          VB: Public Reserved3 As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.EnclaveConfigurationPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.EnclaveConfigurationPointer
      language: CSharp
      name:
        CSharp: EnclaveConfigurationPointer
        VB: EnclaveConfigurationPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.EnclaveConfigurationPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.EnclaveConfigurationPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.EnclaveConfigurationPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.EnclaveConfigurationPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: EnclaveConfigurationPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1510
      summary: "\nEnclaveConfigurationPointer\n"
      example: []
      syntax:
        content:
          CSharp: public uint EnclaveConfigurationPointer
          VB: Public EnclaveConfigurationPointer As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.VolatileMetadataPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.VolatileMetadataPointer
      language: CSharp
      name:
        CSharp: VolatileMetadataPointer
        VB: VolatileMetadataPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY32.VolatileMetadataPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY32.VolatileMetadataPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.VolatileMetadataPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32.VolatileMetadataPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VolatileMetadataPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1514
      summary: "\nVolatileMetadataPointer\n"
      example: []
      syntax:
        content:
          CSharp: public uint VolatileMetadataPointer
          VB: Public VolatileMetadataPointer As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
    commentId: T:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
    language: CSharp
    name:
      CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64
      VB: IMAGE_LOAD_CONFIG_DIRECTORY64
    nameWithType:
      CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64
      VB: IMAGE_LOAD_CONFIG_DIRECTORY64
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
      VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_LOAD_CONFIG_DIRECTORY64
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1522
    summary: "\nIMAGE_LOAD_CONFIG_DIRECTORY32. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_image_load_config_directory64\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_LOAD_CONFIG_DIRECTORY64
        VB: Public Structure IMAGE_LOAD_CONFIG_DIRECTORY64
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Size
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.Size
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.Size
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Size
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Size
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Size
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1528
      summary: "\nSize\n"
      example: []
      syntax:
        content:
          CSharp: public uint Size
          VB: Public Size As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.TimeDateStamp
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.TimeDateStamp
      language: CSharp
      name:
        CSharp: TimeDateStamp
        VB: TimeDateStamp
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.TimeDateStamp
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.TimeDateStamp
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.TimeDateStamp
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.TimeDateStamp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TimeDateStamp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1532
      summary: "\nTimeDateStamp\n"
      example: []
      syntax:
        content:
          CSharp: public uint TimeDateStamp
          VB: Public TimeDateStamp As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MajorVersion
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MajorVersion
      language: CSharp
      name:
        CSharp: MajorVersion
        VB: MajorVersion
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.MajorVersion
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.MajorVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MajorVersion
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MajorVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MajorVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1536
      summary: "\nMajorVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MajorVersion
          VB: Public MajorVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MinorVersion
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MinorVersion
      language: CSharp
      name:
        CSharp: MinorVersion
        VB: MinorVersion
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.MinorVersion
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.MinorVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MinorVersion
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MinorVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MinorVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1540
      summary: "\nMinorVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort MinorVersion
          VB: Public MinorVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsClear
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsClear
      language: CSharp
      name:
        CSharp: GlobalFlagsClear
        VB: GlobalFlagsClear
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsClear
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsClear
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsClear
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsClear
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GlobalFlagsClear
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1544
      summary: "\nGlobalFlagsClear\n"
      example: []
      syntax:
        content:
          CSharp: public uint GlobalFlagsClear
          VB: Public GlobalFlagsClear As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsSet
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsSet
      language: CSharp
      name:
        CSharp: GlobalFlagsSet
        VB: GlobalFlagsSet
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsSet
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsSet
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsSet
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GlobalFlagsSet
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GlobalFlagsSet
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1548
      summary: "\nGlobalFlagsSet\n"
      example: []
      syntax:
        content:
          CSharp: public uint GlobalFlagsSet
          VB: Public GlobalFlagsSet As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CriticalSectionDefaultTimeout
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CriticalSectionDefaultTimeout
      language: CSharp
      name:
        CSharp: CriticalSectionDefaultTimeout
        VB: CriticalSectionDefaultTimeout
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.CriticalSectionDefaultTimeout
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.CriticalSectionDefaultTimeout
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CriticalSectionDefaultTimeout
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CriticalSectionDefaultTimeout
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CriticalSectionDefaultTimeout
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1552
      summary: "\nCriticalSectionDefaultTimeout\n"
      example: []
      syntax:
        content:
          CSharp: public uint CriticalSectionDefaultTimeout
          VB: Public CriticalSectionDefaultTimeout As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitFreeBlockThreshold
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitFreeBlockThreshold
      language: CSharp
      name:
        CSharp: DeCommitFreeBlockThreshold
        VB: DeCommitFreeBlockThreshold
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitFreeBlockThreshold
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitFreeBlockThreshold
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitFreeBlockThreshold
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitFreeBlockThreshold
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DeCommitFreeBlockThreshold
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1556
      summary: "\nDeCommitFreeBlockThreshold\n"
      example: []
      syntax:
        content:
          CSharp: public ulong DeCommitFreeBlockThreshold
          VB: Public DeCommitFreeBlockThreshold As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitTotalFreeThreshold
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitTotalFreeThreshold
      language: CSharp
      name:
        CSharp: DeCommitTotalFreeThreshold
        VB: DeCommitTotalFreeThreshold
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitTotalFreeThreshold
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitTotalFreeThreshold
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitTotalFreeThreshold
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DeCommitTotalFreeThreshold
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DeCommitTotalFreeThreshold
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1560
      summary: "\nDeCommitTotalFreeThreshold\n"
      example: []
      syntax:
        content:
          CSharp: public ulong DeCommitTotalFreeThreshold
          VB: Public DeCommitTotalFreeThreshold As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.LockPrefixTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.LockPrefixTable
      language: CSharp
      name:
        CSharp: LockPrefixTable
        VB: LockPrefixTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.LockPrefixTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.LockPrefixTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.LockPrefixTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.LockPrefixTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LockPrefixTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1564
      summary: "\nLockPrefixTable\n"
      example: []
      syntax:
        content:
          CSharp: public ulong LockPrefixTable
          VB: Public LockPrefixTable As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MaximumAllocationSize
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MaximumAllocationSize
      language: CSharp
      name:
        CSharp: MaximumAllocationSize
        VB: MaximumAllocationSize
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.MaximumAllocationSize
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.MaximumAllocationSize
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MaximumAllocationSize
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.MaximumAllocationSize
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MaximumAllocationSize
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1568
      summary: "\nMaximumAllocationSize\n"
      example: []
      syntax:
        content:
          CSharp: public ulong MaximumAllocationSize
          VB: Public MaximumAllocationSize As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.VirtualMemoryThreshold
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.VirtualMemoryThreshold
      language: CSharp
      name:
        CSharp: VirtualMemoryThreshold
        VB: VirtualMemoryThreshold
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.VirtualMemoryThreshold
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.VirtualMemoryThreshold
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.VirtualMemoryThreshold
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.VirtualMemoryThreshold
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VirtualMemoryThreshold
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1572
      summary: "\nVirtualMemoryThreshold\n"
      example: []
      syntax:
        content:
          CSharp: public ulong VirtualMemoryThreshold
          VB: Public VirtualMemoryThreshold As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessAffinityMask
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessAffinityMask
      language: CSharp
      name:
        CSharp: ProcessAffinityMask
        VB: ProcessAffinityMask
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessAffinityMask
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessAffinityMask
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessAffinityMask
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessAffinityMask
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ProcessAffinityMask
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1576
      summary: "\nProcessAffinityMask\n"
      example: []
      syntax:
        content:
          CSharp: public ulong ProcessAffinityMask
          VB: Public ProcessAffinityMask As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessHeapFlags
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessHeapFlags
      language: CSharp
      name:
        CSharp: ProcessHeapFlags
        VB: ProcessHeapFlags
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessHeapFlags
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessHeapFlags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessHeapFlags
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.ProcessHeapFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ProcessHeapFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1580
      summary: "\nProcessHeapFlags\n"
      example: []
      syntax:
        content:
          CSharp: public uint ProcessHeapFlags
          VB: Public ProcessHeapFlags As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CSDVersion
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CSDVersion
      language: CSharp
      name:
        CSharp: CSDVersion
        VB: CSDVersion
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.CSDVersion
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.CSDVersion
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CSDVersion
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CSDVersion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CSDVersion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1584
      summary: "\nCSDVersion\n"
      example: []
      syntax:
        content:
          CSharp: public ushort CSDVersion
          VB: Public CSDVersion As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DependentLoadFlags
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DependentLoadFlags
      language: CSharp
      name:
        CSharp: DependentLoadFlags
        VB: DependentLoadFlags
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.DependentLoadFlags
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.DependentLoadFlags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DependentLoadFlags
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DependentLoadFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DependentLoadFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1588
      summary: "\nDependentLoadFlags\n"
      example: []
      syntax:
        content:
          CSharp: public ushort DependentLoadFlags
          VB: Public DependentLoadFlags As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.EditList
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.EditList
      language: CSharp
      name:
        CSharp: EditList
        VB: EditList
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.EditList
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.EditList
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.EditList
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.EditList
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: EditList
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1592
      summary: "\nEditList\n"
      example: []
      syntax:
        content:
          CSharp: public ulong EditList
          VB: Public EditList As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SecurityCookie
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SecurityCookie
      language: CSharp
      name:
        CSharp: SecurityCookie
        VB: SecurityCookie
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.SecurityCookie
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.SecurityCookie
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SecurityCookie
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SecurityCookie
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SecurityCookie
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1596
      summary: "\nSecurityCookie\n"
      example: []
      syntax:
        content:
          CSharp: public ulong SecurityCookie
          VB: Public SecurityCookie As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerTable
      language: CSharp
      name:
        CSharp: SEHandlerTable
        VB: SEHandlerTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SEHandlerTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1600
      summary: "\nSEHandlerTable\n"
      example: []
      syntax:
        content:
          CSharp: public ulong SEHandlerTable
          VB: Public SEHandlerTable As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerCount
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerCount
      language: CSharp
      name:
        CSharp: SEHandlerCount
        VB: SEHandlerCount
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerCount
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerCount
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerCount
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.SEHandlerCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SEHandlerCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1604
      summary: "\nSEHandlerCount\n"
      example: []
      syntax:
        content:
          CSharp: public ulong SEHandlerCount
          VB: Public SEHandlerCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFCheckFunctionPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFCheckFunctionPointer
      language: CSharp
      name:
        CSharp: GuardCFCheckFunctionPointer
        VB: GuardCFCheckFunctionPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFCheckFunctionPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFCheckFunctionPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFCheckFunctionPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFCheckFunctionPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardCFCheckFunctionPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1608
      summary: "\nGuardCFCheckFunctionPointer\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardCFCheckFunctionPointer
          VB: Public GuardCFCheckFunctionPointer As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFDispatchFunctionPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFDispatchFunctionPointer
      language: CSharp
      name:
        CSharp: GuardCFDispatchFunctionPointer
        VB: GuardCFDispatchFunctionPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFDispatchFunctionPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFDispatchFunctionPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFDispatchFunctionPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFDispatchFunctionPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardCFDispatchFunctionPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1612
      summary: "\nGuardCFDispatchFunctionPointer\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardCFDispatchFunctionPointer
          VB: Public GuardCFDispatchFunctionPointer As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionTable
      language: CSharp
      name:
        CSharp: GuardCFFunctionTable
        VB: GuardCFFunctionTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardCFFunctionTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1616
      summary: "\nGuardCFFunctionTable\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardCFFunctionTable
          VB: Public GuardCFFunctionTable As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionCount
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionCount
      language: CSharp
      name:
        CSharp: GuardCFFunctionCount
        VB: GuardCFFunctionCount
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionCount
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionCount
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionCount
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardCFFunctionCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardCFFunctionCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1620
      summary: "\nGuardCFFunctionCount\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardCFFunctionCount
          VB: Public GuardCFFunctionCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardFlags
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardFlags
      language: CSharp
      name:
        CSharp: GuardFlags
        VB: GuardFlags
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardFlags
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardFlags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardFlags
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1624
      summary: "\nGuardFlags\n"
      example: []
      syntax:
        content:
          CSharp: public uint GuardFlags
          VB: Public GuardFlags As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CodeIntegrity
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CodeIntegrity
      language: CSharp
      name:
        CSharp: CodeIntegrity
        VB: CodeIntegrity
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.CodeIntegrity
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.CodeIntegrity
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CodeIntegrity
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CodeIntegrity
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CodeIntegrity
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1628
      summary: "\nCodeIntegrity\n"
      example: []
      syntax:
        content:
          CSharp: public IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity
          VB: Public CodeIntegrity As IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        return:
          type: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryTable
      language: CSharp
      name:
        CSharp: GuardAddressTakenIatEntryTable
        VB: GuardAddressTakenIatEntryTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardAddressTakenIatEntryTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1632
      summary: "\nGuardAddressTakenIatEntryTable\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardAddressTakenIatEntryTable
          VB: Public GuardAddressTakenIatEntryTable As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryCount
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryCount
      language: CSharp
      name:
        CSharp: GuardAddressTakenIatEntryCount
        VB: GuardAddressTakenIatEntryCount
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryCount
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryCount
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryCount
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardAddressTakenIatEntryCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardAddressTakenIatEntryCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1636
      summary: "\nGuardAddressTakenIatEntryCount\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardAddressTakenIatEntryCount
          VB: Public GuardAddressTakenIatEntryCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetTable
      language: CSharp
      name:
        CSharp: GuardLongJumpTargetTable
        VB: GuardLongJumpTargetTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardLongJumpTargetTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1640
      summary: "\nGuardLongJumpTargetTable\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardLongJumpTargetTable
          VB: Public GuardLongJumpTargetTable As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetCount
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetCount
      language: CSharp
      name:
        CSharp: GuardLongJumpTargetCount
        VB: GuardLongJumpTargetCount
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetCount
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetCount
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetCount
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardLongJumpTargetCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardLongJumpTargetCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1644
      summary: "\nGuardLongJumpTargetCount\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardLongJumpTargetCount
          VB: Public GuardLongJumpTargetCount As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTable
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTable
      language: CSharp
      name:
        CSharp: DynamicValueRelocTable
        VB: DynamicValueRelocTable
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTable
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTable
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTable
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTable
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DynamicValueRelocTable
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1648
      summary: "\nDynamicValueRelocTable\n"
      example: []
      syntax:
        content:
          CSharp: public ulong DynamicValueRelocTable
          VB: Public DynamicValueRelocTable As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CHPEMetadataPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CHPEMetadataPointer
      language: CSharp
      name:
        CSharp: CHPEMetadataPointer
        VB: CHPEMetadataPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.CHPEMetadataPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.CHPEMetadataPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CHPEMetadataPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.CHPEMetadataPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CHPEMetadataPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1652
      summary: "\nCHPEMetadataPointer\n"
      example: []
      syntax:
        content:
          CSharp: public ulong CHPEMetadataPointer
          VB: Public CHPEMetadataPointer As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutine
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutine
      language: CSharp
      name:
        CSharp: GuardRFFailureRoutine
        VB: GuardRFFailureRoutine
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutine
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutine
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutine
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutine
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardRFFailureRoutine
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1656
      summary: "\nGuardRFFailureRoutine\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardRFFailureRoutine
          VB: Public GuardRFFailureRoutine As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutineFunctionPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutineFunctionPointer
      language: CSharp
      name:
        CSharp: GuardRFFailureRoutineFunctionPointer
        VB: GuardRFFailureRoutineFunctionPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutineFunctionPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutineFunctionPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutineFunctionPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFFailureRoutineFunctionPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardRFFailureRoutineFunctionPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1660
      summary: "\nGuardRFFailureRoutineFunctionPointer\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardRFFailureRoutineFunctionPointer
          VB: Public GuardRFFailureRoutineFunctionPointer As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableOffset
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableOffset
      language: CSharp
      name:
        CSharp: DynamicValueRelocTableOffset
        VB: DynamicValueRelocTableOffset
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableOffset
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableOffset
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableOffset
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DynamicValueRelocTableOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1664
      summary: "\nDynamicValueRelocTableOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint DynamicValueRelocTableOffset
          VB: Public DynamicValueRelocTableOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableSection
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableSection
      language: CSharp
      name:
        CSharp: DynamicValueRelocTableSection
        VB: DynamicValueRelocTableSection
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableSection
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableSection
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableSection
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.DynamicValueRelocTableSection
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DynamicValueRelocTableSection
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1668
      summary: "\nDynamicValueRelocTableSection\n"
      example: []
      syntax:
        content:
          CSharp: public ushort DynamicValueRelocTableSection
          VB: Public DynamicValueRelocTableSection As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved2
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved2
      language: CSharp
      name:
        CSharp: Reserved2
        VB: Reserved2
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved2
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved2
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved2
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved2
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved2
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1672
      summary: "\nReserved2\n"
      example: []
      syntax:
        content:
          CSharp: public ushort Reserved2
          VB: Public Reserved2 As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFVerifyStackPointerFunctionPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFVerifyStackPointerFunctionPointer
      language: CSharp
      name:
        CSharp: GuardRFVerifyStackPointerFunctionPointer
        VB: GuardRFVerifyStackPointerFunctionPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFVerifyStackPointerFunctionPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFVerifyStackPointerFunctionPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFVerifyStackPointerFunctionPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.GuardRFVerifyStackPointerFunctionPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GuardRFVerifyStackPointerFunctionPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1676
      summary: "\nGuardRFVerifyStackPointerFunctionPointer\n"
      example: []
      syntax:
        content:
          CSharp: public ulong GuardRFVerifyStackPointerFunctionPointer
          VB: Public GuardRFVerifyStackPointerFunctionPointer As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.HotPatchTableOffset
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.HotPatchTableOffset
      language: CSharp
      name:
        CSharp: HotPatchTableOffset
        VB: HotPatchTableOffset
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.HotPatchTableOffset
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.HotPatchTableOffset
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.HotPatchTableOffset
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.HotPatchTableOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: HotPatchTableOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1680
      summary: "\nHotPatchTableOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint HotPatchTableOffset
          VB: Public HotPatchTableOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved3
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved3
      language: CSharp
      name:
        CSharp: Reserved3
        VB: Reserved3
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved3
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved3
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved3
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.Reserved3
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved3
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1684
      summary: "\nReserved3\n"
      example: []
      syntax:
        content:
          CSharp: public uint Reserved3
          VB: Public Reserved3 As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.EnclaveConfigurationPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.EnclaveConfigurationPointer
      language: CSharp
      name:
        CSharp: EnclaveConfigurationPointer
        VB: EnclaveConfigurationPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.EnclaveConfigurationPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.EnclaveConfigurationPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.EnclaveConfigurationPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.EnclaveConfigurationPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: EnclaveConfigurationPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1688
      summary: "\nEnclaveConfigurationPointer\n"
      example: []
      syntax:
        content:
          CSharp: public ulong EnclaveConfigurationPointer
          VB: Public EnclaveConfigurationPointer As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.VolatileMetadataPointer
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.VolatileMetadataPointer
      language: CSharp
      name:
        CSharp: VolatileMetadataPointer
        VB: VolatileMetadataPointer
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_DIRECTORY64.VolatileMetadataPointer
        VB: IMAGE_LOAD_CONFIG_DIRECTORY64.VolatileMetadataPointer
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.VolatileMetadataPointer
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64.VolatileMetadataPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VolatileMetadataPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1692
      summary: "\nVolatileMetadataPointer\n"
      example: []
      syntax:
        content:
          CSharp: public ulong VolatileMetadataPointer
          VB: Public VolatileMetadataPointer As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    commentId: T:ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    language: CSharp
    name:
      CSharp: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
      VB: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    nameWithType:
      CSharp: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
      VB: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    qualifiedName:
      CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
      VB: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1700
    summary: "\nIMAGE_LOAD_CONFIG_CODE_INTEGRITY.\n"
    example: []
    syntax:
      content:
        CSharp: public struct IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        VB: Public Structure IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Flags
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Flags
      language: CSharp
      name:
        CSharp: Flags
        VB: Flags
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Flags
        VB: IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Flags
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Flags
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Flags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Flags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1706
      summary: "\nFlags\n"
      example: []
      syntax:
        content:
          CSharp: public ushort Flags
          VB: Public Flags As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Catalog
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Catalog
      language: CSharp
      name:
        CSharp: Catalog
        VB: Catalog
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Catalog
        VB: IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Catalog
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Catalog
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Catalog
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Catalog
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1710
      summary: "\nCatalog\n"
      example: []
      syntax:
        content:
          CSharp: public ushort Catalog
          VB: Public Catalog As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.CatalogOffset
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.CatalogOffset
      language: CSharp
      name:
        CSharp: CatalogOffset
        VB: CatalogOffset
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_CODE_INTEGRITY.CatalogOffset
        VB: IMAGE_LOAD_CONFIG_CODE_INTEGRITY.CatalogOffset
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.CatalogOffset
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.CatalogOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CatalogOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1714
      summary: "\nCatalogOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint CatalogOffset
          VB: Public CatalogOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Reserved
      commentId: F:ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Reserved
      language: CSharp
      name:
        CSharp: Reserved
        VB: Reserved
      nameWithType:
        CSharp: IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Reserved
        VB: IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Reserved
      qualifiedName:
        CSharp: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Reserved
        VB: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY.Reserved
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1718
      summary: "\nReserved\n"
      example: []
      syntax:
        content:
          CSharp: public uint Reserved
          VB: Public Reserved As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.LOADED_IMAGE
    commentId: T:ERC.Structures.LOADED_IMAGE
    language: CSharp
    name:
      CSharp: LOADED_IMAGE
      VB: LOADED_IMAGE
    nameWithType:
      CSharp: LOADED_IMAGE
      VB: LOADED_IMAGE
    qualifiedName:
      CSharp: ERC.Structures.LOADED_IMAGE
      VB: ERC.Structures.LOADED_IMAGE
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: LOADED_IMAGE
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1726
    summary: "\nLOADED_IMAGE. See https://docs.microsoft.com/en-us/windows/win32/api/dbghelp/ns-dbghelp-_loaded_image\n"
    example: []
    syntax:
      content:
        CSharp: public struct LOADED_IMAGE
        VB: Public Structure LOADED_IMAGE
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.LOADED_IMAGE.ModuleName
      commentId: F:ERC.Structures.LOADED_IMAGE.ModuleName
      language: CSharp
      name:
        CSharp: ModuleName
        VB: ModuleName
      nameWithType:
        CSharp: LOADED_IMAGE.ModuleName
        VB: LOADED_IMAGE.ModuleName
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.ModuleName
        VB: ERC.Structures.LOADED_IMAGE.ModuleName
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ModuleName
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1731
      summary: "\nModuleName\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ModuleName
          VB: Public ModuleName As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.hFile
      commentId: F:ERC.Structures.LOADED_IMAGE.hFile
      language: CSharp
      name:
        CSharp: hFile
        VB: hFile
      nameWithType:
        CSharp: LOADED_IMAGE.hFile
        VB: LOADED_IMAGE.hFile
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.hFile
        VB: ERC.Structures.LOADED_IMAGE.hFile
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: hFile
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1735
      summary: "\nhFile\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr hFile
          VB: Public hFile As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.MappedAddress
      commentId: F:ERC.Structures.LOADED_IMAGE.MappedAddress
      language: CSharp
      name:
        CSharp: MappedAddress
        VB: MappedAddress
      nameWithType:
        CSharp: LOADED_IMAGE.MappedAddress
        VB: LOADED_IMAGE.MappedAddress
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.MappedAddress
        VB: ERC.Structures.LOADED_IMAGE.MappedAddress
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MappedAddress
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1739
      summary: "\nMappedAddress\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr MappedAddress
          VB: Public MappedAddress As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.FileHeader
      commentId: F:ERC.Structures.LOADED_IMAGE.FileHeader
      language: CSharp
      name:
        CSharp: FileHeader
        VB: FileHeader
      nameWithType:
        CSharp: LOADED_IMAGE.FileHeader
        VB: LOADED_IMAGE.FileHeader
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.FileHeader
        VB: ERC.Structures.LOADED_IMAGE.FileHeader
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FileHeader
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1743
      summary: "\nFileHeader\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr FileHeader
          VB: Public FileHeader As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.LastRvaSection
      commentId: F:ERC.Structures.LOADED_IMAGE.LastRvaSection
      language: CSharp
      name:
        CSharp: LastRvaSection
        VB: LastRvaSection
      nameWithType:
        CSharp: LOADED_IMAGE.LastRvaSection
        VB: LOADED_IMAGE.LastRvaSection
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.LastRvaSection
        VB: ERC.Structures.LOADED_IMAGE.LastRvaSection
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LastRvaSection
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1747
      summary: "\nLastRvaSection\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr LastRvaSection
          VB: Public LastRvaSection As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.NumberOfSections
      commentId: F:ERC.Structures.LOADED_IMAGE.NumberOfSections
      language: CSharp
      name:
        CSharp: NumberOfSections
        VB: NumberOfSections
      nameWithType:
        CSharp: LOADED_IMAGE.NumberOfSections
        VB: LOADED_IMAGE.NumberOfSections
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.NumberOfSections
        VB: ERC.Structures.LOADED_IMAGE.NumberOfSections
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: NumberOfSections
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1751
      summary: "\nNumberOfSections\n"
      example: []
      syntax:
        content:
          CSharp: public uint NumberOfSections
          VB: Public NumberOfSections As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.Sections
      commentId: F:ERC.Structures.LOADED_IMAGE.Sections
      language: CSharp
      name:
        CSharp: Sections
        VB: Sections
      nameWithType:
        CSharp: LOADED_IMAGE.Sections
        VB: LOADED_IMAGE.Sections
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.Sections
        VB: ERC.Structures.LOADED_IMAGE.Sections
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Sections
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1755
      summary: "\nSections\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Sections
          VB: Public Sections As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.Characteristics
      commentId: F:ERC.Structures.LOADED_IMAGE.Characteristics
      language: CSharp
      name:
        CSharp: Characteristics
        VB: Characteristics
      nameWithType:
        CSharp: LOADED_IMAGE.Characteristics
        VB: LOADED_IMAGE.Characteristics
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.Characteristics
        VB: ERC.Structures.LOADED_IMAGE.Characteristics
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Characteristics
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1759
      summary: "\nCharacteristics\n"
      example: []
      syntax:
        content:
          CSharp: public uint Characteristics
          VB: Public Characteristics As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.fSystemImage
      commentId: F:ERC.Structures.LOADED_IMAGE.fSystemImage
      language: CSharp
      name:
        CSharp: fSystemImage
        VB: fSystemImage
      nameWithType:
        CSharp: LOADED_IMAGE.fSystemImage
        VB: LOADED_IMAGE.fSystemImage
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.fSystemImage
        VB: ERC.Structures.LOADED_IMAGE.fSystemImage
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: fSystemImage
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1763
      summary: "\nfSystemImage\n"
      example: []
      syntax:
        content:
          CSharp: public bool fSystemImage
          VB: Public fSystemImage As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.fDOSImage
      commentId: F:ERC.Structures.LOADED_IMAGE.fDOSImage
      language: CSharp
      name:
        CSharp: fDOSImage
        VB: fDOSImage
      nameWithType:
        CSharp: LOADED_IMAGE.fDOSImage
        VB: LOADED_IMAGE.fDOSImage
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.fDOSImage
        VB: ERC.Structures.LOADED_IMAGE.fDOSImage
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: fDOSImage
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1767
      summary: "\nfDOSImage\n"
      example: []
      syntax:
        content:
          CSharp: public bool fDOSImage
          VB: Public fDOSImage As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.fReadOnly
      commentId: F:ERC.Structures.LOADED_IMAGE.fReadOnly
      language: CSharp
      name:
        CSharp: fReadOnly
        VB: fReadOnly
      nameWithType:
        CSharp: LOADED_IMAGE.fReadOnly
        VB: LOADED_IMAGE.fReadOnly
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.fReadOnly
        VB: ERC.Structures.LOADED_IMAGE.fReadOnly
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: fReadOnly
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1771
      summary: "\nfReadOnly\n"
      example: []
      syntax:
        content:
          CSharp: public bool fReadOnly
          VB: Public fReadOnly As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.Version
      commentId: F:ERC.Structures.LOADED_IMAGE.Version
      language: CSharp
      name:
        CSharp: Version
        VB: Version
      nameWithType:
        CSharp: LOADED_IMAGE.Version
        VB: LOADED_IMAGE.Version
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.Version
        VB: ERC.Structures.LOADED_IMAGE.Version
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Version
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1775
      summary: "\nVersion\n"
      example: []
      syntax:
        content:
          CSharp: public byte Version
          VB: Public Version As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.Links
      commentId: F:ERC.Structures.LOADED_IMAGE.Links
      language: CSharp
      name:
        CSharp: Links
        VB: Links
      nameWithType:
        CSharp: LOADED_IMAGE.Links
        VB: LOADED_IMAGE.Links
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.Links
        VB: ERC.Structures.LOADED_IMAGE.Links
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Links
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1779
      summary: "\nLinks\n"
      example: []
      syntax:
        content:
          CSharp: public LIST_ENTRY Links
          VB: Public Links As LIST_ENTRY
        return:
          type: ERC.Structures.LIST_ENTRY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LOADED_IMAGE.SizeOfImage
      commentId: F:ERC.Structures.LOADED_IMAGE.SizeOfImage
      language: CSharp
      name:
        CSharp: SizeOfImage
        VB: SizeOfImage
      nameWithType:
        CSharp: LOADED_IMAGE.SizeOfImage
        VB: LOADED_IMAGE.SizeOfImage
      qualifiedName:
        CSharp: ERC.Structures.LOADED_IMAGE.SizeOfImage
        VB: ERC.Structures.LOADED_IMAGE.SizeOfImage
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SizeOfImage
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1783
      summary: "\nSizeOfImage\n"
      example: []
      syntax:
        content:
          CSharp: public uint SizeOfImage
          VB: Public SizeOfImage As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.LIST_ENTRY
    commentId: T:ERC.Structures.LIST_ENTRY
    language: CSharp
    name:
      CSharp: LIST_ENTRY
      VB: LIST_ENTRY
    nameWithType:
      CSharp: LIST_ENTRY
      VB: LIST_ENTRY
    qualifiedName:
      CSharp: ERC.Structures.LIST_ENTRY
      VB: ERC.Structures.LIST_ENTRY
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: LIST_ENTRY
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1791
    summary: "\nDescribes an entry in a doubly linked list or serves as the header for such a list. See https://docs.microsoft.com/en-us/windows/win32/api/ntdef/ns-ntdef-_list_entry\n"
    example: []
    syntax:
      content:
        CSharp: public struct LIST_ENTRY
        VB: Public Structure LIST_ENTRY
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.LIST_ENTRY.Flink
      commentId: F:ERC.Structures.LIST_ENTRY.Flink
      language: CSharp
      name:
        CSharp: Flink
        VB: Flink
      nameWithType:
        CSharp: LIST_ENTRY.Flink
        VB: LIST_ENTRY.Flink
      qualifiedName:
        CSharp: ERC.Structures.LIST_ENTRY.Flink
        VB: ERC.Structures.LIST_ENTRY.Flink
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Flink
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1796
      summary: "\nFlink points to the next entry in the list.\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Flink
          VB: Public Flink As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.LIST_ENTRY.Blink
      commentId: F:ERC.Structures.LIST_ENTRY.Blink
      language: CSharp
      name:
        CSharp: Blink
        VB: Blink
      nameWithType:
        CSharp: LIST_ENTRY.Blink
        VB: LIST_ENTRY.Blink
      qualifiedName:
        CSharp: ERC.Structures.LIST_ENTRY.Blink
        VB: ERC.Structures.LIST_ENTRY.Blink
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Blink
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1800
      summary: "\nBlink points to the previous entry in the list.\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Blink
          VB: Public Blink As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.AllocationProtect
    commentId: T:ERC.Structures.AllocationProtect
    language: CSharp
    name:
      CSharp: AllocationProtect
      VB: AllocationProtect
    nameWithType:
      CSharp: AllocationProtect
      VB: AllocationProtect
    qualifiedName:
      CSharp: ERC.Structures.AllocationProtect
      VB: ERC.Structures.AllocationProtect
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: AllocationProtect
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1812
    summary: "\nAllocationProtect.\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum AllocationProtect : uint'
        VB: Public Enum AllocationProtect As UInteger
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.AllocationProtect.PAGE_EXECUTE
      commentId: F:ERC.Structures.AllocationProtect.PAGE_EXECUTE
      language: CSharp
      name:
        CSharp: PAGE_EXECUTE
        VB: PAGE_EXECUTE
      nameWithType:
        CSharp: AllocationProtect.PAGE_EXECUTE
        VB: AllocationProtect.PAGE_EXECUTE
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_EXECUTE
        VB: ERC.Structures.AllocationProtect.PAGE_EXECUTE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_EXECUTE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1817
      summary: "\nPAGE_EXECUTE\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_EXECUTE = 16U
          VB: PAGE_EXECUTE = 16UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_EXECUTE_READ
      commentId: F:ERC.Structures.AllocationProtect.PAGE_EXECUTE_READ
      language: CSharp
      name:
        CSharp: PAGE_EXECUTE_READ
        VB: PAGE_EXECUTE_READ
      nameWithType:
        CSharp: AllocationProtect.PAGE_EXECUTE_READ
        VB: AllocationProtect.PAGE_EXECUTE_READ
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_EXECUTE_READ
        VB: ERC.Structures.AllocationProtect.PAGE_EXECUTE_READ
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_EXECUTE_READ
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1821
      summary: "\nPAGE_EXECUTE_READ\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_EXECUTE_READ = 32U
          VB: PAGE_EXECUTE_READ = 32UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_EXECUTE_READWRITE
      commentId: F:ERC.Structures.AllocationProtect.PAGE_EXECUTE_READWRITE
      language: CSharp
      name:
        CSharp: PAGE_EXECUTE_READWRITE
        VB: PAGE_EXECUTE_READWRITE
      nameWithType:
        CSharp: AllocationProtect.PAGE_EXECUTE_READWRITE
        VB: AllocationProtect.PAGE_EXECUTE_READWRITE
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_EXECUTE_READWRITE
        VB: ERC.Structures.AllocationProtect.PAGE_EXECUTE_READWRITE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_EXECUTE_READWRITE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1825
      summary: "\nPAGE_EXECUTE_READWRITE\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_EXECUTE_READWRITE = 64U
          VB: PAGE_EXECUTE_READWRITE = 64UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_EXECUTE_WRITECOPY
      commentId: F:ERC.Structures.AllocationProtect.PAGE_EXECUTE_WRITECOPY
      language: CSharp
      name:
        CSharp: PAGE_EXECUTE_WRITECOPY
        VB: PAGE_EXECUTE_WRITECOPY
      nameWithType:
        CSharp: AllocationProtect.PAGE_EXECUTE_WRITECOPY
        VB: AllocationProtect.PAGE_EXECUTE_WRITECOPY
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_EXECUTE_WRITECOPY
        VB: ERC.Structures.AllocationProtect.PAGE_EXECUTE_WRITECOPY
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_EXECUTE_WRITECOPY
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1829
      summary: "\nPAGE_EXECUTE_WRITECOPY\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_EXECUTE_WRITECOPY = 128U
          VB: PAGE_EXECUTE_WRITECOPY = 128UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_NOACCESS
      commentId: F:ERC.Structures.AllocationProtect.PAGE_NOACCESS
      language: CSharp
      name:
        CSharp: PAGE_NOACCESS
        VB: PAGE_NOACCESS
      nameWithType:
        CSharp: AllocationProtect.PAGE_NOACCESS
        VB: AllocationProtect.PAGE_NOACCESS
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_NOACCESS
        VB: ERC.Structures.AllocationProtect.PAGE_NOACCESS
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_NOACCESS
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1833
      summary: "\nPAGE_NOACCESS\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_NOACCESS = 1U
          VB: PAGE_NOACCESS = 1UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_READONLY
      commentId: F:ERC.Structures.AllocationProtect.PAGE_READONLY
      language: CSharp
      name:
        CSharp: PAGE_READONLY
        VB: PAGE_READONLY
      nameWithType:
        CSharp: AllocationProtect.PAGE_READONLY
        VB: AllocationProtect.PAGE_READONLY
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_READONLY
        VB: ERC.Structures.AllocationProtect.PAGE_READONLY
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_READONLY
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1837
      summary: "\nPAGE_READONLY\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_READONLY = 2U
          VB: PAGE_READONLY = 2UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_READWRITE
      commentId: F:ERC.Structures.AllocationProtect.PAGE_READWRITE
      language: CSharp
      name:
        CSharp: PAGE_READWRITE
        VB: PAGE_READWRITE
      nameWithType:
        CSharp: AllocationProtect.PAGE_READWRITE
        VB: AllocationProtect.PAGE_READWRITE
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_READWRITE
        VB: ERC.Structures.AllocationProtect.PAGE_READWRITE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_READWRITE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1841
      summary: "\nPAGE_READWRITE\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_READWRITE = 4U
          VB: PAGE_READWRITE = 4UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_WRITECOPY
      commentId: F:ERC.Structures.AllocationProtect.PAGE_WRITECOPY
      language: CSharp
      name:
        CSharp: PAGE_WRITECOPY
        VB: PAGE_WRITECOPY
      nameWithType:
        CSharp: AllocationProtect.PAGE_WRITECOPY
        VB: AllocationProtect.PAGE_WRITECOPY
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_WRITECOPY
        VB: ERC.Structures.AllocationProtect.PAGE_WRITECOPY
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_WRITECOPY
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1845
      summary: "\nPAGE_WRITECOPY\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_WRITECOPY = 8U
          VB: PAGE_WRITECOPY = 8UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_GUARD
      commentId: F:ERC.Structures.AllocationProtect.PAGE_GUARD
      language: CSharp
      name:
        CSharp: PAGE_GUARD
        VB: PAGE_GUARD
      nameWithType:
        CSharp: AllocationProtect.PAGE_GUARD
        VB: AllocationProtect.PAGE_GUARD
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_GUARD
        VB: ERC.Structures.AllocationProtect.PAGE_GUARD
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_GUARD
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1849
      summary: "\nPAGE_GUARD\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_GUARD = 256U
          VB: PAGE_GUARD = 256UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_NOCACHE
      commentId: F:ERC.Structures.AllocationProtect.PAGE_NOCACHE
      language: CSharp
      name:
        CSharp: PAGE_NOCACHE
        VB: PAGE_NOCACHE
      nameWithType:
        CSharp: AllocationProtect.PAGE_NOCACHE
        VB: AllocationProtect.PAGE_NOCACHE
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_NOCACHE
        VB: ERC.Structures.AllocationProtect.PAGE_NOCACHE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_NOCACHE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1853
      summary: "\nPAGE_NOCACHE\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_NOCACHE = 512U
          VB: PAGE_NOCACHE = 512UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.AllocationProtect.PAGE_WRITECOMBINE
      commentId: F:ERC.Structures.AllocationProtect.PAGE_WRITECOMBINE
      language: CSharp
      name:
        CSharp: PAGE_WRITECOMBINE
        VB: PAGE_WRITECOMBINE
      nameWithType:
        CSharp: AllocationProtect.PAGE_WRITECOMBINE
        VB: AllocationProtect.PAGE_WRITECOMBINE
      qualifiedName:
        CSharp: ERC.Structures.AllocationProtect.PAGE_WRITECOMBINE
        VB: ERC.Structures.AllocationProtect.PAGE_WRITECOMBINE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: PAGE_WRITECOMBINE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1857
      summary: "\nPAGE_WRITECOMBINE\n"
      example: []
      syntax:
        content:
          CSharp: PAGE_WRITECOMBINE = 1024U
          VB: PAGE_WRITECOMBINE = 1024UI
        return:
          type: ERC.Structures.AllocationProtect
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.StateEnum
    commentId: T:ERC.Structures.StateEnum
    language: CSharp
    name:
      CSharp: StateEnum
      VB: StateEnum
    nameWithType:
      CSharp: StateEnum
      VB: StateEnum
    qualifiedName:
      CSharp: ERC.Structures.StateEnum
      VB: ERC.Structures.StateEnum
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: StateEnum
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1865
    summary: "\nStateEnum\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum StateEnum : uint'
        VB: Public Enum StateEnum As UInteger
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.StateEnum.MEM_COMMIT
      commentId: F:ERC.Structures.StateEnum.MEM_COMMIT
      language: CSharp
      name:
        CSharp: MEM_COMMIT
        VB: MEM_COMMIT
      nameWithType:
        CSharp: StateEnum.MEM_COMMIT
        VB: StateEnum.MEM_COMMIT
      qualifiedName:
        CSharp: ERC.Structures.StateEnum.MEM_COMMIT
        VB: ERC.Structures.StateEnum.MEM_COMMIT
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MEM_COMMIT
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1870
      summary: "\nMEM_COMMIT\n"
      example: []
      syntax:
        content:
          CSharp: MEM_COMMIT = 4096U
          VB: MEM_COMMIT = 4096UI
        return:
          type: ERC.Structures.StateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.StateEnum.MEM_FREE
      commentId: F:ERC.Structures.StateEnum.MEM_FREE
      language: CSharp
      name:
        CSharp: MEM_FREE
        VB: MEM_FREE
      nameWithType:
        CSharp: StateEnum.MEM_FREE
        VB: StateEnum.MEM_FREE
      qualifiedName:
        CSharp: ERC.Structures.StateEnum.MEM_FREE
        VB: ERC.Structures.StateEnum.MEM_FREE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MEM_FREE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1874
      summary: "\nMEM_FREE\n"
      example: []
      syntax:
        content:
          CSharp: MEM_FREE = 65536U
          VB: MEM_FREE = 65536UI
        return:
          type: ERC.Structures.StateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.StateEnum.MEM_RESERVE
      commentId: F:ERC.Structures.StateEnum.MEM_RESERVE
      language: CSharp
      name:
        CSharp: MEM_RESERVE
        VB: MEM_RESERVE
      nameWithType:
        CSharp: StateEnum.MEM_RESERVE
        VB: StateEnum.MEM_RESERVE
      qualifiedName:
        CSharp: ERC.Structures.StateEnum.MEM_RESERVE
        VB: ERC.Structures.StateEnum.MEM_RESERVE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MEM_RESERVE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1878
      summary: "\nMEM_RESERVE\n"
      example: []
      syntax:
        content:
          CSharp: MEM_RESERVE = 8192U
          VB: MEM_RESERVE = 8192UI
        return:
          type: ERC.Structures.StateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.TypeEnum
    commentId: T:ERC.Structures.TypeEnum
    language: CSharp
    name:
      CSharp: TypeEnum
      VB: TypeEnum
    nameWithType:
      CSharp: TypeEnum
      VB: TypeEnum
    qualifiedName:
      CSharp: ERC.Structures.TypeEnum
      VB: ERC.Structures.TypeEnum
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: TypeEnum
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1886
    summary: "\nTypeEnum\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum TypeEnum : uint'
        VB: Public Enum TypeEnum As UInteger
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.TypeEnum.MEM_IMAGE
      commentId: F:ERC.Structures.TypeEnum.MEM_IMAGE
      language: CSharp
      name:
        CSharp: MEM_IMAGE
        VB: MEM_IMAGE
      nameWithType:
        CSharp: TypeEnum.MEM_IMAGE
        VB: TypeEnum.MEM_IMAGE
      qualifiedName:
        CSharp: ERC.Structures.TypeEnum.MEM_IMAGE
        VB: ERC.Structures.TypeEnum.MEM_IMAGE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MEM_IMAGE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1891
      summary: "\nMEM_IMAGE\n"
      example: []
      syntax:
        content:
          CSharp: MEM_IMAGE = 16777216U
          VB: MEM_IMAGE = 16777216UI
        return:
          type: ERC.Structures.TypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.TypeEnum.MEM_MAPPED
      commentId: F:ERC.Structures.TypeEnum.MEM_MAPPED
      language: CSharp
      name:
        CSharp: MEM_MAPPED
        VB: MEM_MAPPED
      nameWithType:
        CSharp: TypeEnum.MEM_MAPPED
        VB: TypeEnum.MEM_MAPPED
      qualifiedName:
        CSharp: ERC.Structures.TypeEnum.MEM_MAPPED
        VB: ERC.Structures.TypeEnum.MEM_MAPPED
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MEM_MAPPED
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1895
      summary: "\nMEM_MAPPED\n"
      example: []
      syntax:
        content:
          CSharp: MEM_MAPPED = 262144U
          VB: MEM_MAPPED = 262144UI
        return:
          type: ERC.Structures.TypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.TypeEnum.MEM_PRIVATE
      commentId: F:ERC.Structures.TypeEnum.MEM_PRIVATE
      language: CSharp
      name:
        CSharp: MEM_PRIVATE
        VB: MEM_PRIVATE
      nameWithType:
        CSharp: TypeEnum.MEM_PRIVATE
        VB: TypeEnum.MEM_PRIVATE
      qualifiedName:
        CSharp: ERC.Structures.TypeEnum.MEM_PRIVATE
        VB: ERC.Structures.TypeEnum.MEM_PRIVATE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MEM_PRIVATE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1899
      summary: "\nMEM_PRIVATE\n"
      example: []
      syntax:
        content:
          CSharp: MEM_PRIVATE = 131072U
          VB: MEM_PRIVATE = 131072UI
        return:
          type: ERC.Structures.TypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.MEMORY_BASIC_INFORMATION32
    commentId: T:ERC.Structures.MEMORY_BASIC_INFORMATION32
    language: CSharp
    name:
      CSharp: MEMORY_BASIC_INFORMATION32
      VB: MEMORY_BASIC_INFORMATION32
    nameWithType:
      CSharp: MEMORY_BASIC_INFORMATION32
      VB: MEMORY_BASIC_INFORMATION32
    qualifiedName:
      CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION32
      VB: ERC.Structures.MEMORY_BASIC_INFORMATION32
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: MEMORY_BASIC_INFORMATION32
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1907
    summary: "\nMEMORY_BASIC_INFORMATION32. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_memory_basic_information\n"
    example: []
    syntax:
      content:
        CSharp: public struct MEMORY_BASIC_INFORMATION32
        VB: Public Structure MEMORY_BASIC_INFORMATION32
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION32.BaseAddress
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION32.BaseAddress
      language: CSharp
      name:
        CSharp: BaseAddress
        VB: BaseAddress
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION32.BaseAddress
        VB: MEMORY_BASIC_INFORMATION32.BaseAddress
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION32.BaseAddress
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION32.BaseAddress
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BaseAddress
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1913
      summary: "\nBaseAddress\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr BaseAddress
          VB: Public BaseAddress As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION32.AllocationBase
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION32.AllocationBase
      language: CSharp
      name:
        CSharp: AllocationBase
        VB: AllocationBase
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION32.AllocationBase
        VB: MEMORY_BASIC_INFORMATION32.AllocationBase
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION32.AllocationBase
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION32.AllocationBase
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: AllocationBase
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1917
      summary: "\nAllocationBase\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr AllocationBase
          VB: Public AllocationBase As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION32.AllocationProtect
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION32.AllocationProtect
      language: CSharp
      name:
        CSharp: AllocationProtect
        VB: AllocationProtect
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION32.AllocationProtect
        VB: MEMORY_BASIC_INFORMATION32.AllocationProtect
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION32.AllocationProtect
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION32.AllocationProtect
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: AllocationProtect
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1921
      summary: "\nAllocationProtec\n"
      example: []
      syntax:
        content:
          CSharp: public uint AllocationProtect
          VB: Public AllocationProtect As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION32.RegionSize
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION32.RegionSize
      language: CSharp
      name:
        CSharp: RegionSize
        VB: RegionSize
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION32.RegionSize
        VB: MEMORY_BASIC_INFORMATION32.RegionSize
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION32.RegionSize
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION32.RegionSize
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RegionSize
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1925
      summary: "\nRegionSize\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr RegionSize
          VB: Public RegionSize As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION32.State
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION32.State
      language: CSharp
      name:
        CSharp: State
        VB: State
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION32.State
        VB: MEMORY_BASIC_INFORMATION32.State
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION32.State
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION32.State
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: State
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1929
      summary: "\nState\n"
      example: []
      syntax:
        content:
          CSharp: public StateEnum State
          VB: Public State As StateEnum
        return:
          type: ERC.Structures.StateEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION32.Protect
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION32.Protect
      language: CSharp
      name:
        CSharp: Protect
        VB: Protect
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION32.Protect
        VB: MEMORY_BASIC_INFORMATION32.Protect
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION32.Protect
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION32.Protect
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Protect
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1933
      summary: "\nProtect\n"
      example: []
      syntax:
        content:
          CSharp: public uint Protect
          VB: Public Protect As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION32.Type
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION32.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION32.Type
        VB: MEMORY_BASIC_INFORMATION32.Type
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION32.Type
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION32.Type
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Type
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1937
      summary: "\nType\n"
      example: []
      syntax:
        content:
          CSharp: public TypeEnum Type
          VB: Public Type As TypeEnum
        return:
          type: ERC.Structures.TypeEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.MEMORY_BASIC_INFORMATION64
    commentId: T:ERC.Structures.MEMORY_BASIC_INFORMATION64
    language: CSharp
    name:
      CSharp: MEMORY_BASIC_INFORMATION64
      VB: MEMORY_BASIC_INFORMATION64
    nameWithType:
      CSharp: MEMORY_BASIC_INFORMATION64
      VB: MEMORY_BASIC_INFORMATION64
    qualifiedName:
      CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64
      VB: ERC.Structures.MEMORY_BASIC_INFORMATION64
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: MEMORY_BASIC_INFORMATION64
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1945
    summary: "\nMEMORY_BASIC_INFORMATION32. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_memory_basic_information\n"
    example: []
    syntax:
      content:
        CSharp: public struct MEMORY_BASIC_INFORMATION64
        VB: Public Structure MEMORY_BASIC_INFORMATION64
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.BaseAddress
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.BaseAddress
      language: CSharp
      name:
        CSharp: BaseAddress
        VB: BaseAddress
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.BaseAddress
        VB: MEMORY_BASIC_INFORMATION64.BaseAddress
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.BaseAddress
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.BaseAddress
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BaseAddress
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1951
      summary: "\nBaseAddress\n"
      example: []
      syntax:
        content:
          CSharp: public ulong BaseAddress
          VB: Public BaseAddress As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.AllocationBase
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.AllocationBase
      language: CSharp
      name:
        CSharp: AllocationBase
        VB: AllocationBase
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.AllocationBase
        VB: MEMORY_BASIC_INFORMATION64.AllocationBase
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.AllocationBase
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.AllocationBase
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: AllocationBase
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1955
      summary: "\nAllocationBase\n"
      example: []
      syntax:
        content:
          CSharp: public ulong AllocationBase
          VB: Public AllocationBase As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.AllocationProtect
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.AllocationProtect
      language: CSharp
      name:
        CSharp: AllocationProtect
        VB: AllocationProtect
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.AllocationProtect
        VB: MEMORY_BASIC_INFORMATION64.AllocationProtect
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.AllocationProtect
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.AllocationProtect
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: AllocationProtect
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1959
      summary: "\nAllocationProtect\n"
      example: []
      syntax:
        content:
          CSharp: public uint AllocationProtect
          VB: Public AllocationProtect As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.__alignment1
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.__alignment1
      language: CSharp
      name:
        CSharp: __alignment1
        VB: __alignment1
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.__alignment1
        VB: MEMORY_BASIC_INFORMATION64.__alignment1
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.__alignment1
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.__alignment1
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: __alignment1
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1963
      summary: "\n__alignment1\n"
      example: []
      syntax:
        content:
          CSharp: public int __alignment1
          VB: Public __alignment1 As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.RegionSize
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.RegionSize
      language: CSharp
      name:
        CSharp: RegionSize
        VB: RegionSize
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.RegionSize
        VB: MEMORY_BASIC_INFORMATION64.RegionSize
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.RegionSize
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.RegionSize
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RegionSize
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1967
      summary: "\nRegionSize\n"
      example: []
      syntax:
        content:
          CSharp: public ulong RegionSize
          VB: Public RegionSize As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.State
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.State
      language: CSharp
      name:
        CSharp: State
        VB: State
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.State
        VB: MEMORY_BASIC_INFORMATION64.State
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.State
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.State
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: State
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1971
      summary: "\nState\n"
      example: []
      syntax:
        content:
          CSharp: public StateEnum State
          VB: Public State As StateEnum
        return:
          type: ERC.Structures.StateEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.Protect
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.Protect
      language: CSharp
      name:
        CSharp: Protect
        VB: Protect
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.Protect
        VB: MEMORY_BASIC_INFORMATION64.Protect
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.Protect
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.Protect
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Protect
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1975
      summary: "\nProtect\n"
      example: []
      syntax:
        content:
          CSharp: public int Protect
          VB: Public Protect As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.Type
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.Type
        VB: MEMORY_BASIC_INFORMATION64.Type
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.Type
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.Type
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Type
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1979
      summary: "\nType\n"
      example: []
      syntax:
        content:
          CSharp: public TypeEnum Type
          VB: Public Type As TypeEnum
        return:
          type: ERC.Structures.TypeEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.MEMORY_BASIC_INFORMATION64.__alignment2
      commentId: F:ERC.Structures.MEMORY_BASIC_INFORMATION64.__alignment2
      language: CSharp
      name:
        CSharp: __alignment2
        VB: __alignment2
      nameWithType:
        CSharp: MEMORY_BASIC_INFORMATION64.__alignment2
        VB: MEMORY_BASIC_INFORMATION64.__alignment2
      qualifiedName:
        CSharp: ERC.Structures.MEMORY_BASIC_INFORMATION64.__alignment2
        VB: ERC.Structures.MEMORY_BASIC_INFORMATION64.__alignment2
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: __alignment2
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1983
      summary: "\n__alignment2\n"
      example: []
      syntax:
        content:
          CSharp: public int __alignment2
          VB: Public __alignment2 As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.ProcessAccessFlags
    commentId: T:ERC.Structures.ProcessAccessFlags
    language: CSharp
    name:
      CSharp: ProcessAccessFlags
      VB: ProcessAccessFlags
    nameWithType:
      CSharp: ProcessAccessFlags
      VB: ProcessAccessFlags
    qualifiedName:
      CSharp: ERC.Structures.ProcessAccessFlags
      VB: ERC.Structures.ProcessAccessFlags
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: ProcessAccessFlags
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 1991
    summary: "\nProcessAccessFlags\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Flags]

          public enum ProcessAccessFlags : uint
        VB: >-
          <Flags>

          Public Enum ProcessAccessFlags As UInteger
    attributes:
    - type: System.FlagsAttribute
      ctor: System.FlagsAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.ProcessAccessFlags.All
      commentId: F:ERC.Structures.ProcessAccessFlags.All
      language: CSharp
      name:
        CSharp: All
        VB: All
      nameWithType:
        CSharp: ProcessAccessFlags.All
        VB: ProcessAccessFlags.All
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.All
        VB: ERC.Structures.ProcessAccessFlags.All
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: All
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 1997
      summary: "\nAll\n"
      example: []
      syntax:
        content:
          CSharp: All = 2035711U
          VB: All = 2035711UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.Terminate
      commentId: F:ERC.Structures.ProcessAccessFlags.Terminate
      language: CSharp
      name:
        CSharp: Terminate
        VB: Terminate
      nameWithType:
        CSharp: ProcessAccessFlags.Terminate
        VB: ProcessAccessFlags.Terminate
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.Terminate
        VB: ERC.Structures.ProcessAccessFlags.Terminate
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Terminate
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2001
      summary: "\nTerminate\n"
      example: []
      syntax:
        content:
          CSharp: Terminate = 1U
          VB: Terminate = 1UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.CreateThread
      commentId: F:ERC.Structures.ProcessAccessFlags.CreateThread
      language: CSharp
      name:
        CSharp: CreateThread
        VB: CreateThread
      nameWithType:
        CSharp: ProcessAccessFlags.CreateThread
        VB: ProcessAccessFlags.CreateThread
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.CreateThread
        VB: ERC.Structures.ProcessAccessFlags.CreateThread
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CreateThread
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2005
      summary: "\nCreateThread\n"
      example: []
      syntax:
        content:
          CSharp: CreateThread = 2U
          VB: CreateThread = 2UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.VirtualMemoryOperation
      commentId: F:ERC.Structures.ProcessAccessFlags.VirtualMemoryOperation
      language: CSharp
      name:
        CSharp: VirtualMemoryOperation
        VB: VirtualMemoryOperation
      nameWithType:
        CSharp: ProcessAccessFlags.VirtualMemoryOperation
        VB: ProcessAccessFlags.VirtualMemoryOperation
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.VirtualMemoryOperation
        VB: ERC.Structures.ProcessAccessFlags.VirtualMemoryOperation
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VirtualMemoryOperation
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2009
      summary: "\nVirtualMemoryOperation\n"
      example: []
      syntax:
        content:
          CSharp: VirtualMemoryOperation = 8U
          VB: VirtualMemoryOperation = 8UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.VirtualMemoryRead
      commentId: F:ERC.Structures.ProcessAccessFlags.VirtualMemoryRead
      language: CSharp
      name:
        CSharp: VirtualMemoryRead
        VB: VirtualMemoryRead
      nameWithType:
        CSharp: ProcessAccessFlags.VirtualMemoryRead
        VB: ProcessAccessFlags.VirtualMemoryRead
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.VirtualMemoryRead
        VB: ERC.Structures.ProcessAccessFlags.VirtualMemoryRead
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VirtualMemoryRead
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2013
      summary: "\nVirtualMemoryRead\n"
      example: []
      syntax:
        content:
          CSharp: VirtualMemoryRead = 16U
          VB: VirtualMemoryRead = 16UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.VirtualMemoryWrite
      commentId: F:ERC.Structures.ProcessAccessFlags.VirtualMemoryWrite
      language: CSharp
      name:
        CSharp: VirtualMemoryWrite
        VB: VirtualMemoryWrite
      nameWithType:
        CSharp: ProcessAccessFlags.VirtualMemoryWrite
        VB: ProcessAccessFlags.VirtualMemoryWrite
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.VirtualMemoryWrite
        VB: ERC.Structures.ProcessAccessFlags.VirtualMemoryWrite
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VirtualMemoryWrite
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2017
      summary: "\nVirtualMemoryWrite\n"
      example: []
      syntax:
        content:
          CSharp: VirtualMemoryWrite = 32U
          VB: VirtualMemoryWrite = 32UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.DuplicateHandle
      commentId: F:ERC.Structures.ProcessAccessFlags.DuplicateHandle
      language: CSharp
      name:
        CSharp: DuplicateHandle
        VB: DuplicateHandle
      nameWithType:
        CSharp: ProcessAccessFlags.DuplicateHandle
        VB: ProcessAccessFlags.DuplicateHandle
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.DuplicateHandle
        VB: ERC.Structures.ProcessAccessFlags.DuplicateHandle
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DuplicateHandle
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2021
      summary: "\nDuplicateHandle\n"
      example: []
      syntax:
        content:
          CSharp: DuplicateHandle = 64U
          VB: DuplicateHandle = 64UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.CreateProcess
      commentId: F:ERC.Structures.ProcessAccessFlags.CreateProcess
      language: CSharp
      name:
        CSharp: CreateProcess
        VB: CreateProcess
      nameWithType:
        CSharp: ProcessAccessFlags.CreateProcess
        VB: ProcessAccessFlags.CreateProcess
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.CreateProcess
        VB: ERC.Structures.ProcessAccessFlags.CreateProcess
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CreateProcess
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2025
      summary: "\nCreateProcess\n"
      example: []
      syntax:
        content:
          CSharp: CreateProcess = 128U
          VB: CreateProcess = 128UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.SetQuota
      commentId: F:ERC.Structures.ProcessAccessFlags.SetQuota
      language: CSharp
      name:
        CSharp: SetQuota
        VB: SetQuota
      nameWithType:
        CSharp: ProcessAccessFlags.SetQuota
        VB: ProcessAccessFlags.SetQuota
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.SetQuota
        VB: ERC.Structures.ProcessAccessFlags.SetQuota
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SetQuota
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2029
      summary: "\nSetQuota\n"
      example: []
      syntax:
        content:
          CSharp: SetQuota = 256U
          VB: SetQuota = 256UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.SetInformation
      commentId: F:ERC.Structures.ProcessAccessFlags.SetInformation
      language: CSharp
      name:
        CSharp: SetInformation
        VB: SetInformation
      nameWithType:
        CSharp: ProcessAccessFlags.SetInformation
        VB: ProcessAccessFlags.SetInformation
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.SetInformation
        VB: ERC.Structures.ProcessAccessFlags.SetInformation
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SetInformation
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2033
      summary: "\nSetInformation\n"
      example: []
      syntax:
        content:
          CSharp: SetInformation = 512U
          VB: SetInformation = 512UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.QueryInformation
      commentId: F:ERC.Structures.ProcessAccessFlags.QueryInformation
      language: CSharp
      name:
        CSharp: QueryInformation
        VB: QueryInformation
      nameWithType:
        CSharp: ProcessAccessFlags.QueryInformation
        VB: ProcessAccessFlags.QueryInformation
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.QueryInformation
        VB: ERC.Structures.ProcessAccessFlags.QueryInformation
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: QueryInformation
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2037
      summary: "\nQueryInformation\n"
      example: []
      syntax:
        content:
          CSharp: QueryInformation = 1024U
          VB: QueryInformation = 1024UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.QueryLimitedInformation
      commentId: F:ERC.Structures.ProcessAccessFlags.QueryLimitedInformation
      language: CSharp
      name:
        CSharp: QueryLimitedInformation
        VB: QueryLimitedInformation
      nameWithType:
        CSharp: ProcessAccessFlags.QueryLimitedInformation
        VB: ProcessAccessFlags.QueryLimitedInformation
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.QueryLimitedInformation
        VB: ERC.Structures.ProcessAccessFlags.QueryLimitedInformation
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: QueryLimitedInformation
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2041
      summary: "\nQueryLimitedInformation\n"
      example: []
      syntax:
        content:
          CSharp: QueryLimitedInformation = 4096U
          VB: QueryLimitedInformation = 4096UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ProcessAccessFlags.Synchronize
      commentId: F:ERC.Structures.ProcessAccessFlags.Synchronize
      language: CSharp
      name:
        CSharp: Synchronize
        VB: Synchronize
      nameWithType:
        CSharp: ProcessAccessFlags.Synchronize
        VB: ProcessAccessFlags.Synchronize
      qualifiedName:
        CSharp: ERC.Structures.ProcessAccessFlags.Synchronize
        VB: ERC.Structures.ProcessAccessFlags.Synchronize
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Synchronize
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2045
      summary: "\nSynchronize\n"
      example: []
      syntax:
        content:
          CSharp: Synchronize = 1048576U
          VB: Synchronize = 1048576UI
        return:
          type: ERC.Structures.ProcessAccessFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.LoadLibraryFlags
    commentId: T:ERC.Structures.LoadLibraryFlags
    language: CSharp
    name:
      CSharp: LoadLibraryFlags
      VB: LoadLibraryFlags
    nameWithType:
      CSharp: LoadLibraryFlags
      VB: LoadLibraryFlags
    qualifiedName:
      CSharp: ERC.Structures.LoadLibraryFlags
      VB: ERC.Structures.LoadLibraryFlags
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: LoadLibraryFlags
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2053
    summary: "\nLoadLibraryFlags\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Flags]

          public enum LoadLibraryFlags : uint
        VB: >-
          <Flags>

          Public Enum LoadLibraryFlags As UInteger
    attributes:
    - type: System.FlagsAttribute
      ctor: System.FlagsAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.LoadLibraryFlags.None
      commentId: F:ERC.Structures.LoadLibraryFlags.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: LoadLibraryFlags.None
        VB: LoadLibraryFlags.None
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.None
        VB: ERC.Structures.LoadLibraryFlags.None
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: None
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2059
      summary: "\nNone\n"
      example: []
      syntax:
        content:
          CSharp: None = 0U
          VB: None = 0UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.DONT_RESOLVE_DLL_REFERENCES
      commentId: F:ERC.Structures.LoadLibraryFlags.DONT_RESOLVE_DLL_REFERENCES
      language: CSharp
      name:
        CSharp: DONT_RESOLVE_DLL_REFERENCES
        VB: DONT_RESOLVE_DLL_REFERENCES
      nameWithType:
        CSharp: LoadLibraryFlags.DONT_RESOLVE_DLL_REFERENCES
        VB: LoadLibraryFlags.DONT_RESOLVE_DLL_REFERENCES
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.DONT_RESOLVE_DLL_REFERENCES
        VB: ERC.Structures.LoadLibraryFlags.DONT_RESOLVE_DLL_REFERENCES
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DONT_RESOLVE_DLL_REFERENCES
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2063
      summary: "\nDONT_RESOLVE_DLL_REFERENCES\n"
      example: []
      syntax:
        content:
          CSharp: DONT_RESOLVE_DLL_REFERENCES = 1U
          VB: DONT_RESOLVE_DLL_REFERENCES = 1UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_IGNORE_CODE_AUTHZ_LEVEL
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_IGNORE_CODE_AUTHZ_LEVEL
      language: CSharp
      name:
        CSharp: LOAD_IGNORE_CODE_AUTHZ_LEVEL
        VB: LOAD_IGNORE_CODE_AUTHZ_LEVEL
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_IGNORE_CODE_AUTHZ_LEVEL
        VB: LoadLibraryFlags.LOAD_IGNORE_CODE_AUTHZ_LEVEL
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_IGNORE_CODE_AUTHZ_LEVEL
        VB: ERC.Structures.LoadLibraryFlags.LOAD_IGNORE_CODE_AUTHZ_LEVEL
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_IGNORE_CODE_AUTHZ_LEVEL
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2067
      summary: "\nLOAD_IGNORE_CODE_AUTHZ_LEVEL\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_IGNORE_CODE_AUTHZ_LEVEL = 16U
          VB: LOAD_IGNORE_CODE_AUTHZ_LEVEL = 16UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE
      language: CSharp
      name:
        CSharp: LOAD_LIBRARY_AS_DATAFILE
        VB: LOAD_LIBRARY_AS_DATAFILE
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE
        VB: LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE
        VB: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_LIBRARY_AS_DATAFILE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2071
      summary: "\nLOAD_LIBRARY_AS_DATAFILE\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_LIBRARY_AS_DATAFILE = 2U
          VB: LOAD_LIBRARY_AS_DATAFILE = 2UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
      language: CSharp
      name:
        CSharp: LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
        VB: LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
        VB: LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
        VB: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2075
      summary: "\nLOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE = 64U
          VB: LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE = 64UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_IMAGE_RESOURCE
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_IMAGE_RESOURCE
      language: CSharp
      name:
        CSharp: LOAD_LIBRARY_AS_IMAGE_RESOURCE
        VB: LOAD_LIBRARY_AS_IMAGE_RESOURCE
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_LIBRARY_AS_IMAGE_RESOURCE
        VB: LoadLibraryFlags.LOAD_LIBRARY_AS_IMAGE_RESOURCE
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_IMAGE_RESOURCE
        VB: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_AS_IMAGE_RESOURCE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_LIBRARY_AS_IMAGE_RESOURCE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2079
      summary: "\nLOAD_LIBRARY_AS_IMAGE_RESOURCE\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_LIBRARY_AS_IMAGE_RESOURCE = 32U
          VB: LOAD_LIBRARY_AS_IMAGE_RESOURCE = 32UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_APPLICATION_DIR
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_APPLICATION_DIR
      language: CSharp
      name:
        CSharp: LOAD_LIBRARY_SEARCH_APPLICATION_DIR
        VB: LOAD_LIBRARY_SEARCH_APPLICATION_DIR
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_APPLICATION_DIR
        VB: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_APPLICATION_DIR
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_APPLICATION_DIR
        VB: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_APPLICATION_DIR
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_LIBRARY_SEARCH_APPLICATION_DIR
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2083
      summary: "\nLOAD_LIBRARY_SEARCH_APPLICATION_DIR\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_LIBRARY_SEARCH_APPLICATION_DIR = 512U
          VB: LOAD_LIBRARY_SEARCH_APPLICATION_DIR = 512UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
      language: CSharp
      name:
        CSharp: LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
        VB: LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
        VB: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
        VB: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2087
      summary: "\nLOAD_LIBRARY_SEARCH_DEFAULT_DIRS\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_LIBRARY_SEARCH_DEFAULT_DIRS = 4096U
          VB: LOAD_LIBRARY_SEARCH_DEFAULT_DIRS = 4096UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
      language: CSharp
      name:
        CSharp: LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
        VB: LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
        VB: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
        VB: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2091
      summary: "\nLOAD_LIBRARY_SEARCH_DLL_LOAD_DIR\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR = 256U
          VB: LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR = 256UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_SYSTEM32
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_SYSTEM32
      language: CSharp
      name:
        CSharp: LOAD_LIBRARY_SEARCH_SYSTEM32
        VB: LOAD_LIBRARY_SEARCH_SYSTEM32
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_SYSTEM32
        VB: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_SYSTEM32
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_SYSTEM32
        VB: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_SYSTEM32
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_LIBRARY_SEARCH_SYSTEM32
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2095
      summary: "\nLOAD_LIBRARY_SEARCH_SYSTEM32\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_LIBRARY_SEARCH_SYSTEM32 = 2048U
          VB: LOAD_LIBRARY_SEARCH_SYSTEM32 = 2048UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_USER_DIRS
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_USER_DIRS
      language: CSharp
      name:
        CSharp: LOAD_LIBRARY_SEARCH_USER_DIRS
        VB: LOAD_LIBRARY_SEARCH_USER_DIRS
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_USER_DIRS
        VB: LoadLibraryFlags.LOAD_LIBRARY_SEARCH_USER_DIRS
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_USER_DIRS
        VB: ERC.Structures.LoadLibraryFlags.LOAD_LIBRARY_SEARCH_USER_DIRS
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_LIBRARY_SEARCH_USER_DIRS
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2099
      summary: "\nLOAD_LIBRARY_SEARCH_USER_DIRS\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_LIBRARY_SEARCH_USER_DIRS = 1024U
          VB: LOAD_LIBRARY_SEARCH_USER_DIRS = 1024UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.LoadLibraryFlags.LOAD_WITH_ALTERED_SEARCH_PATH
      commentId: F:ERC.Structures.LoadLibraryFlags.LOAD_WITH_ALTERED_SEARCH_PATH
      language: CSharp
      name:
        CSharp: LOAD_WITH_ALTERED_SEARCH_PATH
        VB: LOAD_WITH_ALTERED_SEARCH_PATH
      nameWithType:
        CSharp: LoadLibraryFlags.LOAD_WITH_ALTERED_SEARCH_PATH
        VB: LoadLibraryFlags.LOAD_WITH_ALTERED_SEARCH_PATH
      qualifiedName:
        CSharp: ERC.Structures.LoadLibraryFlags.LOAD_WITH_ALTERED_SEARCH_PATH
        VB: ERC.Structures.LoadLibraryFlags.LOAD_WITH_ALTERED_SEARCH_PATH
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LOAD_WITH_ALTERED_SEARCH_PATH
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2103
      summary: "\nLOAD_WITH_ALTERED_SEARCH_PATH\n"
      example: []
      syntax:
        content:
          CSharp: LOAD_WITH_ALTERED_SEARCH_PATH = 8U
          VB: LOAD_WITH_ALTERED_SEARCH_PATH = 8UI
        return:
          type: ERC.Structures.LoadLibraryFlags
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.ThreadAccess
    commentId: T:ERC.Structures.ThreadAccess
    language: CSharp
    name:
      CSharp: ThreadAccess
      VB: ThreadAccess
    nameWithType:
      CSharp: ThreadAccess
      VB: ThreadAccess
    qualifiedName:
      CSharp: ERC.Structures.ThreadAccess
      VB: ERC.Structures.ThreadAccess
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: ThreadAccess
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2115
    summary: "\nEnum to specify access level required when accessing a thread. \n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Flags]

          public enum ThreadAccess
        VB: >-
          <Flags>

          Public Enum ThreadAccess
    attributes:
    - type: System.FlagsAttribute
      ctor: System.FlagsAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.ThreadAccess.TERMINATE
      commentId: F:ERC.Structures.ThreadAccess.TERMINATE
      language: CSharp
      name:
        CSharp: TERMINATE
        VB: TERMINATE
      nameWithType:
        CSharp: ThreadAccess.TERMINATE
        VB: ThreadAccess.TERMINATE
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.TERMINATE
        VB: ERC.Structures.ThreadAccess.TERMINATE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TERMINATE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2121
      summary: "\nTERMINATE\n"
      example: []
      syntax:
        content:
          CSharp: TERMINATE = 1
          VB: TERMINATE = 1
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.SUSPEND_RESUME
      commentId: F:ERC.Structures.ThreadAccess.SUSPEND_RESUME
      language: CSharp
      name:
        CSharp: SUSPEND_RESUME
        VB: SUSPEND_RESUME
      nameWithType:
        CSharp: ThreadAccess.SUSPEND_RESUME
        VB: ThreadAccess.SUSPEND_RESUME
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.SUSPEND_RESUME
        VB: ERC.Structures.ThreadAccess.SUSPEND_RESUME
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SUSPEND_RESUME
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2125
      summary: "\nSUSPEND_RESUME\n"
      example: []
      syntax:
        content:
          CSharp: SUSPEND_RESUME = 2
          VB: SUSPEND_RESUME = 2
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.GET_CONTEXT
      commentId: F:ERC.Structures.ThreadAccess.GET_CONTEXT
      language: CSharp
      name:
        CSharp: GET_CONTEXT
        VB: GET_CONTEXT
      nameWithType:
        CSharp: ThreadAccess.GET_CONTEXT
        VB: ThreadAccess.GET_CONTEXT
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.GET_CONTEXT
        VB: ERC.Structures.ThreadAccess.GET_CONTEXT
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GET_CONTEXT
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2129
      summary: "\nGET_CONTEXT\n"
      example: []
      syntax:
        content:
          CSharp: GET_CONTEXT = 8
          VB: GET_CONTEXT = 8
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.SET_CONTEXT
      commentId: F:ERC.Structures.ThreadAccess.SET_CONTEXT
      language: CSharp
      name:
        CSharp: SET_CONTEXT
        VB: SET_CONTEXT
      nameWithType:
        CSharp: ThreadAccess.SET_CONTEXT
        VB: ThreadAccess.SET_CONTEXT
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.SET_CONTEXT
        VB: ERC.Structures.ThreadAccess.SET_CONTEXT
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SET_CONTEXT
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2133
      summary: "\nSET_CONTEXT\n"
      example: []
      syntax:
        content:
          CSharp: SET_CONTEXT = 16
          VB: SET_CONTEXT = 16
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.SET_INFORMATION
      commentId: F:ERC.Structures.ThreadAccess.SET_INFORMATION
      language: CSharp
      name:
        CSharp: SET_INFORMATION
        VB: SET_INFORMATION
      nameWithType:
        CSharp: ThreadAccess.SET_INFORMATION
        VB: ThreadAccess.SET_INFORMATION
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.SET_INFORMATION
        VB: ERC.Structures.ThreadAccess.SET_INFORMATION
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SET_INFORMATION
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2137
      summary: "\nSET_INFORMATION\n"
      example: []
      syntax:
        content:
          CSharp: SET_INFORMATION = 32
          VB: SET_INFORMATION = 32
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.QUERY_INFORMATION
      commentId: F:ERC.Structures.ThreadAccess.QUERY_INFORMATION
      language: CSharp
      name:
        CSharp: QUERY_INFORMATION
        VB: QUERY_INFORMATION
      nameWithType:
        CSharp: ThreadAccess.QUERY_INFORMATION
        VB: ThreadAccess.QUERY_INFORMATION
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.QUERY_INFORMATION
        VB: ERC.Structures.ThreadAccess.QUERY_INFORMATION
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: QUERY_INFORMATION
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2141
      summary: "\nQUERY_INFORMATION\n"
      example: []
      syntax:
        content:
          CSharp: QUERY_INFORMATION = 64
          VB: QUERY_INFORMATION = 64
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.SET_THREAD_TOKEN
      commentId: F:ERC.Structures.ThreadAccess.SET_THREAD_TOKEN
      language: CSharp
      name:
        CSharp: SET_THREAD_TOKEN
        VB: SET_THREAD_TOKEN
      nameWithType:
        CSharp: ThreadAccess.SET_THREAD_TOKEN
        VB: ThreadAccess.SET_THREAD_TOKEN
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.SET_THREAD_TOKEN
        VB: ERC.Structures.ThreadAccess.SET_THREAD_TOKEN
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SET_THREAD_TOKEN
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2145
      summary: "\nSET_THREAD_TOKEN\n"
      example: []
      syntax:
        content:
          CSharp: SET_THREAD_TOKEN = 128
          VB: SET_THREAD_TOKEN = 128
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.IMPERSONATE
      commentId: F:ERC.Structures.ThreadAccess.IMPERSONATE
      language: CSharp
      name:
        CSharp: IMPERSONATE
        VB: IMPERSONATE
      nameWithType:
        CSharp: ThreadAccess.IMPERSONATE
        VB: ThreadAccess.IMPERSONATE
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.IMPERSONATE
        VB: ERC.Structures.ThreadAccess.IMPERSONATE
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: IMPERSONATE
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2149
      summary: "\nIMPERSONATE\n"
      example: []
      syntax:
        content:
          CSharp: IMPERSONATE = 256
          VB: IMPERSONATE = 256
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.DIRECT_IMPERSONATION
      commentId: F:ERC.Structures.ThreadAccess.DIRECT_IMPERSONATION
      language: CSharp
      name:
        CSharp: DIRECT_IMPERSONATION
        VB: DIRECT_IMPERSONATION
      nameWithType:
        CSharp: ThreadAccess.DIRECT_IMPERSONATION
        VB: ThreadAccess.DIRECT_IMPERSONATION
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.DIRECT_IMPERSONATION
        VB: ERC.Structures.ThreadAccess.DIRECT_IMPERSONATION
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DIRECT_IMPERSONATION
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2153
      summary: "\nDIRECT_IMPERSONATION\n"
      example: []
      syntax:
        content:
          CSharp: DIRECT_IMPERSONATION = 512
          VB: DIRECT_IMPERSONATION = 512
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.ThreadAccess.All_ACCESS
      commentId: F:ERC.Structures.ThreadAccess.All_ACCESS
      language: CSharp
      name:
        CSharp: All_ACCESS
        VB: All_ACCESS
      nameWithType:
        CSharp: ThreadAccess.All_ACCESS
        VB: ThreadAccess.All_ACCESS
      qualifiedName:
        CSharp: ERC.Structures.ThreadAccess.All_ACCESS
        VB: ERC.Structures.ThreadAccess.All_ACCESS
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: All_ACCESS
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2157
      summary: "\nAll_ACCESS\n"
      example: []
      syntax:
        content:
          CSharp: All_ACCESS = 65535
          VB: All_ACCESS = 65535
        return:
          type: ERC.Structures.ThreadAccess
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.CONTEXT_FLAGS
    commentId: T:ERC.Structures.CONTEXT_FLAGS
    language: CSharp
    name:
      CSharp: CONTEXT_FLAGS
      VB: CONTEXT_FLAGS
    nameWithType:
      CSharp: CONTEXT_FLAGS
      VB: CONTEXT_FLAGS
    qualifiedName:
      CSharp: ERC.Structures.CONTEXT_FLAGS
      VB: ERC.Structures.CONTEXT_FLAGS
    type: Enum
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: CONTEXT_FLAGS
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2165
    summary: "\nCONTEXT_FLAGS\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum CONTEXT_FLAGS : uint'
        VB: Public Enum CONTEXT_FLAGS As UInteger
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_i386
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_i386
      language: CSharp
      name:
        CSharp: CONTEXT_i386
        VB: CONTEXT_i386
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_i386
        VB: CONTEXT_FLAGS.CONTEXT_i386
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_i386
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_i386
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_i386
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2170
      summary: "\nCONTEXT_i386\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_i386 = 65536U
          VB: CONTEXT_i386 = 65536UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_i486
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_i486
      language: CSharp
      name:
        CSharp: CONTEXT_i486
        VB: CONTEXT_i486
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_i486
        VB: CONTEXT_FLAGS.CONTEXT_i486
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_i486
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_i486
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_i486
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2174
      summary: "\nCONTEXT_i486\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_i486 = 65536U
          VB: CONTEXT_i486 = 65536UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_CONTROL
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_CONTROL
      language: CSharp
      name:
        CSharp: CONTEXT_CONTROL
        VB: CONTEXT_CONTROL
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_CONTROL
        VB: CONTEXT_FLAGS.CONTEXT_CONTROL
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_CONTROL
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_CONTROL
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_CONTROL
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2178
      summary: "\nCONTEXT_CONTROL\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_CONTROL = 65537U
          VB: CONTEXT_CONTROL = 65537UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_INTEGER
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_INTEGER
      language: CSharp
      name:
        CSharp: CONTEXT_INTEGER
        VB: CONTEXT_INTEGER
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_INTEGER
        VB: CONTEXT_FLAGS.CONTEXT_INTEGER
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_INTEGER
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_INTEGER
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_INTEGER
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2182
      summary: "\nCONTEXT_INTEGER\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_INTEGER = 65538U
          VB: CONTEXT_INTEGER = 65538UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_SEGMENTS
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_SEGMENTS
      language: CSharp
      name:
        CSharp: CONTEXT_SEGMENTS
        VB: CONTEXT_SEGMENTS
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_SEGMENTS
        VB: CONTEXT_FLAGS.CONTEXT_SEGMENTS
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_SEGMENTS
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_SEGMENTS
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_SEGMENTS
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2186
      summary: "\nCONTEXT_SEGMENTS\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_SEGMENTS = 65540U
          VB: CONTEXT_SEGMENTS = 65540UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_FLOATING_POINT
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_FLOATING_POINT
      language: CSharp
      name:
        CSharp: CONTEXT_FLOATING_POINT
        VB: CONTEXT_FLOATING_POINT
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_FLOATING_POINT
        VB: CONTEXT_FLAGS.CONTEXT_FLOATING_POINT
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_FLOATING_POINT
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_FLOATING_POINT
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_FLOATING_POINT
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2190
      summary: "\nCONTEXT_FLOATING_POINT\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_FLOATING_POINT = 65544U
          VB: CONTEXT_FLOATING_POINT = 65544UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_DEBUG_REGISTERS
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_DEBUG_REGISTERS
      language: CSharp
      name:
        CSharp: CONTEXT_DEBUG_REGISTERS
        VB: CONTEXT_DEBUG_REGISTERS
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_DEBUG_REGISTERS
        VB: CONTEXT_FLAGS.CONTEXT_DEBUG_REGISTERS
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_DEBUG_REGISTERS
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_DEBUG_REGISTERS
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_DEBUG_REGISTERS
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2194
      summary: "\nCONTEXT_DEBUG_REGISTERS\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_DEBUG_REGISTERS = 65552U
          VB: CONTEXT_DEBUG_REGISTERS = 65552UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_EXTENDED_REGISTERS
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_EXTENDED_REGISTERS
      language: CSharp
      name:
        CSharp: CONTEXT_EXTENDED_REGISTERS
        VB: CONTEXT_EXTENDED_REGISTERS
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_EXTENDED_REGISTERS
        VB: CONTEXT_FLAGS.CONTEXT_EXTENDED_REGISTERS
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_EXTENDED_REGISTERS
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_EXTENDED_REGISTERS
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_EXTENDED_REGISTERS
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2198
      summary: "\nCONTEXT_EXTENDED_REGISTERS\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_EXTENDED_REGISTERS = 65568U
          VB: CONTEXT_EXTENDED_REGISTERS = 65568UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_FULL
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_FULL
      language: CSharp
      name:
        CSharp: CONTEXT_FULL
        VB: CONTEXT_FULL
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_FULL
        VB: CONTEXT_FLAGS.CONTEXT_FULL
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_FULL
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_FULL
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_FULL
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2202
      summary: "\nCONTEXT_FULL\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_FULL = 65543U
          VB: CONTEXT_FULL = 65543UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ERC.Structures.CONTEXT_FLAGS.CONTEXT_ALL
      commentId: F:ERC.Structures.CONTEXT_FLAGS.CONTEXT_ALL
      language: CSharp
      name:
        CSharp: CONTEXT_ALL
        VB: CONTEXT_ALL
      nameWithType:
        CSharp: CONTEXT_FLAGS.CONTEXT_ALL
        VB: CONTEXT_FLAGS.CONTEXT_ALL
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT_FLAGS.CONTEXT_ALL
        VB: ERC.Structures.CONTEXT_FLAGS.CONTEXT_ALL
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CONTEXT_ALL
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2206
      summary: "\nCONTEXT_ALL\n"
      example: []
      syntax:
        content:
          CSharp: CONTEXT_ALL = 65599U
          VB: CONTEXT_ALL = 65599UI
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ERC.Structures.FLOATING_SAVE_AREA
    commentId: T:ERC.Structures.FLOATING_SAVE_AREA
    language: CSharp
    name:
      CSharp: FLOATING_SAVE_AREA
      VB: FLOATING_SAVE_AREA
    nameWithType:
      CSharp: FLOATING_SAVE_AREA
      VB: FLOATING_SAVE_AREA
    qualifiedName:
      CSharp: ERC.Structures.FLOATING_SAVE_AREA
      VB: ERC.Structures.FLOATING_SAVE_AREA
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: FLOATING_SAVE_AREA
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2214
    summary: "\nx86 Save area data. See https://docs.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-_wow64_floating_save_area\n"
    example: []
    syntax:
      content:
        CSharp: public struct FLOATING_SAVE_AREA
        VB: Public Structure FLOATING_SAVE_AREA
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.FLOATING_SAVE_AREA.ControlWord
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.ControlWord
      language: CSharp
      name:
        CSharp: ControlWord
        VB: ControlWord
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.ControlWord
        VB: FLOATING_SAVE_AREA.ControlWord
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.ControlWord
        VB: ERC.Structures.FLOATING_SAVE_AREA.ControlWord
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ControlWord
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2220
      summary: "\nControlWord\n"
      example: []
      syntax:
        content:
          CSharp: public uint ControlWord
          VB: Public ControlWord As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.FLOATING_SAVE_AREA.StatusWord
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.StatusWord
      language: CSharp
      name:
        CSharp: StatusWord
        VB: StatusWord
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.StatusWord
        VB: FLOATING_SAVE_AREA.StatusWord
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.StatusWord
        VB: ERC.Structures.FLOATING_SAVE_AREA.StatusWord
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: StatusWord
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2224
      summary: "\nStatusWord\n"
      example: []
      syntax:
        content:
          CSharp: public uint StatusWord
          VB: Public StatusWord As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.FLOATING_SAVE_AREA.TagWord
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.TagWord
      language: CSharp
      name:
        CSharp: TagWord
        VB: TagWord
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.TagWord
        VB: FLOATING_SAVE_AREA.TagWord
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.TagWord
        VB: ERC.Structures.FLOATING_SAVE_AREA.TagWord
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TagWord
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2228
      summary: "\nTagWord\n"
      example: []
      syntax:
        content:
          CSharp: public uint TagWord
          VB: Public TagWord As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.FLOATING_SAVE_AREA.ErrorOffset
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.ErrorOffset
      language: CSharp
      name:
        CSharp: ErrorOffset
        VB: ErrorOffset
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.ErrorOffset
        VB: FLOATING_SAVE_AREA.ErrorOffset
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.ErrorOffset
        VB: ERC.Structures.FLOATING_SAVE_AREA.ErrorOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ErrorOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2232
      summary: "\nErrorOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint ErrorOffset
          VB: Public ErrorOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.FLOATING_SAVE_AREA.ErrorSelector
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.ErrorSelector
      language: CSharp
      name:
        CSharp: ErrorSelector
        VB: ErrorSelector
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.ErrorSelector
        VB: FLOATING_SAVE_AREA.ErrorSelector
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.ErrorSelector
        VB: ERC.Structures.FLOATING_SAVE_AREA.ErrorSelector
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ErrorSelector
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2236
      summary: "\nErrorSelector\n"
      example: []
      syntax:
        content:
          CSharp: public uint ErrorSelector
          VB: Public ErrorSelector As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.FLOATING_SAVE_AREA.DataOffset
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.DataOffset
      language: CSharp
      name:
        CSharp: DataOffset
        VB: DataOffset
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.DataOffset
        VB: FLOATING_SAVE_AREA.DataOffset
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.DataOffset
        VB: ERC.Structures.FLOATING_SAVE_AREA.DataOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DataOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2240
      summary: "\nDataOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint DataOffset
          VB: Public DataOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.FLOATING_SAVE_AREA.DataSelector
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.DataSelector
      language: CSharp
      name:
        CSharp: DataSelector
        VB: DataSelector
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.DataSelector
        VB: FLOATING_SAVE_AREA.DataSelector
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.DataSelector
        VB: ERC.Structures.FLOATING_SAVE_AREA.DataSelector
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DataSelector
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2244
      summary: "\nDataSelector\n"
      example: []
      syntax:
        content:
          CSharp: public uint DataSelector
          VB: Public DataSelector As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.FLOATING_SAVE_AREA.RegisterArea
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.RegisterArea
      language: CSharp
      name:
        CSharp: RegisterArea
        VB: RegisterArea
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.RegisterArea
        VB: FLOATING_SAVE_AREA.RegisterArea
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.RegisterArea
        VB: ERC.Structures.FLOATING_SAVE_AREA.RegisterArea
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RegisterArea
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2249
      summary: "\nRegisterArea\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] RegisterArea
          VB: Public RegisterArea As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.FLOATING_SAVE_AREA.Cr0NpxState
      commentId: F:ERC.Structures.FLOATING_SAVE_AREA.Cr0NpxState
      language: CSharp
      name:
        CSharp: Cr0NpxState
        VB: Cr0NpxState
      nameWithType:
        CSharp: FLOATING_SAVE_AREA.Cr0NpxState
        VB: FLOATING_SAVE_AREA.Cr0NpxState
      qualifiedName:
        CSharp: ERC.Structures.FLOATING_SAVE_AREA.Cr0NpxState
        VB: ERC.Structures.FLOATING_SAVE_AREA.Cr0NpxState
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Cr0NpxState
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2253
      summary: "\nCr0NpxState\n"
      example: []
      syntax:
        content:
          CSharp: public uint Cr0NpxState
          VB: Public Cr0NpxState As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.CONTEXT32
    commentId: T:ERC.Structures.CONTEXT32
    language: CSharp
    name:
      CSharp: CONTEXT32
      VB: CONTEXT32
    nameWithType:
      CSharp: CONTEXT32
      VB: CONTEXT32
    qualifiedName:
      CSharp: ERC.Structures.CONTEXT32
      VB: ERC.Structures.CONTEXT32
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: CONTEXT32
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2261
    summary: "\nStructure for holding x86 register values.\n"
    example: []
    syntax:
      content:
        CSharp: public struct CONTEXT32
        VB: Public Structure CONTEXT32
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.CONTEXT32.ContextFlags
      commentId: F:ERC.Structures.CONTEXT32.ContextFlags
      language: CSharp
      name:
        CSharp: ContextFlags
        VB: ContextFlags
      nameWithType:
        CSharp: CONTEXT32.ContextFlags
        VB: CONTEXT32.ContextFlags
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.ContextFlags
        VB: ERC.Structures.CONTEXT32.ContextFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ContextFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2267
      summary: "\nContextFlags\n"
      example: []
      syntax:
        content:
          CSharp: public CONTEXT_FLAGS ContextFlags
          VB: Public ContextFlags As CONTEXT_FLAGS
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Dr0
      commentId: F:ERC.Structures.CONTEXT32.Dr0
      language: CSharp
      name:
        CSharp: Dr0
        VB: Dr0
      nameWithType:
        CSharp: CONTEXT32.Dr0
        VB: CONTEXT32.Dr0
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Dr0
        VB: ERC.Structures.CONTEXT32.Dr0
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr0
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2271
      summary: "\nDr0\n"
      example: []
      syntax:
        content:
          CSharp: public uint Dr0
          VB: Public Dr0 As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Dr1
      commentId: F:ERC.Structures.CONTEXT32.Dr1
      language: CSharp
      name:
        CSharp: Dr1
        VB: Dr1
      nameWithType:
        CSharp: CONTEXT32.Dr1
        VB: CONTEXT32.Dr1
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Dr1
        VB: ERC.Structures.CONTEXT32.Dr1
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr1
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2275
      summary: "\nDr1\n"
      example: []
      syntax:
        content:
          CSharp: public uint Dr1
          VB: Public Dr1 As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Dr2
      commentId: F:ERC.Structures.CONTEXT32.Dr2
      language: CSharp
      name:
        CSharp: Dr2
        VB: Dr2
      nameWithType:
        CSharp: CONTEXT32.Dr2
        VB: CONTEXT32.Dr2
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Dr2
        VB: ERC.Structures.CONTEXT32.Dr2
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr2
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2279
      summary: "\nDr2\n"
      example: []
      syntax:
        content:
          CSharp: public uint Dr2
          VB: Public Dr2 As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Dr3
      commentId: F:ERC.Structures.CONTEXT32.Dr3
      language: CSharp
      name:
        CSharp: Dr3
        VB: Dr3
      nameWithType:
        CSharp: CONTEXT32.Dr3
        VB: CONTEXT32.Dr3
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Dr3
        VB: ERC.Structures.CONTEXT32.Dr3
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr3
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2283
      summary: "\nDr3\n"
      example: []
      syntax:
        content:
          CSharp: public uint Dr3
          VB: Public Dr3 As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Dr6
      commentId: F:ERC.Structures.CONTEXT32.Dr6
      language: CSharp
      name:
        CSharp: Dr6
        VB: Dr6
      nameWithType:
        CSharp: CONTEXT32.Dr6
        VB: CONTEXT32.Dr6
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Dr6
        VB: ERC.Structures.CONTEXT32.Dr6
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr6
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2287
      summary: "\nDr6\n"
      example: []
      syntax:
        content:
          CSharp: public uint Dr6
          VB: Public Dr6 As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Dr7
      commentId: F:ERC.Structures.CONTEXT32.Dr7
      language: CSharp
      name:
        CSharp: Dr7
        VB: Dr7
      nameWithType:
        CSharp: CONTEXT32.Dr7
        VB: CONTEXT32.Dr7
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Dr7
        VB: ERC.Structures.CONTEXT32.Dr7
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr7
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2291
      summary: "\nDr7\n"
      example: []
      syntax:
        content:
          CSharp: public uint Dr7
          VB: Public Dr7 As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.FloatSave
      commentId: F:ERC.Structures.CONTEXT32.FloatSave
      language: CSharp
      name:
        CSharp: FloatSave
        VB: FloatSave
      nameWithType:
        CSharp: CONTEXT32.FloatSave
        VB: CONTEXT32.FloatSave
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.FloatSave
        VB: ERC.Structures.CONTEXT32.FloatSave
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FloatSave
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2295
      summary: "\nFloatSave\n"
      example: []
      syntax:
        content:
          CSharp: public FLOATING_SAVE_AREA FloatSave
          VB: Public FloatSave As FLOATING_SAVE_AREA
        return:
          type: ERC.Structures.FLOATING_SAVE_AREA
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.SegGs
      commentId: F:ERC.Structures.CONTEXT32.SegGs
      language: CSharp
      name:
        CSharp: SegGs
        VB: SegGs
      nameWithType:
        CSharp: CONTEXT32.SegGs
        VB: CONTEXT32.SegGs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.SegGs
        VB: ERC.Structures.CONTEXT32.SegGs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegGs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2299
      summary: "\nSegGs\n"
      example: []
      syntax:
        content:
          CSharp: public uint SegGs
          VB: Public SegGs As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.SegFs
      commentId: F:ERC.Structures.CONTEXT32.SegFs
      language: CSharp
      name:
        CSharp: SegFs
        VB: SegFs
      nameWithType:
        CSharp: CONTEXT32.SegFs
        VB: CONTEXT32.SegFs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.SegFs
        VB: ERC.Structures.CONTEXT32.SegFs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegFs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2303
      summary: "\nSegFs\n"
      example: []
      syntax:
        content:
          CSharp: public uint SegFs
          VB: Public SegFs As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.SegEs
      commentId: F:ERC.Structures.CONTEXT32.SegEs
      language: CSharp
      name:
        CSharp: SegEs
        VB: SegEs
      nameWithType:
        CSharp: CONTEXT32.SegEs
        VB: CONTEXT32.SegEs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.SegEs
        VB: ERC.Structures.CONTEXT32.SegEs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegEs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2307
      summary: "\nSegEs\n"
      example: []
      syntax:
        content:
          CSharp: public uint SegEs
          VB: Public SegEs As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.SegDs
      commentId: F:ERC.Structures.CONTEXT32.SegDs
      language: CSharp
      name:
        CSharp: SegDs
        VB: SegDs
      nameWithType:
        CSharp: CONTEXT32.SegDs
        VB: CONTEXT32.SegDs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.SegDs
        VB: ERC.Structures.CONTEXT32.SegDs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegDs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2311
      summary: "\nSegDs\n"
      example: []
      syntax:
        content:
          CSharp: public uint SegDs
          VB: Public SegDs As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Edi
      commentId: F:ERC.Structures.CONTEXT32.Edi
      language: CSharp
      name:
        CSharp: Edi
        VB: Edi
      nameWithType:
        CSharp: CONTEXT32.Edi
        VB: CONTEXT32.Edi
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Edi
        VB: ERC.Structures.CONTEXT32.Edi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Edi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2315
      summary: "\nEdi\n"
      example: []
      syntax:
        content:
          CSharp: public uint Edi
          VB: Public Edi As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Esi
      commentId: F:ERC.Structures.CONTEXT32.Esi
      language: CSharp
      name:
        CSharp: Esi
        VB: Esi
      nameWithType:
        CSharp: CONTEXT32.Esi
        VB: CONTEXT32.Esi
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Esi
        VB: ERC.Structures.CONTEXT32.Esi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Esi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2319
      summary: "\nEsi\n"
      example: []
      syntax:
        content:
          CSharp: public uint Esi
          VB: Public Esi As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Ebx
      commentId: F:ERC.Structures.CONTEXT32.Ebx
      language: CSharp
      name:
        CSharp: Ebx
        VB: Ebx
      nameWithType:
        CSharp: CONTEXT32.Ebx
        VB: CONTEXT32.Ebx
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Ebx
        VB: ERC.Structures.CONTEXT32.Ebx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Ebx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2323
      summary: "\nEbx\n"
      example: []
      syntax:
        content:
          CSharp: public uint Ebx
          VB: Public Ebx As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Edx
      commentId: F:ERC.Structures.CONTEXT32.Edx
      language: CSharp
      name:
        CSharp: Edx
        VB: Edx
      nameWithType:
        CSharp: CONTEXT32.Edx
        VB: CONTEXT32.Edx
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Edx
        VB: ERC.Structures.CONTEXT32.Edx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Edx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2327
      summary: "\nEdx\n"
      example: []
      syntax:
        content:
          CSharp: public uint Edx
          VB: Public Edx As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Ecx
      commentId: F:ERC.Structures.CONTEXT32.Ecx
      language: CSharp
      name:
        CSharp: Ecx
        VB: Ecx
      nameWithType:
        CSharp: CONTEXT32.Ecx
        VB: CONTEXT32.Ecx
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Ecx
        VB: ERC.Structures.CONTEXT32.Ecx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Ecx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2331
      summary: "\nEcx\n"
      example: []
      syntax:
        content:
          CSharp: public uint Ecx
          VB: Public Ecx As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Eax
      commentId: F:ERC.Structures.CONTEXT32.Eax
      language: CSharp
      name:
        CSharp: Eax
        VB: Eax
      nameWithType:
        CSharp: CONTEXT32.Eax
        VB: CONTEXT32.Eax
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Eax
        VB: ERC.Structures.CONTEXT32.Eax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Eax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2335
      summary: "\nEax\n"
      example: []
      syntax:
        content:
          CSharp: public uint Eax
          VB: Public Eax As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Ebp
      commentId: F:ERC.Structures.CONTEXT32.Ebp
      language: CSharp
      name:
        CSharp: Ebp
        VB: Ebp
      nameWithType:
        CSharp: CONTEXT32.Ebp
        VB: CONTEXT32.Ebp
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Ebp
        VB: ERC.Structures.CONTEXT32.Ebp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Ebp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2339
      summary: "\nEbp\n"
      example: []
      syntax:
        content:
          CSharp: public uint Ebp
          VB: Public Ebp As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Eip
      commentId: F:ERC.Structures.CONTEXT32.Eip
      language: CSharp
      name:
        CSharp: Eip
        VB: Eip
      nameWithType:
        CSharp: CONTEXT32.Eip
        VB: CONTEXT32.Eip
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Eip
        VB: ERC.Structures.CONTEXT32.Eip
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Eip
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2343
      summary: "\nEip\n"
      example: []
      syntax:
        content:
          CSharp: public uint Eip
          VB: Public Eip As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.SegCs
      commentId: F:ERC.Structures.CONTEXT32.SegCs
      language: CSharp
      name:
        CSharp: SegCs
        VB: SegCs
      nameWithType:
        CSharp: CONTEXT32.SegCs
        VB: CONTEXT32.SegCs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.SegCs
        VB: ERC.Structures.CONTEXT32.SegCs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegCs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2347
      summary: "\nSegCs\n"
      example: []
      syntax:
        content:
          CSharp: public uint SegCs
          VB: Public SegCs As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.EFlags
      commentId: F:ERC.Structures.CONTEXT32.EFlags
      language: CSharp
      name:
        CSharp: EFlags
        VB: EFlags
      nameWithType:
        CSharp: CONTEXT32.EFlags
        VB: CONTEXT32.EFlags
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.EFlags
        VB: ERC.Structures.CONTEXT32.EFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: EFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2351
      summary: "\nEFlags\n"
      example: []
      syntax:
        content:
          CSharp: public uint EFlags
          VB: Public EFlags As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.Esp
      commentId: F:ERC.Structures.CONTEXT32.Esp
      language: CSharp
      name:
        CSharp: Esp
        VB: Esp
      nameWithType:
        CSharp: CONTEXT32.Esp
        VB: CONTEXT32.Esp
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.Esp
        VB: ERC.Structures.CONTEXT32.Esp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Esp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2355
      summary: "\nEsp\n"
      example: []
      syntax:
        content:
          CSharp: public uint Esp
          VB: Public Esp As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.SegSs
      commentId: F:ERC.Structures.CONTEXT32.SegSs
      language: CSharp
      name:
        CSharp: SegSs
        VB: SegSs
      nameWithType:
        CSharp: CONTEXT32.SegSs
        VB: CONTEXT32.SegSs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.SegSs
        VB: ERC.Structures.CONTEXT32.SegSs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegSs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2359
      summary: "\nSegSs\n"
      example: []
      syntax:
        content:
          CSharp: public uint SegSs
          VB: Public SegSs As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.ExtendedRegisters
      commentId: F:ERC.Structures.CONTEXT32.ExtendedRegisters
      language: CSharp
      name:
        CSharp: ExtendedRegisters
        VB: ExtendedRegisters
      nameWithType:
        CSharp: CONTEXT32.ExtendedRegisters
        VB: CONTEXT32.ExtendedRegisters
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.ExtendedRegisters
        VB: ERC.Structures.CONTEXT32.ExtendedRegisters
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ExtendedRegisters
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2364
      summary: "\nExtendedRegisters\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] ExtendedRegisters
          VB: Public ExtendedRegisters As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT32.ToString
      commentId: M:ERC.Structures.CONTEXT32.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: CONTEXT32.ToString()
        VB: CONTEXT32.ToString()
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT32.ToString()
        VB: ERC.Structures.CONTEXT32.ToString()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ToString
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2370
      summary: "\nOverridden ToString method, returns register values for the current thread.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: String
      overload: ERC.Structures.CONTEXT32.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ERC.Structures.M128A
    commentId: T:ERC.Structures.M128A
    language: CSharp
    name:
      CSharp: M128A
      VB: M128A
    nameWithType:
      CSharp: M128A
      VB: M128A
    qualifiedName:
      CSharp: ERC.Structures.M128A
      VB: ERC.Structures.M128A
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: M128A
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2391
    summary: "\nM128A\n"
    example: []
    syntax:
      content:
        CSharp: public struct M128A
        VB: Public Structure M128A
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.M128A.High
      commentId: F:ERC.Structures.M128A.High
      language: CSharp
      name:
        CSharp: High
        VB: High
      nameWithType:
        CSharp: M128A.High
        VB: M128A.High
      qualifiedName:
        CSharp: ERC.Structures.M128A.High
        VB: ERC.Structures.M128A.High
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: High
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2397
      summary: "\nHigh\n"
      example: []
      syntax:
        content:
          CSharp: public ulong High
          VB: Public High As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.M128A.Low
      commentId: F:ERC.Structures.M128A.Low
      language: CSharp
      name:
        CSharp: Low
        VB: Low
      nameWithType:
        CSharp: M128A.Low
        VB: M128A.Low
      qualifiedName:
        CSharp: ERC.Structures.M128A.Low
        VB: ERC.Structures.M128A.Low
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Low
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2401
      summary: "\nLow\n"
      example: []
      syntax:
        content:
          CSharp: public long Low
          VB: Public Low As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.M128A.ToString
      commentId: M:ERC.Structures.M128A.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: M128A.ToString()
        VB: M128A.ToString()
      qualifiedName:
        CSharp: ERC.Structures.M128A.ToString()
        VB: ERC.Structures.M128A.ToString()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ToString
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2407
      summary: "\nToString Override\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: Returns a String
      overload: ERC.Structures.M128A.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ERC.Structures.XSAVE_FORMAT64
    commentId: T:ERC.Structures.XSAVE_FORMAT64
    language: CSharp
    name:
      CSharp: XSAVE_FORMAT64
      VB: XSAVE_FORMAT64
    nameWithType:
      CSharp: XSAVE_FORMAT64
      VB: XSAVE_FORMAT64
    qualifiedName:
      CSharp: ERC.Structures.XSAVE_FORMAT64
      VB: ERC.Structures.XSAVE_FORMAT64
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: XSAVE_FORMAT64
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2418
    summary: "\nx64 Save area data.\n"
    example: []
    syntax:
      content:
        CSharp: public struct XSAVE_FORMAT64
        VB: Public Structure XSAVE_FORMAT64
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.XSAVE_FORMAT64.ControlWord
      commentId: F:ERC.Structures.XSAVE_FORMAT64.ControlWord
      language: CSharp
      name:
        CSharp: ControlWord
        VB: ControlWord
      nameWithType:
        CSharp: XSAVE_FORMAT64.ControlWord
        VB: XSAVE_FORMAT64.ControlWord
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.ControlWord
        VB: ERC.Structures.XSAVE_FORMAT64.ControlWord
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ControlWord
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2424
      summary: "\nControlWord\n"
      example: []
      syntax:
        content:
          CSharp: public ushort ControlWord
          VB: Public ControlWord As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.StatusWord
      commentId: F:ERC.Structures.XSAVE_FORMAT64.StatusWord
      language: CSharp
      name:
        CSharp: StatusWord
        VB: StatusWord
      nameWithType:
        CSharp: XSAVE_FORMAT64.StatusWord
        VB: XSAVE_FORMAT64.StatusWord
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.StatusWord
        VB: ERC.Structures.XSAVE_FORMAT64.StatusWord
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: StatusWord
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2428
      summary: "\nStatusWord\n"
      example: []
      syntax:
        content:
          CSharp: public ushort StatusWord
          VB: Public StatusWord As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.TagWord
      commentId: F:ERC.Structures.XSAVE_FORMAT64.TagWord
      language: CSharp
      name:
        CSharp: TagWord
        VB: TagWord
      nameWithType:
        CSharp: XSAVE_FORMAT64.TagWord
        VB: XSAVE_FORMAT64.TagWord
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.TagWord
        VB: ERC.Structures.XSAVE_FORMAT64.TagWord
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TagWord
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2432
      summary: "\nTagWord\n"
      example: []
      syntax:
        content:
          CSharp: public byte TagWord
          VB: Public TagWord As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.Reserved1
      commentId: F:ERC.Structures.XSAVE_FORMAT64.Reserved1
      language: CSharp
      name:
        CSharp: Reserved1
        VB: Reserved1
      nameWithType:
        CSharp: XSAVE_FORMAT64.Reserved1
        VB: XSAVE_FORMAT64.Reserved1
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.Reserved1
        VB: ERC.Structures.XSAVE_FORMAT64.Reserved1
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved1
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2436
      summary: "\nReserved1\n"
      example: []
      syntax:
        content:
          CSharp: public byte Reserved1
          VB: Public Reserved1 As Byte
        return:
          type: System.Byte
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.ErrorOpcode
      commentId: F:ERC.Structures.XSAVE_FORMAT64.ErrorOpcode
      language: CSharp
      name:
        CSharp: ErrorOpcode
        VB: ErrorOpcode
      nameWithType:
        CSharp: XSAVE_FORMAT64.ErrorOpcode
        VB: XSAVE_FORMAT64.ErrorOpcode
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.ErrorOpcode
        VB: ERC.Structures.XSAVE_FORMAT64.ErrorOpcode
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ErrorOpcode
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2440
      summary: "\nErrorOpcode\n"
      example: []
      syntax:
        content:
          CSharp: public ushort ErrorOpcode
          VB: Public ErrorOpcode As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.ErrorOffset
      commentId: F:ERC.Structures.XSAVE_FORMAT64.ErrorOffset
      language: CSharp
      name:
        CSharp: ErrorOffset
        VB: ErrorOffset
      nameWithType:
        CSharp: XSAVE_FORMAT64.ErrorOffset
        VB: XSAVE_FORMAT64.ErrorOffset
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.ErrorOffset
        VB: ERC.Structures.XSAVE_FORMAT64.ErrorOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ErrorOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2444
      summary: "\nErrorOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint ErrorOffset
          VB: Public ErrorOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.ErrorSelector
      commentId: F:ERC.Structures.XSAVE_FORMAT64.ErrorSelector
      language: CSharp
      name:
        CSharp: ErrorSelector
        VB: ErrorSelector
      nameWithType:
        CSharp: XSAVE_FORMAT64.ErrorSelector
        VB: XSAVE_FORMAT64.ErrorSelector
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.ErrorSelector
        VB: ERC.Structures.XSAVE_FORMAT64.ErrorSelector
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ErrorSelector
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2448
      summary: "\nErrorSelector\n"
      example: []
      syntax:
        content:
          CSharp: public ushort ErrorSelector
          VB: Public ErrorSelector As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.Reserved2
      commentId: F:ERC.Structures.XSAVE_FORMAT64.Reserved2
      language: CSharp
      name:
        CSharp: Reserved2
        VB: Reserved2
      nameWithType:
        CSharp: XSAVE_FORMAT64.Reserved2
        VB: XSAVE_FORMAT64.Reserved2
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.Reserved2
        VB: ERC.Structures.XSAVE_FORMAT64.Reserved2
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved2
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2452
      summary: "\nReserved2\n"
      example: []
      syntax:
        content:
          CSharp: public ushort Reserved2
          VB: Public Reserved2 As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.DataOffset
      commentId: F:ERC.Structures.XSAVE_FORMAT64.DataOffset
      language: CSharp
      name:
        CSharp: DataOffset
        VB: DataOffset
      nameWithType:
        CSharp: XSAVE_FORMAT64.DataOffset
        VB: XSAVE_FORMAT64.DataOffset
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.DataOffset
        VB: ERC.Structures.XSAVE_FORMAT64.DataOffset
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DataOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2456
      summary: "\nDataOffset\n"
      example: []
      syntax:
        content:
          CSharp: public uint DataOffset
          VB: Public DataOffset As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.DataSelector
      commentId: F:ERC.Structures.XSAVE_FORMAT64.DataSelector
      language: CSharp
      name:
        CSharp: DataSelector
        VB: DataSelector
      nameWithType:
        CSharp: XSAVE_FORMAT64.DataSelector
        VB: XSAVE_FORMAT64.DataSelector
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.DataSelector
        VB: ERC.Structures.XSAVE_FORMAT64.DataSelector
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DataSelector
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2460
      summary: "\nDataSelector\n"
      example: []
      syntax:
        content:
          CSharp: public ushort DataSelector
          VB: Public DataSelector As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.Reserved3
      commentId: F:ERC.Structures.XSAVE_FORMAT64.Reserved3
      language: CSharp
      name:
        CSharp: Reserved3
        VB: Reserved3
      nameWithType:
        CSharp: XSAVE_FORMAT64.Reserved3
        VB: XSAVE_FORMAT64.Reserved3
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.Reserved3
        VB: ERC.Structures.XSAVE_FORMAT64.Reserved3
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved3
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2464
      summary: "\nReserved3\n"
      example: []
      syntax:
        content:
          CSharp: public ushort Reserved3
          VB: Public Reserved3 As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.MxCsr
      commentId: F:ERC.Structures.XSAVE_FORMAT64.MxCsr
      language: CSharp
      name:
        CSharp: MxCsr
        VB: MxCsr
      nameWithType:
        CSharp: XSAVE_FORMAT64.MxCsr
        VB: XSAVE_FORMAT64.MxCsr
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.MxCsr
        VB: ERC.Structures.XSAVE_FORMAT64.MxCsr
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MxCsr
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2468
      summary: "\nMxCsr\n"
      example: []
      syntax:
        content:
          CSharp: public uint MxCsr
          VB: Public MxCsr As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.MxCsr_Mask
      commentId: F:ERC.Structures.XSAVE_FORMAT64.MxCsr_Mask
      language: CSharp
      name:
        CSharp: MxCsr_Mask
        VB: MxCsr_Mask
      nameWithType:
        CSharp: XSAVE_FORMAT64.MxCsr_Mask
        VB: XSAVE_FORMAT64.MxCsr_Mask
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.MxCsr_Mask
        VB: ERC.Structures.XSAVE_FORMAT64.MxCsr_Mask
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MxCsr_Mask
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2472
      summary: "\nMxCsr_Mask\n"
      example: []
      syntax:
        content:
          CSharp: public uint MxCsr_Mask
          VB: Public MxCsr_Mask As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.FloatRegisters
      commentId: F:ERC.Structures.XSAVE_FORMAT64.FloatRegisters
      language: CSharp
      name:
        CSharp: FloatRegisters
        VB: FloatRegisters
      nameWithType:
        CSharp: XSAVE_FORMAT64.FloatRegisters
        VB: XSAVE_FORMAT64.FloatRegisters
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.FloatRegisters
        VB: ERC.Structures.XSAVE_FORMAT64.FloatRegisters
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FloatRegisters
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2477
      summary: "\nFloatRegisters\n"
      example: []
      syntax:
        content:
          CSharp: public M128A[] FloatRegisters
          VB: Public FloatRegisters As M128A()
        return:
          type: ERC.Structures.M128A[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.XmmRegisters
      commentId: F:ERC.Structures.XSAVE_FORMAT64.XmmRegisters
      language: CSharp
      name:
        CSharp: XmmRegisters
        VB: XmmRegisters
      nameWithType:
        CSharp: XSAVE_FORMAT64.XmmRegisters
        VB: XSAVE_FORMAT64.XmmRegisters
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.XmmRegisters
        VB: ERC.Structures.XSAVE_FORMAT64.XmmRegisters
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: XmmRegisters
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2482
      summary: "\nXmmRegisters\n"
      example: []
      syntax:
        content:
          CSharp: public M128A[] XmmRegisters
          VB: Public XmmRegisters As M128A()
        return:
          type: ERC.Structures.M128A[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.XSAVE_FORMAT64.Reserved4
      commentId: F:ERC.Structures.XSAVE_FORMAT64.Reserved4
      language: CSharp
      name:
        CSharp: Reserved4
        VB: Reserved4
      nameWithType:
        CSharp: XSAVE_FORMAT64.Reserved4
        VB: XSAVE_FORMAT64.Reserved4
      qualifiedName:
        CSharp: ERC.Structures.XSAVE_FORMAT64.Reserved4
        VB: ERC.Structures.XSAVE_FORMAT64.Reserved4
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Reserved4
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2487
      summary: "\nReserved4\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] Reserved4
          VB: Public Reserved4 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.CONTEXT64
    commentId: T:ERC.Structures.CONTEXT64
    language: CSharp
    name:
      CSharp: CONTEXT64
      VB: CONTEXT64
    nameWithType:
      CSharp: CONTEXT64
      VB: CONTEXT64
    qualifiedName:
      CSharp: ERC.Structures.CONTEXT64
      VB: ERC.Structures.CONTEXT64
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: CONTEXT64
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2495
    summary: "\nStructure for holding x64 register values.\n"
    example: []
    syntax:
      content:
        CSharp: public struct CONTEXT64
        VB: Public Structure CONTEXT64
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.CONTEXT64.P1Home
      commentId: F:ERC.Structures.CONTEXT64.P1Home
      language: CSharp
      name:
        CSharp: P1Home
        VB: P1Home
      nameWithType:
        CSharp: CONTEXT64.P1Home
        VB: CONTEXT64.P1Home
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.P1Home
        VB: ERC.Structures.CONTEXT64.P1Home
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: P1Home
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2501
      summary: "\nP1Home\n"
      example: []
      syntax:
        content:
          CSharp: public ulong P1Home
          VB: Public P1Home As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.P2Home
      commentId: F:ERC.Structures.CONTEXT64.P2Home
      language: CSharp
      name:
        CSharp: P2Home
        VB: P2Home
      nameWithType:
        CSharp: CONTEXT64.P2Home
        VB: CONTEXT64.P2Home
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.P2Home
        VB: ERC.Structures.CONTEXT64.P2Home
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: P2Home
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2505
      summary: "\nP2Home\n"
      example: []
      syntax:
        content:
          CSharp: public ulong P2Home
          VB: Public P2Home As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.P3Home
      commentId: F:ERC.Structures.CONTEXT64.P3Home
      language: CSharp
      name:
        CSharp: P3Home
        VB: P3Home
      nameWithType:
        CSharp: CONTEXT64.P3Home
        VB: CONTEXT64.P3Home
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.P3Home
        VB: ERC.Structures.CONTEXT64.P3Home
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: P3Home
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2509
      summary: "\nP3Home\n"
      example: []
      syntax:
        content:
          CSharp: public ulong P3Home
          VB: Public P3Home As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.P4Home
      commentId: F:ERC.Structures.CONTEXT64.P4Home
      language: CSharp
      name:
        CSharp: P4Home
        VB: P4Home
      nameWithType:
        CSharp: CONTEXT64.P4Home
        VB: CONTEXT64.P4Home
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.P4Home
        VB: ERC.Structures.CONTEXT64.P4Home
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: P4Home
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2513
      summary: "\nP4Home\n"
      example: []
      syntax:
        content:
          CSharp: public ulong P4Home
          VB: Public P4Home As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.P5Home
      commentId: F:ERC.Structures.CONTEXT64.P5Home
      language: CSharp
      name:
        CSharp: P5Home
        VB: P5Home
      nameWithType:
        CSharp: CONTEXT64.P5Home
        VB: CONTEXT64.P5Home
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.P5Home
        VB: ERC.Structures.CONTEXT64.P5Home
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: P5Home
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2517
      summary: "\nP5Home\n"
      example: []
      syntax:
        content:
          CSharp: public ulong P5Home
          VB: Public P5Home As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.P6Home
      commentId: F:ERC.Structures.CONTEXT64.P6Home
      language: CSharp
      name:
        CSharp: P6Home
        VB: P6Home
      nameWithType:
        CSharp: CONTEXT64.P6Home
        VB: CONTEXT64.P6Home
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.P6Home
        VB: ERC.Structures.CONTEXT64.P6Home
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: P6Home
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2521
      summary: "\nP6Home\n"
      example: []
      syntax:
        content:
          CSharp: public ulong P6Home
          VB: Public P6Home As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.ContextFlags
      commentId: F:ERC.Structures.CONTEXT64.ContextFlags
      language: CSharp
      name:
        CSharp: ContextFlags
        VB: ContextFlags
      nameWithType:
        CSharp: CONTEXT64.ContextFlags
        VB: CONTEXT64.ContextFlags
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.ContextFlags
        VB: ERC.Structures.CONTEXT64.ContextFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ContextFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2526
      summary: "\nContextFlags\n"
      example: []
      syntax:
        content:
          CSharp: public CONTEXT_FLAGS ContextFlags
          VB: Public ContextFlags As CONTEXT_FLAGS
        return:
          type: ERC.Structures.CONTEXT_FLAGS
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.MxCsr
      commentId: F:ERC.Structures.CONTEXT64.MxCsr
      language: CSharp
      name:
        CSharp: MxCsr
        VB: MxCsr
      nameWithType:
        CSharp: CONTEXT64.MxCsr
        VB: CONTEXT64.MxCsr
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.MxCsr
        VB: ERC.Structures.CONTEXT64.MxCsr
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: MxCsr
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2530
      summary: "\nMxCsr\n"
      example: []
      syntax:
        content:
          CSharp: public uint MxCsr
          VB: Public MxCsr As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.SegCs
      commentId: F:ERC.Structures.CONTEXT64.SegCs
      language: CSharp
      name:
        CSharp: SegCs
        VB: SegCs
      nameWithType:
        CSharp: CONTEXT64.SegCs
        VB: CONTEXT64.SegCs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.SegCs
        VB: ERC.Structures.CONTEXT64.SegCs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegCs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2535
      summary: "\nSegCs\n"
      example: []
      syntax:
        content:
          CSharp: public ushort SegCs
          VB: Public SegCs As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.SegDs
      commentId: F:ERC.Structures.CONTEXT64.SegDs
      language: CSharp
      name:
        CSharp: SegDs
        VB: SegDs
      nameWithType:
        CSharp: CONTEXT64.SegDs
        VB: CONTEXT64.SegDs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.SegDs
        VB: ERC.Structures.CONTEXT64.SegDs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegDs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2539
      summary: "\nSegDs\n"
      example: []
      syntax:
        content:
          CSharp: public ushort SegDs
          VB: Public SegDs As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.SegEs
      commentId: F:ERC.Structures.CONTEXT64.SegEs
      language: CSharp
      name:
        CSharp: SegEs
        VB: SegEs
      nameWithType:
        CSharp: CONTEXT64.SegEs
        VB: CONTEXT64.SegEs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.SegEs
        VB: ERC.Structures.CONTEXT64.SegEs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegEs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2543
      summary: "\nSegEs\n"
      example: []
      syntax:
        content:
          CSharp: public ushort SegEs
          VB: Public SegEs As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.SegFs
      commentId: F:ERC.Structures.CONTEXT64.SegFs
      language: CSharp
      name:
        CSharp: SegFs
        VB: SegFs
      nameWithType:
        CSharp: CONTEXT64.SegFs
        VB: CONTEXT64.SegFs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.SegFs
        VB: ERC.Structures.CONTEXT64.SegFs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegFs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2547
      summary: "\nSegFs\n"
      example: []
      syntax:
        content:
          CSharp: public ushort SegFs
          VB: Public SegFs As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.SegGs
      commentId: F:ERC.Structures.CONTEXT64.SegGs
      language: CSharp
      name:
        CSharp: SegGs
        VB: SegGs
      nameWithType:
        CSharp: CONTEXT64.SegGs
        VB: CONTEXT64.SegGs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.SegGs
        VB: ERC.Structures.CONTEXT64.SegGs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegGs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2551
      summary: "\nSegGs\n"
      example: []
      syntax:
        content:
          CSharp: public ushort SegGs
          VB: Public SegGs As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.SegSs
      commentId: F:ERC.Structures.CONTEXT64.SegSs
      language: CSharp
      name:
        CSharp: SegSs
        VB: SegSs
      nameWithType:
        CSharp: CONTEXT64.SegSs
        VB: CONTEXT64.SegSs
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.SegSs
        VB: ERC.Structures.CONTEXT64.SegSs
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SegSs
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2555
      summary: "\nSegSs\n"
      example: []
      syntax:
        content:
          CSharp: public ushort SegSs
          VB: Public SegSs As UShort
        return:
          type: System.UInt16
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.EFlags
      commentId: F:ERC.Structures.CONTEXT64.EFlags
      language: CSharp
      name:
        CSharp: EFlags
        VB: EFlags
      nameWithType:
        CSharp: CONTEXT64.EFlags
        VB: CONTEXT64.EFlags
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.EFlags
        VB: ERC.Structures.CONTEXT64.EFlags
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: EFlags
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2559
      summary: "\nEFlags\n"
      example: []
      syntax:
        content:
          CSharp: public uint EFlags
          VB: Public EFlags As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Dr0
      commentId: F:ERC.Structures.CONTEXT64.Dr0
      language: CSharp
      name:
        CSharp: Dr0
        VB: Dr0
      nameWithType:
        CSharp: CONTEXT64.Dr0
        VB: CONTEXT64.Dr0
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Dr0
        VB: ERC.Structures.CONTEXT64.Dr0
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr0
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2564
      summary: "\nDr0\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Dr0
          VB: Public Dr0 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Dr1
      commentId: F:ERC.Structures.CONTEXT64.Dr1
      language: CSharp
      name:
        CSharp: Dr1
        VB: Dr1
      nameWithType:
        CSharp: CONTEXT64.Dr1
        VB: CONTEXT64.Dr1
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Dr1
        VB: ERC.Structures.CONTEXT64.Dr1
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr1
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2568
      summary: "\nDr1\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Dr1
          VB: Public Dr1 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Dr2
      commentId: F:ERC.Structures.CONTEXT64.Dr2
      language: CSharp
      name:
        CSharp: Dr2
        VB: Dr2
      nameWithType:
        CSharp: CONTEXT64.Dr2
        VB: CONTEXT64.Dr2
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Dr2
        VB: ERC.Structures.CONTEXT64.Dr2
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr2
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2572
      summary: "\nDr2\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Dr2
          VB: Public Dr2 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Dr3
      commentId: F:ERC.Structures.CONTEXT64.Dr3
      language: CSharp
      name:
        CSharp: Dr3
        VB: Dr3
      nameWithType:
        CSharp: CONTEXT64.Dr3
        VB: CONTEXT64.Dr3
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Dr3
        VB: ERC.Structures.CONTEXT64.Dr3
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr3
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2576
      summary: "\nDr3\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Dr3
          VB: Public Dr3 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Dr6
      commentId: F:ERC.Structures.CONTEXT64.Dr6
      language: CSharp
      name:
        CSharp: Dr6
        VB: Dr6
      nameWithType:
        CSharp: CONTEXT64.Dr6
        VB: CONTEXT64.Dr6
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Dr6
        VB: ERC.Structures.CONTEXT64.Dr6
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr6
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2580
      summary: "\nDr6\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Dr6
          VB: Public Dr6 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Dr7
      commentId: F:ERC.Structures.CONTEXT64.Dr7
      language: CSharp
      name:
        CSharp: Dr7
        VB: Dr7
      nameWithType:
        CSharp: CONTEXT64.Dr7
        VB: CONTEXT64.Dr7
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Dr7
        VB: ERC.Structures.CONTEXT64.Dr7
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Dr7
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2584
      summary: "\nDr7\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Dr7
          VB: Public Dr7 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rax
      commentId: F:ERC.Structures.CONTEXT64.Rax
      language: CSharp
      name:
        CSharp: Rax
        VB: Rax
      nameWithType:
        CSharp: CONTEXT64.Rax
        VB: CONTEXT64.Rax
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rax
        VB: ERC.Structures.CONTEXT64.Rax
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rax
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2589
      summary: "\nRax\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rax
          VB: Public Rax As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rcx
      commentId: F:ERC.Structures.CONTEXT64.Rcx
      language: CSharp
      name:
        CSharp: Rcx
        VB: Rcx
      nameWithType:
        CSharp: CONTEXT64.Rcx
        VB: CONTEXT64.Rcx
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rcx
        VB: ERC.Structures.CONTEXT64.Rcx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rcx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2593
      summary: "\nRcx\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rcx
          VB: Public Rcx As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rdx
      commentId: F:ERC.Structures.CONTEXT64.Rdx
      language: CSharp
      name:
        CSharp: Rdx
        VB: Rdx
      nameWithType:
        CSharp: CONTEXT64.Rdx
        VB: CONTEXT64.Rdx
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rdx
        VB: ERC.Structures.CONTEXT64.Rdx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rdx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2597
      summary: "\nRdx\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rdx
          VB: Public Rdx As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rbx
      commentId: F:ERC.Structures.CONTEXT64.Rbx
      language: CSharp
      name:
        CSharp: Rbx
        VB: Rbx
      nameWithType:
        CSharp: CONTEXT64.Rbx
        VB: CONTEXT64.Rbx
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rbx
        VB: ERC.Structures.CONTEXT64.Rbx
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rbx
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2601
      summary: "\nRbx\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rbx
          VB: Public Rbx As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rsp
      commentId: F:ERC.Structures.CONTEXT64.Rsp
      language: CSharp
      name:
        CSharp: Rsp
        VB: Rsp
      nameWithType:
        CSharp: CONTEXT64.Rsp
        VB: CONTEXT64.Rsp
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rsp
        VB: ERC.Structures.CONTEXT64.Rsp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rsp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2605
      summary: "\nRsp\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rsp
          VB: Public Rsp As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rbp
      commentId: F:ERC.Structures.CONTEXT64.Rbp
      language: CSharp
      name:
        CSharp: Rbp
        VB: Rbp
      nameWithType:
        CSharp: CONTEXT64.Rbp
        VB: CONTEXT64.Rbp
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rbp
        VB: ERC.Structures.CONTEXT64.Rbp
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rbp
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2609
      summary: "\nRbp\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rbp
          VB: Public Rbp As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rsi
      commentId: F:ERC.Structures.CONTEXT64.Rsi
      language: CSharp
      name:
        CSharp: Rsi
        VB: Rsi
      nameWithType:
        CSharp: CONTEXT64.Rsi
        VB: CONTEXT64.Rsi
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rsi
        VB: ERC.Structures.CONTEXT64.Rsi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rsi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2613
      summary: "\nRsi\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rsi
          VB: Public Rsi As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rdi
      commentId: F:ERC.Structures.CONTEXT64.Rdi
      language: CSharp
      name:
        CSharp: Rdi
        VB: Rdi
      nameWithType:
        CSharp: CONTEXT64.Rdi
        VB: CONTEXT64.Rdi
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rdi
        VB: ERC.Structures.CONTEXT64.Rdi
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rdi
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2617
      summary: "\nRdi\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rdi
          VB: Public Rdi As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.R8
      commentId: F:ERC.Structures.CONTEXT64.R8
      language: CSharp
      name:
        CSharp: R8
        VB: R8
      nameWithType:
        CSharp: CONTEXT64.R8
        VB: CONTEXT64.R8
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.R8
        VB: ERC.Structures.CONTEXT64.R8
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: R8
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2621
      summary: "\nR8\n"
      example: []
      syntax:
        content:
          CSharp: public ulong R8
          VB: Public R8 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.R9
      commentId: F:ERC.Structures.CONTEXT64.R9
      language: CSharp
      name:
        CSharp: R9
        VB: R9
      nameWithType:
        CSharp: CONTEXT64.R9
        VB: CONTEXT64.R9
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.R9
        VB: ERC.Structures.CONTEXT64.R9
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: R9
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2625
      summary: "\nR9\n"
      example: []
      syntax:
        content:
          CSharp: public ulong R9
          VB: Public R9 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.R10
      commentId: F:ERC.Structures.CONTEXT64.R10
      language: CSharp
      name:
        CSharp: R10
        VB: R10
      nameWithType:
        CSharp: CONTEXT64.R10
        VB: CONTEXT64.R10
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.R10
        VB: ERC.Structures.CONTEXT64.R10
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: R10
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2629
      summary: "\nR10\n"
      example: []
      syntax:
        content:
          CSharp: public ulong R10
          VB: Public R10 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.R11
      commentId: F:ERC.Structures.CONTEXT64.R11
      language: CSharp
      name:
        CSharp: R11
        VB: R11
      nameWithType:
        CSharp: CONTEXT64.R11
        VB: CONTEXT64.R11
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.R11
        VB: ERC.Structures.CONTEXT64.R11
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: R11
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2633
      summary: "\nR11\n"
      example: []
      syntax:
        content:
          CSharp: public ulong R11
          VB: Public R11 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.R12
      commentId: F:ERC.Structures.CONTEXT64.R12
      language: CSharp
      name:
        CSharp: R12
        VB: R12
      nameWithType:
        CSharp: CONTEXT64.R12
        VB: CONTEXT64.R12
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.R12
        VB: ERC.Structures.CONTEXT64.R12
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: R12
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2637
      summary: "\nR12\n"
      example: []
      syntax:
        content:
          CSharp: public ulong R12
          VB: Public R12 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.R13
      commentId: F:ERC.Structures.CONTEXT64.R13
      language: CSharp
      name:
        CSharp: R13
        VB: R13
      nameWithType:
        CSharp: CONTEXT64.R13
        VB: CONTEXT64.R13
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.R13
        VB: ERC.Structures.CONTEXT64.R13
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: R13
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2641
      summary: "\nR13\n"
      example: []
      syntax:
        content:
          CSharp: public ulong R13
          VB: Public R13 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.R14
      commentId: F:ERC.Structures.CONTEXT64.R14
      language: CSharp
      name:
        CSharp: R14
        VB: R14
      nameWithType:
        CSharp: CONTEXT64.R14
        VB: CONTEXT64.R14
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.R14
        VB: ERC.Structures.CONTEXT64.R14
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: R14
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2645
      summary: "\nR14\n"
      example: []
      syntax:
        content:
          CSharp: public ulong R14
          VB: Public R14 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.R15
      commentId: F:ERC.Structures.CONTEXT64.R15
      language: CSharp
      name:
        CSharp: R15
        VB: R15
      nameWithType:
        CSharp: CONTEXT64.R15
        VB: CONTEXT64.R15
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.R15
        VB: ERC.Structures.CONTEXT64.R15
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: R15
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2649
      summary: "\nR15\n"
      example: []
      syntax:
        content:
          CSharp: public ulong R15
          VB: Public R15 As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.Rip
      commentId: F:ERC.Structures.CONTEXT64.Rip
      language: CSharp
      name:
        CSharp: Rip
        VB: Rip
      nameWithType:
        CSharp: CONTEXT64.Rip
        VB: CONTEXT64.Rip
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.Rip
        VB: ERC.Structures.CONTEXT64.Rip
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Rip
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2653
      summary: "\nRip\n"
      example: []
      syntax:
        content:
          CSharp: public ulong Rip
          VB: Public Rip As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.DUMMYUNIONNAME
      commentId: F:ERC.Structures.CONTEXT64.DUMMYUNIONNAME
      language: CSharp
      name:
        CSharp: DUMMYUNIONNAME
        VB: DUMMYUNIONNAME
      nameWithType:
        CSharp: CONTEXT64.DUMMYUNIONNAME
        VB: CONTEXT64.DUMMYUNIONNAME
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.DUMMYUNIONNAME
        VB: ERC.Structures.CONTEXT64.DUMMYUNIONNAME
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DUMMYUNIONNAME
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2658
      summary: "\nDUMMYUNIONNAME\n"
      example: []
      syntax:
        content:
          CSharp: public XSAVE_FORMAT64 DUMMYUNIONNAME
          VB: Public DUMMYUNIONNAME As XSAVE_FORMAT64
        return:
          type: ERC.Structures.XSAVE_FORMAT64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.VectorRegister
      commentId: F:ERC.Structures.CONTEXT64.VectorRegister
      language: CSharp
      name:
        CSharp: VectorRegister
        VB: VectorRegister
      nameWithType:
        CSharp: CONTEXT64.VectorRegister
        VB: CONTEXT64.VectorRegister
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.VectorRegister
        VB: ERC.Structures.CONTEXT64.VectorRegister
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VectorRegister
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2664
      summary: "\nVectorRegister\n"
      example: []
      syntax:
        content:
          CSharp: public M128A[] VectorRegister
          VB: Public VectorRegister As M128A()
        return:
          type: ERC.Structures.M128A[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.VectorControl
      commentId: F:ERC.Structures.CONTEXT64.VectorControl
      language: CSharp
      name:
        CSharp: VectorControl
        VB: VectorControl
      nameWithType:
        CSharp: CONTEXT64.VectorControl
        VB: CONTEXT64.VectorControl
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.VectorControl
        VB: ERC.Structures.CONTEXT64.VectorControl
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: VectorControl
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2668
      summary: "\nVectorControl\n"
      example: []
      syntax:
        content:
          CSharp: public ulong VectorControl
          VB: Public VectorControl As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.DebugControl
      commentId: F:ERC.Structures.CONTEXT64.DebugControl
      language: CSharp
      name:
        CSharp: DebugControl
        VB: DebugControl
      nameWithType:
        CSharp: CONTEXT64.DebugControl
        VB: CONTEXT64.DebugControl
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.DebugControl
        VB: ERC.Structures.CONTEXT64.DebugControl
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DebugControl
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2673
      summary: "\nDebugControl\n"
      example: []
      syntax:
        content:
          CSharp: public ulong DebugControl
          VB: Public DebugControl As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.LastBranchToRip
      commentId: F:ERC.Structures.CONTEXT64.LastBranchToRip
      language: CSharp
      name:
        CSharp: LastBranchToRip
        VB: LastBranchToRip
      nameWithType:
        CSharp: CONTEXT64.LastBranchToRip
        VB: CONTEXT64.LastBranchToRip
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.LastBranchToRip
        VB: ERC.Structures.CONTEXT64.LastBranchToRip
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LastBranchToRip
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2677
      summary: "\nLastBranchToRip\n"
      example: []
      syntax:
        content:
          CSharp: public ulong LastBranchToRip
          VB: Public LastBranchToRip As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.LastBranchFromRip
      commentId: F:ERC.Structures.CONTEXT64.LastBranchFromRip
      language: CSharp
      name:
        CSharp: LastBranchFromRip
        VB: LastBranchFromRip
      nameWithType:
        CSharp: CONTEXT64.LastBranchFromRip
        VB: CONTEXT64.LastBranchFromRip
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.LastBranchFromRip
        VB: ERC.Structures.CONTEXT64.LastBranchFromRip
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LastBranchFromRip
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2681
      summary: "\nLastBranchFromRip\n"
      example: []
      syntax:
        content:
          CSharp: public ulong LastBranchFromRip
          VB: Public LastBranchFromRip As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.LastExceptionToRip
      commentId: F:ERC.Structures.CONTEXT64.LastExceptionToRip
      language: CSharp
      name:
        CSharp: LastExceptionToRip
        VB: LastExceptionToRip
      nameWithType:
        CSharp: CONTEXT64.LastExceptionToRip
        VB: CONTEXT64.LastExceptionToRip
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.LastExceptionToRip
        VB: ERC.Structures.CONTEXT64.LastExceptionToRip
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LastExceptionToRip
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2685
      summary: "\nLastExceptionToRip\n"
      example: []
      syntax:
        content:
          CSharp: public ulong LastExceptionToRip
          VB: Public LastExceptionToRip As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.LastExceptionFromRip
      commentId: F:ERC.Structures.CONTEXT64.LastExceptionFromRip
      language: CSharp
      name:
        CSharp: LastExceptionFromRip
        VB: LastExceptionFromRip
      nameWithType:
        CSharp: CONTEXT64.LastExceptionFromRip
        VB: CONTEXT64.LastExceptionFromRip
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.LastExceptionFromRip
        VB: ERC.Structures.CONTEXT64.LastExceptionFromRip
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LastExceptionFromRip
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2689
      summary: "\nLastExceptionFromRip\n"
      example: []
      syntax:
        content:
          CSharp: public ulong LastExceptionFromRip
          VB: Public LastExceptionFromRip As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.CONTEXT64.ToString
      commentId: M:ERC.Structures.CONTEXT64.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: CONTEXT64.ToString()
        VB: CONTEXT64.ToString()
      qualifiedName:
        CSharp: ERC.Structures.CONTEXT64.ToString()
        VB: ERC.Structures.CONTEXT64.ToString()
      type: Method
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ToString
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2695
      summary: "\nOverridden ToString method, returns register values for the current thread.\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: String
      overload: ERC.Structures.CONTEXT64.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ERC.Structures.RegisterInfo
    commentId: T:ERC.Structures.RegisterInfo
    language: CSharp
    name:
      CSharp: RegisterInfo
      VB: RegisterInfo
    nameWithType:
      CSharp: RegisterInfo
      VB: RegisterInfo
    qualifiedName:
      CSharp: ERC.Structures.RegisterInfo
      VB: ERC.Structures.RegisterInfo
    type: Class
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: RegisterInfo
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2724
    summary: "\nRegister information\n"
    example: []
    syntax:
      content:
        CSharp: public class RegisterInfo
        VB: Public Class RegisterInfo
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ERC.Structures.RegisterInfo.Register
      commentId: P:ERC.Structures.RegisterInfo.Register
      language: CSharp
      name:
        CSharp: Register
        VB: Register
      nameWithType:
        CSharp: RegisterInfo.Register
        VB: RegisterInfo.Register
      qualifiedName:
        CSharp: ERC.Structures.RegisterInfo.Register
        VB: ERC.Structures.RegisterInfo.Register
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Register
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2729
      summary: "\nRegister name.\n"
      example: []
      syntax:
        content:
          CSharp: public string Register { get; set; }
          VB: Public Property Register As String
        parameters: []
        return:
          type: System.String
      overload: ERC.Structures.RegisterInfo.Register*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.Structures.RegisterInfo.RegisterValue
      commentId: P:ERC.Structures.RegisterInfo.RegisterValue
      language: CSharp
      name:
        CSharp: RegisterValue
        VB: RegisterValue
      nameWithType:
        CSharp: RegisterInfo.RegisterValue
        VB: RegisterInfo.RegisterValue
      qualifiedName:
        CSharp: ERC.Structures.RegisterInfo.RegisterValue
        VB: ERC.Structures.RegisterInfo.RegisterValue
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RegisterValue
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2733
      summary: "\nRegister value.\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr RegisterValue { get; set; }
          VB: Public Property RegisterValue As IntPtr
        parameters: []
        return:
          type: System.IntPtr
      overload: ERC.Structures.RegisterInfo.RegisterValue*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.Structures.RegisterInfo.RegisterOffset
      commentId: P:ERC.Structures.RegisterInfo.RegisterOffset
      language: CSharp
      name:
        CSharp: RegisterOffset
        VB: RegisterOffset
      nameWithType:
        CSharp: RegisterInfo.RegisterOffset
        VB: RegisterInfo.RegisterOffset
      qualifiedName:
        CSharp: ERC.Structures.RegisterInfo.RegisterOffset
        VB: ERC.Structures.RegisterInfo.RegisterOffset
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RegisterOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2737
      summary: "\nRegister Offset.\n"
      example: []
      syntax:
        content:
          CSharp: public int RegisterOffset { get; set; }
          VB: Public Property RegisterOffset As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ERC.Structures.RegisterInfo.RegisterOffset*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.Structures.RegisterInfo.StringOffset
      commentId: P:ERC.Structures.RegisterInfo.StringOffset
      language: CSharp
      name:
        CSharp: StringOffset
        VB: StringOffset
      nameWithType:
        CSharp: RegisterInfo.StringOffset
        VB: RegisterInfo.StringOffset
      qualifiedName:
        CSharp: ERC.Structures.RegisterInfo.StringOffset
        VB: ERC.Structures.RegisterInfo.StringOffset
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: StringOffset
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2741
      summary: "\nString offset.\n"
      example: []
      syntax:
        content:
          CSharp: public int StringOffset { get; set; }
          VB: Public Property StringOffset As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ERC.Structures.RegisterInfo.StringOffset*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.Structures.RegisterInfo.BufferSize
      commentId: P:ERC.Structures.RegisterInfo.BufferSize
      language: CSharp
      name:
        CSharp: BufferSize
        VB: BufferSize
      nameWithType:
        CSharp: RegisterInfo.BufferSize
        VB: RegisterInfo.BufferSize
      qualifiedName:
        CSharp: ERC.Structures.RegisterInfo.BufferSize
        VB: ERC.Structures.RegisterInfo.BufferSize
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BufferSize
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2745
      summary: "\nBuffer size.\n"
      example: []
      syntax:
        content:
          CSharp: public int BufferSize { get; set; }
          VB: Public Property BufferSize As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ERC.Structures.RegisterInfo.BufferSize*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.Structures.RegisterInfo.ThreadID
      commentId: P:ERC.Structures.RegisterInfo.ThreadID
      language: CSharp
      name:
        CSharp: ThreadID
        VB: ThreadID
      nameWithType:
        CSharp: RegisterInfo.ThreadID
        VB: RegisterInfo.ThreadID
      qualifiedName:
        CSharp: ERC.Structures.RegisterInfo.ThreadID
        VB: ERC.Structures.RegisterInfo.ThreadID
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ThreadID
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2749
      summary: "\nThread ID.\n"
      example: []
      syntax:
        content:
          CSharp: public int ThreadID { get; set; }
          VB: Public Property ThreadID As Integer
        parameters: []
        return:
          type: System.Int32
      overload: ERC.Structures.RegisterInfo.ThreadID*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ERC.Structures.RegisterInfo.overwritten
      commentId: P:ERC.Structures.RegisterInfo.overwritten
      language: CSharp
      name:
        CSharp: overwritten
        VB: overwritten
      nameWithType:
        CSharp: RegisterInfo.overwritten
        VB: RegisterInfo.overwritten
      qualifiedName:
        CSharp: ERC.Structures.RegisterInfo.overwritten
        VB: ERC.Structures.RegisterInfo.overwritten
      type: Property
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: overwritten
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2753
      summary: "\nOverwritten.\n"
      example: []
      syntax:
        content:
          CSharp: public bool overwritten { get; set; }
          VB: Public Property overwritten As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ERC.Structures.RegisterInfo.overwritten*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: ERC.Structures.ThreadBasicInformation
    commentId: T:ERC.Structures.ThreadBasicInformation
    language: CSharp
    name:
      CSharp: ThreadBasicInformation
      VB: ThreadBasicInformation
    nameWithType:
      CSharp: ThreadBasicInformation
      VB: ThreadBasicInformation
    qualifiedName:
      CSharp: ERC.Structures.ThreadBasicInformation
      VB: ERC.Structures.ThreadBasicInformation
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: ThreadBasicInformation
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2764
    summary: "\nThreadBasicInformation\n"
    example: []
    syntax:
      content:
        CSharp: public struct ThreadBasicInformation
        VB: Public Structure ThreadBasicInformation
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.ThreadBasicInformation.ExitStatus
      commentId: F:ERC.Structures.ThreadBasicInformation.ExitStatus
      language: CSharp
      name:
        CSharp: ExitStatus
        VB: ExitStatus
      nameWithType:
        CSharp: ThreadBasicInformation.ExitStatus
        VB: ThreadBasicInformation.ExitStatus
      qualifiedName:
        CSharp: ERC.Structures.ThreadBasicInformation.ExitStatus
        VB: ERC.Structures.ThreadBasicInformation.ExitStatus
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ExitStatus
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2770
      summary: "\nExitStatus\n"
      example: []
      syntax:
        content:
          CSharp: public uint ExitStatus
          VB: Public ExitStatus As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.ThreadBasicInformation.TebBaseAdress
      commentId: F:ERC.Structures.ThreadBasicInformation.TebBaseAdress
      language: CSharp
      name:
        CSharp: TebBaseAdress
        VB: TebBaseAdress
      nameWithType:
        CSharp: ThreadBasicInformation.TebBaseAdress
        VB: ThreadBasicInformation.TebBaseAdress
      qualifiedName:
        CSharp: ERC.Structures.ThreadBasicInformation.TebBaseAdress
        VB: ERC.Structures.ThreadBasicInformation.TebBaseAdress
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TebBaseAdress
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2774
      summary: "\nTebBaseAdress\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr TebBaseAdress
          VB: Public TebBaseAdress As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.ThreadBasicInformation.Identifiers
      commentId: F:ERC.Structures.ThreadBasicInformation.Identifiers
      language: CSharp
      name:
        CSharp: Identifiers
        VB: Identifiers
      nameWithType:
        CSharp: ThreadBasicInformation.Identifiers
        VB: ThreadBasicInformation.Identifiers
      qualifiedName:
        CSharp: ERC.Structures.ThreadBasicInformation.Identifiers
        VB: ERC.Structures.ThreadBasicInformation.Identifiers
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Identifiers
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2778
      summary: "\nIdentifiers\n"
      example: []
      syntax:
        content:
          CSharp: public ClientID Identifiers
          VB: Public Identifiers As ClientID
        return:
          type: ERC.Structures.ClientID
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.ThreadBasicInformation.AffinityMask
      commentId: F:ERC.Structures.ThreadBasicInformation.AffinityMask
      language: CSharp
      name:
        CSharp: AffinityMask
        VB: AffinityMask
      nameWithType:
        CSharp: ThreadBasicInformation.AffinityMask
        VB: ThreadBasicInformation.AffinityMask
      qualifiedName:
        CSharp: ERC.Structures.ThreadBasicInformation.AffinityMask
        VB: ERC.Structures.ThreadBasicInformation.AffinityMask
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: AffinityMask
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2782
      summary: "\nAffinityMask\n"
      example: []
      syntax:
        content:
          CSharp: public uint AffinityMask
          VB: Public AffinityMask As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.ThreadBasicInformation.Priority
      commentId: F:ERC.Structures.ThreadBasicInformation.Priority
      language: CSharp
      name:
        CSharp: Priority
        VB: Priority
      nameWithType:
        CSharp: ThreadBasicInformation.Priority
        VB: ThreadBasicInformation.Priority
      qualifiedName:
        CSharp: ERC.Structures.ThreadBasicInformation.Priority
        VB: ERC.Structures.ThreadBasicInformation.Priority
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Priority
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2786
      summary: "\nPriority\n"
      example: []
      syntax:
        content:
          CSharp: public uint Priority
          VB: Public Priority As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.ThreadBasicInformation.BasePriority
      commentId: F:ERC.Structures.ThreadBasicInformation.BasePriority
      language: CSharp
      name:
        CSharp: BasePriority
        VB: BasePriority
      nameWithType:
        CSharp: ThreadBasicInformation.BasePriority
        VB: ThreadBasicInformation.BasePriority
      qualifiedName:
        CSharp: ERC.Structures.ThreadBasicInformation.BasePriority
        VB: ERC.Structures.ThreadBasicInformation.BasePriority
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BasePriority
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2790
      summary: "\nBasePriority\n"
      example: []
      syntax:
        content:
          CSharp: public uint BasePriority
          VB: Public BasePriority As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.ClientID
    commentId: T:ERC.Structures.ClientID
    language: CSharp
    name:
      CSharp: ClientID
      VB: ClientID
    nameWithType:
      CSharp: ClientID
      VB: ClientID
    qualifiedName:
      CSharp: ERC.Structures.ClientID
      VB: ERC.Structures.ClientID
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: ClientID
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2796
    summary: "\nClientID\n"
    example: []
    syntax:
      content:
        CSharp: public struct ClientID
        VB: Public Structure ClientID
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.ClientID.ProcessId
      commentId: F:ERC.Structures.ClientID.ProcessId
      language: CSharp
      name:
        CSharp: ProcessId
        VB: ProcessId
      nameWithType:
        CSharp: ClientID.ProcessId
        VB: ClientID.ProcessId
      qualifiedName:
        CSharp: ERC.Structures.ClientID.ProcessId
        VB: ERC.Structures.ClientID.ProcessId
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ProcessId
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2802
      summary: "\nProcessID\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ProcessId
          VB: Public ProcessId As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.ClientID.ThreadId
      commentId: F:ERC.Structures.ClientID.ThreadId
      language: CSharp
      name:
        CSharp: ThreadId
        VB: ThreadId
      nameWithType:
        CSharp: ClientID.ThreadId
        VB: ClientID.ThreadId
      qualifiedName:
        CSharp: ERC.Structures.ClientID.ThreadId
        VB: ERC.Structures.ClientID.ThreadId
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ThreadId
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2806
      summary: "\nThreadID\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ThreadId
          VB: Public ThreadId As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ERC.Structures.TEB
    commentId: T:ERC.Structures.TEB
    language: CSharp
    name:
      CSharp: TEB
      VB: TEB
    nameWithType:
      CSharp: TEB
      VB: TEB
    qualifiedName:
      CSharp: ERC.Structures.TEB
      VB: ERC.Structures.TEB
    type: Struct
    assemblies:
    - ERC.Net
    namespace: ERC.Structures
    source:
      id: TEB
      path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
      startLine: 2812
    summary: "\nThread Environment Block.\n"
    example: []
    syntax:
      content:
        CSharp: public struct TEB
        VB: Public Structure TEB
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: ERC.Structures.TEB.CurrentSehFrame
      commentId: F:ERC.Structures.TEB.CurrentSehFrame
      language: CSharp
      name:
        CSharp: CurrentSehFrame
        VB: CurrentSehFrame
      nameWithType:
        CSharp: TEB.CurrentSehFrame
        VB: TEB.CurrentSehFrame
      qualifiedName:
        CSharp: ERC.Structures.TEB.CurrentSehFrame
        VB: ERC.Structures.TEB.CurrentSehFrame
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CurrentSehFrame
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2818
      summary: "\nCurrentSehFrame\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr CurrentSehFrame
          VB: Public CurrentSehFrame As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.TopOfStack
      commentId: F:ERC.Structures.TEB.TopOfStack
      language: CSharp
      name:
        CSharp: TopOfStack
        VB: TopOfStack
      nameWithType:
        CSharp: TEB.TopOfStack
        VB: TEB.TopOfStack
      qualifiedName:
        CSharp: ERC.Structures.TEB.TopOfStack
        VB: ERC.Structures.TEB.TopOfStack
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TopOfStack
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2822
      summary: "\nTopOfStack\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr TopOfStack
          VB: Public TopOfStack As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.BottomOfStack
      commentId: F:ERC.Structures.TEB.BottomOfStack
      language: CSharp
      name:
        CSharp: BottomOfStack
        VB: BottomOfStack
      nameWithType:
        CSharp: TEB.BottomOfStack
        VB: TEB.BottomOfStack
      qualifiedName:
        CSharp: ERC.Structures.TEB.BottomOfStack
        VB: ERC.Structures.TEB.BottomOfStack
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: BottomOfStack
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2826
      summary: "\nBottomOfStack\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr BottomOfStack
          VB: Public BottomOfStack As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.SubSystemTeb
      commentId: F:ERC.Structures.TEB.SubSystemTeb
      language: CSharp
      name:
        CSharp: SubSystemTeb
        VB: SubSystemTeb
      nameWithType:
        CSharp: TEB.SubSystemTeb
        VB: TEB.SubSystemTeb
      qualifiedName:
        CSharp: ERC.Structures.TEB.SubSystemTeb
        VB: ERC.Structures.TEB.SubSystemTeb
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SubSystemTeb
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2830
      summary: "\nSubSystemTeb\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr SubSystemTeb
          VB: Public SubSystemTeb As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.FiberData
      commentId: F:ERC.Structures.TEB.FiberData
      language: CSharp
      name:
        CSharp: FiberData
        VB: FiberData
      nameWithType:
        CSharp: TEB.FiberData
        VB: TEB.FiberData
      qualifiedName:
        CSharp: ERC.Structures.TEB.FiberData
        VB: ERC.Structures.TEB.FiberData
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FiberData
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2834
      summary: "\nFiberData\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr FiberData
          VB: Public FiberData As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.ArbitraryDataSlot
      commentId: F:ERC.Structures.TEB.ArbitraryDataSlot
      language: CSharp
      name:
        CSharp: ArbitraryDataSlot
        VB: ArbitraryDataSlot
      nameWithType:
        CSharp: TEB.ArbitraryDataSlot
        VB: TEB.ArbitraryDataSlot
      qualifiedName:
        CSharp: ERC.Structures.TEB.ArbitraryDataSlot
        VB: ERC.Structures.TEB.ArbitraryDataSlot
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ArbitraryDataSlot
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2838
      summary: "\nArbitraryDataSlot\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ArbitraryDataSlot
          VB: Public ArbitraryDataSlot As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.Teb
      commentId: F:ERC.Structures.TEB.Teb
      language: CSharp
      name:
        CSharp: Teb
        VB: Teb
      nameWithType:
        CSharp: TEB.Teb
        VB: TEB.Teb
      qualifiedName:
        CSharp: ERC.Structures.TEB.Teb
        VB: ERC.Structures.TEB.Teb
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Teb
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2842
      summary: "\nTeb\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Teb
          VB: Public Teb As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.EnvironmentPointer
      commentId: F:ERC.Structures.TEB.EnvironmentPointer
      language: CSharp
      name:
        CSharp: EnvironmentPointer
        VB: EnvironmentPointer
      nameWithType:
        CSharp: TEB.EnvironmentPointer
        VB: TEB.EnvironmentPointer
      qualifiedName:
        CSharp: ERC.Structures.TEB.EnvironmentPointer
        VB: ERC.Structures.TEB.EnvironmentPointer
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: EnvironmentPointer
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2846
      summary: "\nEnvironmentPointer\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr EnvironmentPointer
          VB: Public EnvironmentPointer As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.Identifiers
      commentId: F:ERC.Structures.TEB.Identifiers
      language: CSharp
      name:
        CSharp: Identifiers
        VB: Identifiers
      nameWithType:
        CSharp: TEB.Identifiers
        VB: TEB.Identifiers
      qualifiedName:
        CSharp: ERC.Structures.TEB.Identifiers
        VB: ERC.Structures.TEB.Identifiers
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Identifiers
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2850
      summary: "\nIdentifiers\n"
      example: []
      syntax:
        content:
          CSharp: public ClientID Identifiers
          VB: Public Identifiers As ClientID
        return:
          type: ERC.Structures.ClientID
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.RpcHandle
      commentId: F:ERC.Structures.TEB.RpcHandle
      language: CSharp
      name:
        CSharp: RpcHandle
        VB: RpcHandle
      nameWithType:
        CSharp: TEB.RpcHandle
        VB: TEB.RpcHandle
      qualifiedName:
        CSharp: ERC.Structures.TEB.RpcHandle
        VB: ERC.Structures.TEB.RpcHandle
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RpcHandle
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2854
      summary: "\nRpcHandle\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr RpcHandle
          VB: Public RpcHandle As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.Tls
      commentId: F:ERC.Structures.TEB.Tls
      language: CSharp
      name:
        CSharp: Tls
        VB: Tls
      nameWithType:
        CSharp: TEB.Tls
        VB: TEB.Tls
      qualifiedName:
        CSharp: ERC.Structures.TEB.Tls
        VB: ERC.Structures.TEB.Tls
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Tls
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2858
      summary: "\nTls\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Tls
          VB: Public Tls As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.Peb
      commentId: F:ERC.Structures.TEB.Peb
      language: CSharp
      name:
        CSharp: Peb
        VB: Peb
      nameWithType:
        CSharp: TEB.Peb
        VB: TEB.Peb
      qualifiedName:
        CSharp: ERC.Structures.TEB.Peb
        VB: ERC.Structures.TEB.Peb
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Peb
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2862
      summary: "\nPeb\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Peb
          VB: Public Peb As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.LastErrorNumber
      commentId: F:ERC.Structures.TEB.LastErrorNumber
      language: CSharp
      name:
        CSharp: LastErrorNumber
        VB: LastErrorNumber
      nameWithType:
        CSharp: TEB.LastErrorNumber
        VB: TEB.LastErrorNumber
      qualifiedName:
        CSharp: ERC.Structures.TEB.LastErrorNumber
        VB: ERC.Structures.TEB.LastErrorNumber
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LastErrorNumber
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2866
      summary: "\nLastErrorNumber\n"
      example: []
      syntax:
        content:
          CSharp: public int LastErrorNumber
          VB: Public LastErrorNumber As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.CriticalSectionsCount
      commentId: F:ERC.Structures.TEB.CriticalSectionsCount
      language: CSharp
      name:
        CSharp: CriticalSectionsCount
        VB: CriticalSectionsCount
      nameWithType:
        CSharp: TEB.CriticalSectionsCount
        VB: TEB.CriticalSectionsCount
      qualifiedName:
        CSharp: ERC.Structures.TEB.CriticalSectionsCount
        VB: ERC.Structures.TEB.CriticalSectionsCount
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CriticalSectionsCount
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2870
      summary: "\nCriticalSectionsCount\n"
      example: []
      syntax:
        content:
          CSharp: public int CriticalSectionsCount
          VB: Public CriticalSectionsCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.CsrClientThread
      commentId: F:ERC.Structures.TEB.CsrClientThread
      language: CSharp
      name:
        CSharp: CsrClientThread
        VB: CsrClientThread
      nameWithType:
        CSharp: TEB.CsrClientThread
        VB: TEB.CsrClientThread
      qualifiedName:
        CSharp: ERC.Structures.TEB.CsrClientThread
        VB: ERC.Structures.TEB.CsrClientThread
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CsrClientThread
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2874
      summary: "\nCsrClientThread\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr CsrClientThread
          VB: Public CsrClientThread As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.Win32ThreadInfo
      commentId: F:ERC.Structures.TEB.Win32ThreadInfo
      language: CSharp
      name:
        CSharp: Win32ThreadInfo
        VB: Win32ThreadInfo
      nameWithType:
        CSharp: TEB.Win32ThreadInfo
        VB: TEB.Win32ThreadInfo
      qualifiedName:
        CSharp: ERC.Structures.TEB.Win32ThreadInfo
        VB: ERC.Structures.TEB.Win32ThreadInfo
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Win32ThreadInfo
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2878
      summary: "\nWin32ThreadInfo\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Win32ThreadInfo
          VB: Public Win32ThreadInfo As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.Win32ClientInfo
      commentId: F:ERC.Structures.TEB.Win32ClientInfo
      language: CSharp
      name:
        CSharp: Win32ClientInfo
        VB: Win32ClientInfo
      nameWithType:
        CSharp: TEB.Win32ClientInfo
        VB: TEB.Win32ClientInfo
      qualifiedName:
        CSharp: ERC.Structures.TEB.Win32ClientInfo
        VB: ERC.Structures.TEB.Win32ClientInfo
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Win32ClientInfo
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2882
      summary: "\nWin32ClientInfo\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] Win32ClientInfo
          VB: Public Win32ClientInfo As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.WoW64Reserved
      commentId: F:ERC.Structures.TEB.WoW64Reserved
      language: CSharp
      name:
        CSharp: WoW64Reserved
        VB: WoW64Reserved
      nameWithType:
        CSharp: TEB.WoW64Reserved
        VB: TEB.WoW64Reserved
      qualifiedName:
        CSharp: ERC.Structures.TEB.WoW64Reserved
        VB: ERC.Structures.TEB.WoW64Reserved
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: WoW64Reserved
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2886
      summary: "\nWoW64Reserved\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr WoW64Reserved
          VB: Public WoW64Reserved As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.CurrentLocale
      commentId: F:ERC.Structures.TEB.CurrentLocale
      language: CSharp
      name:
        CSharp: CurrentLocale
        VB: CurrentLocale
      nameWithType:
        CSharp: TEB.CurrentLocale
        VB: TEB.CurrentLocale
      qualifiedName:
        CSharp: ERC.Structures.TEB.CurrentLocale
        VB: ERC.Structures.TEB.CurrentLocale
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: CurrentLocale
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2890
      summary: "\nCurrentLocale\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr CurrentLocale
          VB: Public CurrentLocale As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.FpSoftwareStatusRegister
      commentId: F:ERC.Structures.TEB.FpSoftwareStatusRegister
      language: CSharp
      name:
        CSharp: FpSoftwareStatusRegister
        VB: FpSoftwareStatusRegister
      nameWithType:
        CSharp: TEB.FpSoftwareStatusRegister
        VB: TEB.FpSoftwareStatusRegister
      qualifiedName:
        CSharp: ERC.Structures.TEB.FpSoftwareStatusRegister
        VB: ERC.Structures.TEB.FpSoftwareStatusRegister
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: FpSoftwareStatusRegister
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2894
      summary: "\nFpSoftwareStatusRegister\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr FpSoftwareStatusRegister
          VB: Public FpSoftwareStatusRegister As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.SystemReserved1
      commentId: F:ERC.Structures.TEB.SystemReserved1
      language: CSharp
      name:
        CSharp: SystemReserved1
        VB: SystemReserved1
      nameWithType:
        CSharp: TEB.SystemReserved1
        VB: TEB.SystemReserved1
      qualifiedName:
        CSharp: ERC.Structures.TEB.SystemReserved1
        VB: ERC.Structures.TEB.SystemReserved1
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SystemReserved1
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2898
      summary: "\nSystemReserved1\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] SystemReserved1
          VB: Public SystemReserved1 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.ExceptionCode
      commentId: F:ERC.Structures.TEB.ExceptionCode
      language: CSharp
      name:
        CSharp: ExceptionCode
        VB: ExceptionCode
      nameWithType:
        CSharp: TEB.ExceptionCode
        VB: TEB.ExceptionCode
      qualifiedName:
        CSharp: ERC.Structures.TEB.ExceptionCode
        VB: ERC.Structures.TEB.ExceptionCode
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ExceptionCode
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2902
      summary: "\nExceptionCode\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ExceptionCode
          VB: Public ExceptionCode As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.ActivationContextStack
      commentId: F:ERC.Structures.TEB.ActivationContextStack
      language: CSharp
      name:
        CSharp: ActivationContextStack
        VB: ActivationContextStack
      nameWithType:
        CSharp: TEB.ActivationContextStack
        VB: TEB.ActivationContextStack
      qualifiedName:
        CSharp: ERC.Structures.TEB.ActivationContextStack
        VB: ERC.Structures.TEB.ActivationContextStack
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ActivationContextStack
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2906
      summary: "\nActivationContextStack\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] ActivationContextStack
          VB: Public ActivationContextStack As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.SpareBytes
      commentId: F:ERC.Structures.TEB.SpareBytes
      language: CSharp
      name:
        CSharp: SpareBytes
        VB: SpareBytes
      nameWithType:
        CSharp: TEB.SpareBytes
        VB: TEB.SpareBytes
      qualifiedName:
        CSharp: ERC.Structures.TEB.SpareBytes
        VB: ERC.Structures.TEB.SpareBytes
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SpareBytes
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2910
      summary: "\nSpareBytes\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] SpareBytes
          VB: Public SpareBytes As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.SystemReserved2
      commentId: F:ERC.Structures.TEB.SystemReserved2
      language: CSharp
      name:
        CSharp: SystemReserved2
        VB: SystemReserved2
      nameWithType:
        CSharp: TEB.SystemReserved2
        VB: TEB.SystemReserved2
      qualifiedName:
        CSharp: ERC.Structures.TEB.SystemReserved2
        VB: ERC.Structures.TEB.SystemReserved2
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: SystemReserved2
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2914
      summary: "\nSystemReserved2\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] SystemReserved2
          VB: Public SystemReserved2 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GdiTebBatch
      commentId: F:ERC.Structures.TEB.GdiTebBatch
      language: CSharp
      name:
        CSharp: GdiTebBatch
        VB: GdiTebBatch
      nameWithType:
        CSharp: TEB.GdiTebBatch
        VB: TEB.GdiTebBatch
      qualifiedName:
        CSharp: ERC.Structures.TEB.GdiTebBatch
        VB: ERC.Structures.TEB.GdiTebBatch
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GdiTebBatch
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2918
      summary: "\nGdiTebBatch\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] GdiTebBatch
          VB: Public GdiTebBatch As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GdiRegion
      commentId: F:ERC.Structures.TEB.GdiRegion
      language: CSharp
      name:
        CSharp: GdiRegion
        VB: GdiRegion
      nameWithType:
        CSharp: TEB.GdiRegion
        VB: TEB.GdiRegion
      qualifiedName:
        CSharp: ERC.Structures.TEB.GdiRegion
        VB: ERC.Structures.TEB.GdiRegion
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GdiRegion
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2922
      summary: "\nGdiRegion\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr GdiRegion
          VB: Public GdiRegion As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GdiPen
      commentId: F:ERC.Structures.TEB.GdiPen
      language: CSharp
      name:
        CSharp: GdiPen
        VB: GdiPen
      nameWithType:
        CSharp: TEB.GdiPen
        VB: TEB.GdiPen
      qualifiedName:
        CSharp: ERC.Structures.TEB.GdiPen
        VB: ERC.Structures.TEB.GdiPen
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GdiPen
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2926
      summary: "\nGdiPen\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr GdiPen
          VB: Public GdiPen As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GdiBrush
      commentId: F:ERC.Structures.TEB.GdiBrush
      language: CSharp
      name:
        CSharp: GdiBrush
        VB: GdiBrush
      nameWithType:
        CSharp: TEB.GdiBrush
        VB: TEB.GdiBrush
      qualifiedName:
        CSharp: ERC.Structures.TEB.GdiBrush
        VB: ERC.Structures.TEB.GdiBrush
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GdiBrush
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2930
      summary: "\nGdiBrush\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr GdiBrush
          VB: Public GdiBrush As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.RealProcessId
      commentId: F:ERC.Structures.TEB.RealProcessId
      language: CSharp
      name:
        CSharp: RealProcessId
        VB: RealProcessId
      nameWithType:
        CSharp: TEB.RealProcessId
        VB: TEB.RealProcessId
      qualifiedName:
        CSharp: ERC.Structures.TEB.RealProcessId
        VB: ERC.Structures.TEB.RealProcessId
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RealProcessId
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2934
      summary: "\nRealProcessId\n"
      example: []
      syntax:
        content:
          CSharp: public int RealProcessId
          VB: Public RealProcessId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.RealThreadId
      commentId: F:ERC.Structures.TEB.RealThreadId
      language: CSharp
      name:
        CSharp: RealThreadId
        VB: RealThreadId
      nameWithType:
        CSharp: TEB.RealThreadId
        VB: TEB.RealThreadId
      qualifiedName:
        CSharp: ERC.Structures.TEB.RealThreadId
        VB: ERC.Structures.TEB.RealThreadId
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RealThreadId
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2938
      summary: "\nRealThreadId\n"
      example: []
      syntax:
        content:
          CSharp: public int RealThreadId
          VB: Public RealThreadId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GdiCachedProcessHandle
      commentId: F:ERC.Structures.TEB.GdiCachedProcessHandle
      language: CSharp
      name:
        CSharp: GdiCachedProcessHandle
        VB: GdiCachedProcessHandle
      nameWithType:
        CSharp: TEB.GdiCachedProcessHandle
        VB: TEB.GdiCachedProcessHandle
      qualifiedName:
        CSharp: ERC.Structures.TEB.GdiCachedProcessHandle
        VB: ERC.Structures.TEB.GdiCachedProcessHandle
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GdiCachedProcessHandle
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2942
      summary: "\nGdiCachedProcessHandle\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr GdiCachedProcessHandle
          VB: Public GdiCachedProcessHandle As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GdiClientProcessId
      commentId: F:ERC.Structures.TEB.GdiClientProcessId
      language: CSharp
      name:
        CSharp: GdiClientProcessId
        VB: GdiClientProcessId
      nameWithType:
        CSharp: TEB.GdiClientProcessId
        VB: TEB.GdiClientProcessId
      qualifiedName:
        CSharp: ERC.Structures.TEB.GdiClientProcessId
        VB: ERC.Structures.TEB.GdiClientProcessId
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GdiClientProcessId
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2946
      summary: "\nGdiClientProcessId\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr GdiClientProcessId
          VB: Public GdiClientProcessId As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GdiClientThreadId
      commentId: F:ERC.Structures.TEB.GdiClientThreadId
      language: CSharp
      name:
        CSharp: GdiClientThreadId
        VB: GdiClientThreadId
      nameWithType:
        CSharp: TEB.GdiClientThreadId
        VB: TEB.GdiClientThreadId
      qualifiedName:
        CSharp: ERC.Structures.TEB.GdiClientThreadId
        VB: ERC.Structures.TEB.GdiClientThreadId
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GdiClientThreadId
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2950
      summary: "\nGdiClientThreadId\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr GdiClientThreadId
          VB: Public GdiClientThreadId As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GdiThreadLocalInfo
      commentId: F:ERC.Structures.TEB.GdiThreadLocalInfo
      language: CSharp
      name:
        CSharp: GdiThreadLocalInfo
        VB: GdiThreadLocalInfo
      nameWithType:
        CSharp: TEB.GdiThreadLocalInfo
        VB: TEB.GdiThreadLocalInfo
      qualifiedName:
        CSharp: ERC.Structures.TEB.GdiThreadLocalInfo
        VB: ERC.Structures.TEB.GdiThreadLocalInfo
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GdiThreadLocalInfo
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2954
      summary: "\nGdiThreadLocalInfo\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr GdiThreadLocalInfo
          VB: Public GdiThreadLocalInfo As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.UserReserved1
      commentId: F:ERC.Structures.TEB.UserReserved1
      language: CSharp
      name:
        CSharp: UserReserved1
        VB: UserReserved1
      nameWithType:
        CSharp: TEB.UserReserved1
        VB: TEB.UserReserved1
      qualifiedName:
        CSharp: ERC.Structures.TEB.UserReserved1
        VB: ERC.Structures.TEB.UserReserved1
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: UserReserved1
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2958
      summary: "\nUserReserved1\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] UserReserved1
          VB: Public UserReserved1 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.GlReserved1
      commentId: F:ERC.Structures.TEB.GlReserved1
      language: CSharp
      name:
        CSharp: GlReserved1
        VB: GlReserved1
      nameWithType:
        CSharp: TEB.GlReserved1
        VB: TEB.GlReserved1
      qualifiedName:
        CSharp: ERC.Structures.TEB.GlReserved1
        VB: ERC.Structures.TEB.GlReserved1
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: GlReserved1
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2962
      summary: "\nGlReserved1\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] GlReserved1
          VB: Public GlReserved1 As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.LastStatusValue
      commentId: F:ERC.Structures.TEB.LastStatusValue
      language: CSharp
      name:
        CSharp: LastStatusValue
        VB: LastStatusValue
      nameWithType:
        CSharp: TEB.LastStatusValue
        VB: TEB.LastStatusValue
      qualifiedName:
        CSharp: ERC.Structures.TEB.LastStatusValue
        VB: ERC.Structures.TEB.LastStatusValue
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: LastStatusValue
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2966
      summary: "\nLastStatusValue\n"
      example: []
      syntax:
        content:
          CSharp: public int LastStatusValue
          VB: Public LastStatusValue As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.StaticUnicodeString
      commentId: F:ERC.Structures.TEB.StaticUnicodeString
      language: CSharp
      name:
        CSharp: StaticUnicodeString
        VB: StaticUnicodeString
      nameWithType:
        CSharp: TEB.StaticUnicodeString
        VB: TEB.StaticUnicodeString
      qualifiedName:
        CSharp: ERC.Structures.TEB.StaticUnicodeString
        VB: ERC.Structures.TEB.StaticUnicodeString
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: StaticUnicodeString
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2970
      summary: "\nStaticUnicodeString\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] StaticUnicodeString
          VB: Public StaticUnicodeString As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.DeallocationStack
      commentId: F:ERC.Structures.TEB.DeallocationStack
      language: CSharp
      name:
        CSharp: DeallocationStack
        VB: DeallocationStack
      nameWithType:
        CSharp: TEB.DeallocationStack
        VB: TEB.DeallocationStack
      qualifiedName:
        CSharp: ERC.Structures.TEB.DeallocationStack
        VB: ERC.Structures.TEB.DeallocationStack
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: DeallocationStack
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2974
      summary: "\nDeallocationStack\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr DeallocationStack
          VB: Public DeallocationStack As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.TlsSlots
      commentId: F:ERC.Structures.TEB.TlsSlots
      language: CSharp
      name:
        CSharp: TlsSlots
        VB: TlsSlots
      nameWithType:
        CSharp: TEB.TlsSlots
        VB: TEB.TlsSlots
      qualifiedName:
        CSharp: ERC.Structures.TEB.TlsSlots
        VB: ERC.Structures.TEB.TlsSlots
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TlsSlots
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2978
      summary: "\nTlsSlots\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] TlsSlots
          VB: Public TlsSlots As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.TlsLinks
      commentId: F:ERC.Structures.TEB.TlsLinks
      language: CSharp
      name:
        CSharp: TlsLinks
        VB: TlsLinks
      nameWithType:
        CSharp: TEB.TlsLinks
        VB: TEB.TlsLinks
      qualifiedName:
        CSharp: ERC.Structures.TEB.TlsLinks
        VB: ERC.Structures.TEB.TlsLinks
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: TlsLinks
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2982
      summary: "\nTlsLinks\n"
      example: []
      syntax:
        content:
          CSharp: public long TlsLinks
          VB: Public TlsLinks As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.Vdm
      commentId: F:ERC.Structures.TEB.Vdm
      language: CSharp
      name:
        CSharp: Vdm
        VB: Vdm
      nameWithType:
        CSharp: TEB.Vdm
        VB: TEB.Vdm
      qualifiedName:
        CSharp: ERC.Structures.TEB.Vdm
        VB: ERC.Structures.TEB.Vdm
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: Vdm
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2986
      summary: "\nVdm\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr Vdm
          VB: Public Vdm As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.RpcReserved
      commentId: F:ERC.Structures.TEB.RpcReserved
      language: CSharp
      name:
        CSharp: RpcReserved
        VB: RpcReserved
      nameWithType:
        CSharp: TEB.RpcReserved
        VB: TEB.RpcReserved
      qualifiedName:
        CSharp: ERC.Structures.TEB.RpcReserved
        VB: ERC.Structures.TEB.RpcReserved
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: RpcReserved
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2990
      summary: "\nRpcReserved\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr RpcReserved
          VB: Public RpcReserved As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ERC.Structures.TEB.ThreadErrorMode
      commentId: F:ERC.Structures.TEB.ThreadErrorMode
      language: CSharp
      name:
        CSharp: ThreadErrorMode
        VB: ThreadErrorMode
      nameWithType:
        CSharp: TEB.ThreadErrorMode
        VB: TEB.ThreadErrorMode
      qualifiedName:
        CSharp: ERC.Structures.TEB.ThreadErrorMode
        VB: ERC.Structures.TEB.ThreadErrorMode
      type: Field
      assemblies:
      - ERC.Net
      namespace: ERC.Structures
      source:
        id: ThreadErrorMode
        path: C:\Users\tester\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
        startLine: 2994
      summary: "\nThreadErrorMode\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr ThreadErrorMode
          VB: Public ThreadErrorMode As IntPtr
        return:
          type: System.IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  ERC.DisplayOutput.WriteToFile*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.WriteToFile*
        name: WriteToFile
        nameWithType: DisplayOutput.WriteToFile
        qualifiedName: ERC.DisplayOutput.WriteToFile
      VB:
      - id: ERC.DisplayOutput.WriteToFile*
        name: WriteToFile
        nameWithType: DisplayOutput.WriteToFile
        qualifiedName: ERC.DisplayOutput.WriteToFile
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.WriteToFile
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  ERC:
    name:
      CSharp:
      - name: ERC
        nameWithType: ERC
        qualifiedName: ERC
      VB:
      - name: ERC
        nameWithType: ERC
        qualifiedName: ERC
    isDefinition: true
    commentId: N:ERC
  ERC.ErcCore:
    name:
      CSharp:
      - id: ERC.ErcCore
        name: ErcCore
        nameWithType: ErcCore
        qualifiedName: ERC.ErcCore
      VB:
      - id: ERC.ErcCore
        name: ErcCore
        nameWithType: ErcCore
        qualifiedName: ERC.ErcCore
    isDefinition: true
    parent: ERC
    commentId: T:ERC.ErcCore
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  ERC.DisplayOutput.GeneratePattern*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.GeneratePattern*
        name: GeneratePattern
        nameWithType: DisplayOutput.GeneratePattern
        qualifiedName: ERC.DisplayOutput.GeneratePattern
      VB:
      - id: ERC.DisplayOutput.GeneratePattern*
        name: GeneratePattern
        nameWithType: DisplayOutput.GeneratePattern
        qualifiedName: ERC.DisplayOutput.GeneratePattern
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.GeneratePattern
  ERC.DisplayOutput.ListLocalProcesses*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.ListLocalProcesses*
        name: ListLocalProcesses
        nameWithType: DisplayOutput.ListLocalProcesses
        qualifiedName: ERC.DisplayOutput.ListLocalProcesses
      VB:
      - id: ERC.DisplayOutput.ListLocalProcesses*
        name: ListLocalProcesses
        nameWithType: DisplayOutput.ListLocalProcesses
        qualifiedName: ERC.DisplayOutput.ListLocalProcesses
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.ListLocalProcesses
  ERC.DisplayOutput.ListRemoteProcesses*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.ListRemoteProcesses*
        name: ListRemoteProcesses
        nameWithType: DisplayOutput.ListRemoteProcesses
        qualifiedName: ERC.DisplayOutput.ListRemoteProcesses
      VB:
      - id: ERC.DisplayOutput.ListRemoteProcesses*
        name: ListRemoteProcesses
        nameWithType: DisplayOutput.ListRemoteProcesses
        qualifiedName: ERC.DisplayOutput.ListRemoteProcesses
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.ListRemoteProcesses
  ERC.ProcessInfo:
    name:
      CSharp:
      - id: ERC.ProcessInfo
        name: ProcessInfo
        nameWithType: ProcessInfo
        qualifiedName: ERC.ProcessInfo
      VB:
      - id: ERC.ProcessInfo
        name: ProcessInfo
        nameWithType: ProcessInfo
        qualifiedName: ERC.ProcessInfo
    isDefinition: true
    parent: ERC
    commentId: T:ERC.ProcessInfo
  ERC.DisplayOutput.DisplayProcessInfo*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.DisplayProcessInfo*
        name: DisplayProcessInfo
        nameWithType: DisplayOutput.DisplayProcessInfo
        qualifiedName: ERC.DisplayOutput.DisplayProcessInfo
      VB:
      - id: ERC.DisplayOutput.DisplayProcessInfo*
        name: DisplayProcessInfo
        nameWithType: DisplayOutput.DisplayProcessInfo
        qualifiedName: ERC.DisplayOutput.DisplayProcessInfo
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.DisplayProcessInfo
  ERC.DisplayOutput.DisplayThreadInfo*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.DisplayThreadInfo*
        name: DisplayThreadInfo
        nameWithType: DisplayOutput.DisplayThreadInfo
        qualifiedName: ERC.DisplayOutput.DisplayThreadInfo
      VB:
      - id: ERC.DisplayOutput.DisplayThreadInfo*
        name: DisplayThreadInfo
        nameWithType: DisplayOutput.DisplayThreadInfo
        qualifiedName: ERC.DisplayOutput.DisplayThreadInfo
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.DisplayThreadInfo
  ERC.DisplayOutput.GenerateModuleInfoTable*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.GenerateModuleInfoTable*
        name: GenerateModuleInfoTable
        nameWithType: DisplayOutput.GenerateModuleInfoTable
        qualifiedName: ERC.DisplayOutput.GenerateModuleInfoTable
      VB:
      - id: ERC.DisplayOutput.GenerateModuleInfoTable*
        name: GenerateModuleInfoTable
        nameWithType: DisplayOutput.GenerateModuleInfoTable
        qualifiedName: ERC.DisplayOutput.GenerateModuleInfoTable
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.GenerateModuleInfoTable
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ERC.DisplayOutput.SearchMemory*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.SearchMemory*
        name: SearchMemory
        nameWithType: DisplayOutput.SearchMemory
        qualifiedName: ERC.DisplayOutput.SearchMemory
      VB:
      - id: ERC.DisplayOutput.SearchMemory*
        name: SearchMemory
        nameWithType: DisplayOutput.SearchMemory
        qualifiedName: ERC.DisplayOutput.SearchMemory
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.SearchMemory
  ERC.DisplayOutput.GetSEHJumps*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.GetSEHJumps*
        name: GetSEHJumps
        nameWithType: DisplayOutput.GetSEHJumps
        qualifiedName: ERC.DisplayOutput.GetSEHJumps
      VB:
      - id: ERC.DisplayOutput.GetSEHJumps*
        name: GetSEHJumps
        nameWithType: DisplayOutput.GetSEHJumps
        qualifiedName: ERC.DisplayOutput.GetSEHJumps
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.GetSEHJumps
  ERC.DisplayOutput.GenerateByteArray*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.GenerateByteArray*
        name: GenerateByteArray
        nameWithType: DisplayOutput.GenerateByteArray
        qualifiedName: ERC.DisplayOutput.GenerateByteArray
      VB:
      - id: ERC.DisplayOutput.GenerateByteArray*
        name: GenerateByteArray
        nameWithType: DisplayOutput.GenerateByteArray
        qualifiedName: ERC.DisplayOutput.GenerateByteArray
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.GenerateByteArray
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.IntPtr:
    name:
      CSharp:
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      VB:
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IntPtr
  ERC.DisplayOutput.CompareByteArrayToMemoryRegion*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.CompareByteArrayToMemoryRegion*
        name: CompareByteArrayToMemoryRegion
        nameWithType: DisplayOutput.CompareByteArrayToMemoryRegion
        qualifiedName: ERC.DisplayOutput.CompareByteArrayToMemoryRegion
      VB:
      - id: ERC.DisplayOutput.CompareByteArrayToMemoryRegion*
        name: CompareByteArrayToMemoryRegion
        nameWithType: DisplayOutput.CompareByteArrayToMemoryRegion
        qualifiedName: ERC.DisplayOutput.CompareByteArrayToMemoryRegion
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.CompareByteArrayToMemoryRegion
  ERC.DisplayOutput.GenerateEggHunters*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.GenerateEggHunters*
        name: GenerateEggHunters
        nameWithType: DisplayOutput.GenerateEggHunters
        qualifiedName: ERC.DisplayOutput.GenerateEggHunters
      VB:
      - id: ERC.DisplayOutput.GenerateEggHunters*
        name: GenerateEggHunters
        nameWithType: DisplayOutput.GenerateEggHunters
        qualifiedName: ERC.DisplayOutput.GenerateEggHunters
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.GenerateEggHunters
  ERC.DisplayOutput.GenerateFindNRPTable*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.GenerateFindNRPTable*
        name: GenerateFindNRPTable
        nameWithType: DisplayOutput.GenerateFindNRPTable
        qualifiedName: ERC.DisplayOutput.GenerateFindNRPTable
      VB:
      - id: ERC.DisplayOutput.GenerateFindNRPTable*
        name: GenerateFindNRPTable
        nameWithType: DisplayOutput.GenerateFindNRPTable
        qualifiedName: ERC.DisplayOutput.GenerateFindNRPTable
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.GenerateFindNRPTable
  ERC.Utilities:
    name:
      CSharp:
      - name: ERC.Utilities
        nameWithType: ERC.Utilities
        qualifiedName: ERC.Utilities
      VB:
      - name: ERC.Utilities
        nameWithType: ERC.Utilities
        qualifiedName: ERC.Utilities
    isDefinition: true
    commentId: N:ERC.Utilities
  ERC.Utilities.RopChainGenerator32:
    name:
      CSharp:
      - id: ERC.Utilities.RopChainGenerator32
        name: RopChainGenerator32
        nameWithType: RopChainGenerator32
        qualifiedName: ERC.Utilities.RopChainGenerator32
      VB:
      - id: ERC.Utilities.RopChainGenerator32
        name: RopChainGenerator32
        nameWithType: RopChainGenerator32
        qualifiedName: ERC.Utilities.RopChainGenerator32
    isDefinition: true
    parent: ERC.Utilities
    commentId: T:ERC.Utilities.RopChainGenerator32
  ERC.DisplayOutput.RopChainGadgets32*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.RopChainGadgets32*
        name: RopChainGadgets32
        nameWithType: DisplayOutput.RopChainGadgets32
        qualifiedName: ERC.DisplayOutput.RopChainGadgets32
      VB:
      - id: ERC.DisplayOutput.RopChainGadgets32*
        name: RopChainGadgets32
        nameWithType: DisplayOutput.RopChainGadgets32
        qualifiedName: ERC.DisplayOutput.RopChainGadgets32
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.RopChainGadgets32
  ERC.Utilities.RopChainGenerator64:
    name:
      CSharp:
      - id: ERC.Utilities.RopChainGenerator64
        name: RopChainGenerator64
        nameWithType: RopChainGenerator64
        qualifiedName: ERC.Utilities.RopChainGenerator64
      VB:
      - id: ERC.Utilities.RopChainGenerator64
        name: RopChainGenerator64
        nameWithType: RopChainGenerator64
        qualifiedName: ERC.Utilities.RopChainGenerator64
    isDefinition: true
    parent: ERC.Utilities
    commentId: T:ERC.Utilities.RopChainGenerator64
  ERC.DisplayOutput.RopChainGadgets64*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.RopChainGadgets64*
        name: RopChainGadgets64
        nameWithType: DisplayOutput.RopChainGadgets64
        qualifiedName: ERC.DisplayOutput.RopChainGadgets64
      VB:
      - id: ERC.DisplayOutput.RopChainGadgets64*
        name: RopChainGadgets64
        nameWithType: DisplayOutput.RopChainGadgets64
        qualifiedName: ERC.DisplayOutput.RopChainGadgets64
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.RopChainGadgets64
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt32
  ERC.DisplayOutput.AssembleOpcodes*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.AssembleOpcodes*
        name: AssembleOpcodes
        nameWithType: DisplayOutput.AssembleOpcodes
        qualifiedName: ERC.DisplayOutput.AssembleOpcodes
      VB:
      - id: ERC.DisplayOutput.AssembleOpcodes*
        name: AssembleOpcodes
        nameWithType: DisplayOutput.AssembleOpcodes
        qualifiedName: ERC.DisplayOutput.AssembleOpcodes
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.AssembleOpcodes
  ERC.MachineType:
    name:
      CSharp:
      - id: ERC.MachineType
        name: MachineType
        nameWithType: MachineType
        qualifiedName: ERC.MachineType
      VB:
      - id: ERC.MachineType
        name: MachineType
        nameWithType: MachineType
        qualifiedName: ERC.MachineType
    isDefinition: true
    parent: ERC
    commentId: T:ERC.MachineType
  ERC.DisplayOutput.DisassembleOpcodes*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.DisassembleOpcodes*
        name: DisassembleOpcodes
        nameWithType: DisplayOutput.DisassembleOpcodes
        qualifiedName: ERC.DisplayOutput.DisassembleOpcodes
      VB:
      - id: ERC.DisplayOutput.DisassembleOpcodes*
        name: DisassembleOpcodes
        nameWithType: DisplayOutput.DisassembleOpcodes
        qualifiedName: ERC.DisplayOutput.DisassembleOpcodes
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.DisassembleOpcodes
  ERC.ErcResult`1:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ERC.ErcResult`1
  ERC.ErcResult{System.String}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.String}
  ERC.DisplayOutput.DumpMemory*:
    name:
      CSharp:
      - id: ERC.DisplayOutput.DumpMemory*
        name: DumpMemory
        nameWithType: DisplayOutput.DumpMemory
        qualifiedName: ERC.DisplayOutput.DumpMemory
      VB:
      - id: ERC.DisplayOutput.DumpMemory*
        name: DumpMemory
        nameWithType: DisplayOutput.DumpMemory
        qualifiedName: ERC.DisplayOutput.DumpMemory
    isDefinition: true
    commentId: Overload:ERC.DisplayOutput.DumpMemory
  ERC.DisplayOutput:
    name:
      CSharp:
      - id: ERC.DisplayOutput
        name: DisplayOutput
        nameWithType: DisplayOutput
        qualifiedName: ERC.DisplayOutput
      VB:
      - id: ERC.DisplayOutput
        name: DisplayOutput
        nameWithType: DisplayOutput
        qualifiedName: ERC.DisplayOutput
    isDefinition: true
    commentId: T:ERC.DisplayOutput
  System.Exception:
    name:
      CSharp:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      VB:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Exception
  System.Exception.GetBaseException:
    name:
      CSharp:
      - id: System.Exception.GetBaseException
        name: GetBaseException
        nameWithType: Exception.GetBaseException
        qualifiedName: System.Exception.GetBaseException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetBaseException
        name: GetBaseException
        nameWithType: Exception.GetBaseException
        qualifiedName: System.Exception.GetBaseException
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetBaseException
  System.Exception.ToString:
    name:
      CSharp:
      - id: System.Exception.ToString
        name: ToString
        nameWithType: Exception.ToString
        qualifiedName: System.Exception.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.ToString
        name: ToString
        nameWithType: Exception.ToString
        qualifiedName: System.Exception.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.ToString
  System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext):
    name:
      CSharp:
      - id: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Exception.GetObjectData
        qualifiedName: System.Exception.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
        name: GetObjectData
        nameWithType: Exception.GetObjectData
        qualifiedName: System.Exception.GetObjectData
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  System.Exception.GetType:
    name:
      CSharp:
      - id: System.Exception.GetType
        name: GetType
        nameWithType: Exception.GetType
        qualifiedName: System.Exception.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Exception.GetType
        name: GetType
        nameWithType: Exception.GetType
        qualifiedName: System.Exception.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Exception
    commentId: M:System.Exception.GetType
  System.Exception.Message:
    name:
      CSharp:
      - id: System.Exception.Message
        name: Message
        nameWithType: Exception.Message
        qualifiedName: System.Exception.Message
        isExternal: true
      VB:
      - id: System.Exception.Message
        name: Message
        nameWithType: Exception.Message
        qualifiedName: System.Exception.Message
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Message
  System.Exception.Data:
    name:
      CSharp:
      - id: System.Exception.Data
        name: Data
        nameWithType: Exception.Data
        qualifiedName: System.Exception.Data
        isExternal: true
      VB:
      - id: System.Exception.Data
        name: Data
        nameWithType: Exception.Data
        qualifiedName: System.Exception.Data
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Data
  System.Exception.InnerException:
    name:
      CSharp:
      - id: System.Exception.InnerException
        name: InnerException
        nameWithType: Exception.InnerException
        qualifiedName: System.Exception.InnerException
        isExternal: true
      VB:
      - id: System.Exception.InnerException
        name: InnerException
        nameWithType: Exception.InnerException
        qualifiedName: System.Exception.InnerException
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.InnerException
  System.Exception.TargetSite:
    name:
      CSharp:
      - id: System.Exception.TargetSite
        name: TargetSite
        nameWithType: Exception.TargetSite
        qualifiedName: System.Exception.TargetSite
        isExternal: true
      VB:
      - id: System.Exception.TargetSite
        name: TargetSite
        nameWithType: Exception.TargetSite
        qualifiedName: System.Exception.TargetSite
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.TargetSite
  System.Exception.StackTrace:
    name:
      CSharp:
      - id: System.Exception.StackTrace
        name: StackTrace
        nameWithType: Exception.StackTrace
        qualifiedName: System.Exception.StackTrace
        isExternal: true
      VB:
      - id: System.Exception.StackTrace
        name: StackTrace
        nameWithType: Exception.StackTrace
        qualifiedName: System.Exception.StackTrace
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.StackTrace
  System.Exception.HelpLink:
    name:
      CSharp:
      - id: System.Exception.HelpLink
        name: HelpLink
        nameWithType: Exception.HelpLink
        qualifiedName: System.Exception.HelpLink
        isExternal: true
      VB:
      - id: System.Exception.HelpLink
        name: HelpLink
        nameWithType: Exception.HelpLink
        qualifiedName: System.Exception.HelpLink
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.HelpLink
  System.Exception.Source:
    name:
      CSharp:
      - id: System.Exception.Source
        name: Source
        nameWithType: Exception.Source
        qualifiedName: System.Exception.Source
        isExternal: true
      VB:
      - id: System.Exception.Source
        name: Source
        nameWithType: Exception.Source
        qualifiedName: System.Exception.Source
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.Source
  System.Exception.HResult:
    name:
      CSharp:
      - id: System.Exception.HResult
        name: HResult
        nameWithType: Exception.HResult
        qualifiedName: System.Exception.HResult
        isExternal: true
      VB:
      - id: System.Exception.HResult
        name: HResult
        nameWithType: Exception.HResult
        qualifiedName: System.Exception.HResult
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: P:System.Exception.HResult
  System.Exception.SerializeObjectState:
    name:
      CSharp:
      - id: System.Exception.SerializeObjectState
        name: SerializeObjectState
        nameWithType: Exception.SerializeObjectState
        qualifiedName: System.Exception.SerializeObjectState
        isExternal: true
      VB:
      - id: System.Exception.SerializeObjectState
        name: SerializeObjectState
        nameWithType: Exception.SerializeObjectState
        qualifiedName: System.Exception.SerializeObjectState
        isExternal: true
    isDefinition: true
    parent: System.Exception
    commentId: E:System.Exception.SerializeObjectState
  System.Runtime.Serialization:
    name:
      CSharp:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
        isExternal: true
      VB:
      - name: System.Runtime.Serialization
        nameWithType: System.Runtime.Serialization
        qualifiedName: System.Runtime.Serialization
    isDefinition: true
    commentId: N:System.Runtime.Serialization
  System.Runtime.Serialization.ISerializable:
    name:
      CSharp:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.ISerializable
        name: ISerializable
        nameWithType: ISerializable
        qualifiedName: System.Runtime.Serialization.ISerializable
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.ISerializable
  System.Runtime.InteropServices:
    name:
      CSharp:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
        isExternal: true
      VB:
      - name: System.Runtime.InteropServices
        nameWithType: System.Runtime.InteropServices
        qualifiedName: System.Runtime.InteropServices
    isDefinition: true
    commentId: N:System.Runtime.InteropServices
  System.Runtime.InteropServices._Exception:
    name:
      CSharp:
      - id: System.Runtime.InteropServices._Exception
        name: _Exception
        nameWithType: _Exception
        qualifiedName: System.Runtime.InteropServices._Exception
        isExternal: true
      VB:
      - id: System.Runtime.InteropServices._Exception
        name: _Exception
        nameWithType: _Exception
        qualifiedName: System.Runtime.InteropServices._Exception
        isExternal: true
    isDefinition: true
    parent: System.Runtime.InteropServices
    commentId: T:System.Runtime.InteropServices._Exception
  ERC.ERCException.#ctor*:
    name:
      CSharp:
      - id: ERC.ERCException.#ctor*
        name: ERCException
        nameWithType: ERCException.ERCException
        qualifiedName: ERC.ERCException.ERCException
      VB:
      - id: ERC.ERCException.#ctor*
        name: ERCException
        nameWithType: ERCException.ERCException
        qualifiedName: ERC.ERCException.ERCException
    isDefinition: true
    commentId: Overload:ERC.ERCException.#ctor
  System.Runtime.Serialization.SerializationInfo:
    name:
      CSharp:
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.SerializationInfo
        name: SerializationInfo
        nameWithType: SerializationInfo
        qualifiedName: System.Runtime.Serialization.SerializationInfo
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.SerializationInfo
  System.Runtime.Serialization.StreamingContext:
    name:
      CSharp:
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
      VB:
      - id: System.Runtime.Serialization.StreamingContext
        name: StreamingContext
        nameWithType: StreamingContext
        qualifiedName: System.Runtime.Serialization.StreamingContext
        isExternal: true
    isDefinition: true
    parent: System.Runtime.Serialization
    commentId: T:System.Runtime.Serialization.StreamingContext
  ERC.ERCException:
    name:
      CSharp:
      - id: ERC.ERCException
        name: ERCException
        nameWithType: ERCException
        qualifiedName: ERC.ERCException
      VB:
      - id: ERC.ERCException
        name: ERCException
        nameWithType: ERCException
        qualifiedName: ERC.ERCException
    isDefinition: true
    commentId: T:ERC.ERCException
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  ERC.ErcCore.ErcVersion*:
    name:
      CSharp:
      - id: ERC.ErcCore.ErcVersion*
        name: ErcVersion
        nameWithType: ErcCore.ErcVersion
        qualifiedName: ERC.ErcCore.ErcVersion
      VB:
      - id: ERC.ErcCore.ErcVersion*
        name: ErcVersion
        nameWithType: ErcCore.ErcVersion
        qualifiedName: ERC.ErcCore.ErcVersion
    isDefinition: true
    commentId: Overload:ERC.ErcCore.ErcVersion
  ERC.ErcCore.WorkingDirectory*:
    name:
      CSharp:
      - id: ERC.ErcCore.WorkingDirectory*
        name: WorkingDirectory
        nameWithType: ErcCore.WorkingDirectory
        qualifiedName: ERC.ErcCore.WorkingDirectory
      VB:
      - id: ERC.ErcCore.WorkingDirectory*
        name: WorkingDirectory
        nameWithType: ErcCore.WorkingDirectory
        qualifiedName: ERC.ErcCore.WorkingDirectory
    isDefinition: true
    commentId: Overload:ERC.ErcCore.WorkingDirectory
  ERC.ErcCore.Author*:
    name:
      CSharp:
      - id: ERC.ErcCore.Author*
        name: Author
        nameWithType: ErcCore.Author
        qualifiedName: ERC.ErcCore.Author
      VB:
      - id: ERC.ErcCore.Author*
        name: Author
        nameWithType: ErcCore.Author
        qualifiedName: ERC.ErcCore.Author
    isDefinition: true
    commentId: Overload:ERC.ErcCore.Author
  ERC.ErcCore.SystemErrorLogPath*:
    name:
      CSharp:
      - id: ERC.ErcCore.SystemErrorLogPath*
        name: SystemErrorLogPath
        nameWithType: ErcCore.SystemErrorLogPath
        qualifiedName: ERC.ErcCore.SystemErrorLogPath
      VB:
      - id: ERC.ErcCore.SystemErrorLogPath*
        name: SystemErrorLogPath
        nameWithType: ErcCore.SystemErrorLogPath
        qualifiedName: ERC.ErcCore.SystemErrorLogPath
    isDefinition: true
    commentId: Overload:ERC.ErcCore.SystemErrorLogPath
  ERC.ErcCore.PatternStandardPath*:
    name:
      CSharp:
      - id: ERC.ErcCore.PatternStandardPath*
        name: PatternStandardPath
        nameWithType: ErcCore.PatternStandardPath
        qualifiedName: ERC.ErcCore.PatternStandardPath
      VB:
      - id: ERC.ErcCore.PatternStandardPath*
        name: PatternStandardPath
        nameWithType: ErcCore.PatternStandardPath
        qualifiedName: ERC.ErcCore.PatternStandardPath
    isDefinition: true
    commentId: Overload:ERC.ErcCore.PatternStandardPath
  ERC.ErcCore.PatternExtendedPath*:
    name:
      CSharp:
      - id: ERC.ErcCore.PatternExtendedPath*
        name: PatternExtendedPath
        nameWithType: ErcCore.PatternExtendedPath
        qualifiedName: ERC.ErcCore.PatternExtendedPath
      VB:
      - id: ERC.ErcCore.PatternExtendedPath*
        name: PatternExtendedPath
        nameWithType: ErcCore.PatternExtendedPath
        qualifiedName: ERC.ErcCore.PatternExtendedPath
    isDefinition: true
    commentId: Overload:ERC.ErcCore.PatternExtendedPath
  ERC.ErcCore.GetHandleInformation*:
    name:
      CSharp:
      - id: ERC.ErcCore.GetHandleInformation*
        name: GetHandleInformation
        nameWithType: ErcCore.GetHandleInformation
        qualifiedName: ERC.ErcCore.GetHandleInformation
        isExternal: true
      VB:
      - id: ERC.ErcCore.GetHandleInformation*
        name: GetHandleInformation
        nameWithType: ErcCore.GetHandleInformation
        qualifiedName: ERC.ErcCore.GetHandleInformation
        isExternal: true
    isDefinition: true
    commentId: Overload:ERC.ErcCore.GetHandleInformation
  ERC.ErcCore.#ctor*:
    name:
      CSharp:
      - id: ERC.ErcCore.#ctor*
        name: ErcCore
        nameWithType: ErcCore.ErcCore
        qualifiedName: ERC.ErcCore.ErcCore
      VB:
      - id: ERC.ErcCore.#ctor*
        name: ErcCore
        nameWithType: ErcCore.ErcCore
        qualifiedName: ERC.ErcCore.ErcCore
    isDefinition: true
    commentId: Overload:ERC.ErcCore.#ctor
  ERC.ErcCore.SetWorkingDirectory*:
    name:
      CSharp:
      - id: ERC.ErcCore.SetWorkingDirectory*
        name: SetWorkingDirectory
        nameWithType: ErcCore.SetWorkingDirectory
        qualifiedName: ERC.ErcCore.SetWorkingDirectory
      VB:
      - id: ERC.ErcCore.SetWorkingDirectory*
        name: SetWorkingDirectory
        nameWithType: ErcCore.SetWorkingDirectory
        qualifiedName: ERC.ErcCore.SetWorkingDirectory
    isDefinition: true
    commentId: Overload:ERC.ErcCore.SetWorkingDirectory
  ERC.ErcCore.SetPatternStandardPath*:
    name:
      CSharp:
      - id: ERC.ErcCore.SetPatternStandardPath*
        name: SetPatternStandardPath
        nameWithType: ErcCore.SetPatternStandardPath
        qualifiedName: ERC.ErcCore.SetPatternStandardPath
      VB:
      - id: ERC.ErcCore.SetPatternStandardPath*
        name: SetPatternStandardPath
        nameWithType: ErcCore.SetPatternStandardPath
        qualifiedName: ERC.ErcCore.SetPatternStandardPath
    isDefinition: true
    commentId: Overload:ERC.ErcCore.SetPatternStandardPath
  ERC.ErcCore.SetPatternExtendedPath*:
    name:
      CSharp:
      - id: ERC.ErcCore.SetPatternExtendedPath*
        name: SetPatternExtendedPath
        nameWithType: ErcCore.SetPatternExtendedPath
        qualifiedName: ERC.ErcCore.SetPatternExtendedPath
      VB:
      - id: ERC.ErcCore.SetPatternExtendedPath*
        name: SetPatternExtendedPath
        nameWithType: ErcCore.SetPatternExtendedPath
        qualifiedName: ERC.ErcCore.SetPatternExtendedPath
    isDefinition: true
    commentId: Overload:ERC.ErcCore.SetPatternExtendedPath
  ERC.ErcCore.SetAuthor*:
    name:
      CSharp:
      - id: ERC.ErcCore.SetAuthor*
        name: SetAuthor
        nameWithType: ErcCore.SetAuthor
        qualifiedName: ERC.ErcCore.SetAuthor
      VB:
      - id: ERC.ErcCore.SetAuthor*
        name: SetAuthor
        nameWithType: ErcCore.SetAuthor
        qualifiedName: ERC.ErcCore.SetAuthor
    isDefinition: true
    commentId: Overload:ERC.ErcCore.SetAuthor
  ERC.ErcCore.SetErrorFile*:
    name:
      CSharp:
      - id: ERC.ErcCore.SetErrorFile*
        name: SetErrorFile
        nameWithType: ErcCore.SetErrorFile
        qualifiedName: ERC.ErcCore.SetErrorFile
      VB:
      - id: ERC.ErcCore.SetErrorFile*
        name: SetErrorFile
        nameWithType: ErcCore.SetErrorFile
        qualifiedName: ERC.ErcCore.SetErrorFile
    isDefinition: true
    commentId: Overload:ERC.ErcCore.SetErrorFile
  ERC.ErcCore.LogEvent*:
    name:
      CSharp:
      - id: ERC.ErcCore.LogEvent*
        name: LogEvent
        nameWithType: ErcCore.LogEvent
        qualifiedName: ERC.ErcCore.LogEvent
      VB:
      - id: ERC.ErcCore.LogEvent*
        name: LogEvent
        nameWithType: ErcCore.LogEvent
        qualifiedName: ERC.ErcCore.LogEvent
    isDefinition: true
    commentId: Overload:ERC.ErcCore.LogEvent
  ERC.ErcCore.ErcVersion:
    name:
      CSharp:
      - id: ERC.ErcCore.ErcVersion
        name: ErcVersion
        nameWithType: ErcCore.ErcVersion
        qualifiedName: ERC.ErcCore.ErcVersion
      VB:
      - id: ERC.ErcCore.ErcVersion
        name: ErcVersion
        nameWithType: ErcCore.ErcVersion
        qualifiedName: ERC.ErcCore.ErcVersion
    isDefinition: true
    parent: ERC.ErcCore
    commentId: P:ERC.ErcCore.ErcVersion
  ERC.ErcCore.WorkingDirectory:
    name:
      CSharp:
      - id: ERC.ErcCore.WorkingDirectory
        name: WorkingDirectory
        nameWithType: ErcCore.WorkingDirectory
        qualifiedName: ERC.ErcCore.WorkingDirectory
      VB:
      - id: ERC.ErcCore.WorkingDirectory
        name: WorkingDirectory
        nameWithType: ErcCore.WorkingDirectory
        qualifiedName: ERC.ErcCore.WorkingDirectory
    isDefinition: true
    parent: ERC.ErcCore
    commentId: P:ERC.ErcCore.WorkingDirectory
  ERC.ErcCore.Author:
    name:
      CSharp:
      - id: ERC.ErcCore.Author
        name: Author
        nameWithType: ErcCore.Author
        qualifiedName: ERC.ErcCore.Author
      VB:
      - id: ERC.ErcCore.Author
        name: Author
        nameWithType: ErcCore.Author
        qualifiedName: ERC.ErcCore.Author
    isDefinition: true
    parent: ERC.ErcCore
    commentId: P:ERC.ErcCore.Author
  ERC.ErcCore.SystemErrorLogPath:
    name:
      CSharp:
      - id: ERC.ErcCore.SystemErrorLogPath
        name: SystemErrorLogPath
        nameWithType: ErcCore.SystemErrorLogPath
        qualifiedName: ERC.ErcCore.SystemErrorLogPath
      VB:
      - id: ERC.ErcCore.SystemErrorLogPath
        name: SystemErrorLogPath
        nameWithType: ErcCore.SystemErrorLogPath
        qualifiedName: ERC.ErcCore.SystemErrorLogPath
    isDefinition: true
    parent: ERC.ErcCore
    commentId: P:ERC.ErcCore.SystemErrorLogPath
  ERC.ErcCore.PatternStandardPath:
    name:
      CSharp:
      - id: ERC.ErcCore.PatternStandardPath
        name: PatternStandardPath
        nameWithType: ErcCore.PatternStandardPath
        qualifiedName: ERC.ErcCore.PatternStandardPath
      VB:
      - id: ERC.ErcCore.PatternStandardPath
        name: PatternStandardPath
        nameWithType: ErcCore.PatternStandardPath
        qualifiedName: ERC.ErcCore.PatternStandardPath
    isDefinition: true
    parent: ERC.ErcCore
    commentId: P:ERC.ErcCore.PatternStandardPath
  ERC.ErcCore.PatternExtendedPath:
    name:
      CSharp:
      - id: ERC.ErcCore.PatternExtendedPath
        name: PatternExtendedPath
        nameWithType: ErcCore.PatternExtendedPath
        qualifiedName: ERC.ErcCore.PatternExtendedPath
      VB:
      - id: ERC.ErcCore.PatternExtendedPath
        name: PatternExtendedPath
        nameWithType: ErcCore.PatternExtendedPath
        qualifiedName: ERC.ErcCore.PatternExtendedPath
    isDefinition: true
    parent: ERC.ErcCore
    commentId: P:ERC.ErcCore.PatternExtendedPath
  ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@):
    name:
      CSharp:
      - id: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
        name: GetHandleInformation
        nameWithType: ErcCore.GetHandleInformation
        qualifiedName: ERC.ErcCore.GetHandleInformation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
        name: GetHandleInformation
        nameWithType: ErcCore.GetHandleInformation
        qualifiedName: ERC.ErcCore.GetHandleInformation
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ErcCore
    commentId: M:ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
  ERC.ErcCore.SetWorkingDirectory(System.String):
    name:
      CSharp:
      - id: ERC.ErcCore.SetWorkingDirectory(System.String)
        name: SetWorkingDirectory
        nameWithType: ErcCore.SetWorkingDirectory
        qualifiedName: ERC.ErcCore.SetWorkingDirectory
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ErcCore.SetWorkingDirectory(System.String)
        name: SetWorkingDirectory
        nameWithType: ErcCore.SetWorkingDirectory
        qualifiedName: ERC.ErcCore.SetWorkingDirectory
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ErcCore
    commentId: M:ERC.ErcCore.SetWorkingDirectory(System.String)
  ERC.ErcCore.SetPatternStandardPath(System.String):
    name:
      CSharp:
      - id: ERC.ErcCore.SetPatternStandardPath(System.String)
        name: SetPatternStandardPath
        nameWithType: ErcCore.SetPatternStandardPath
        qualifiedName: ERC.ErcCore.SetPatternStandardPath
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ErcCore.SetPatternStandardPath(System.String)
        name: SetPatternStandardPath
        nameWithType: ErcCore.SetPatternStandardPath
        qualifiedName: ERC.ErcCore.SetPatternStandardPath
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ErcCore
    commentId: M:ERC.ErcCore.SetPatternStandardPath(System.String)
  ERC.ErcCore.SetPatternExtendedPath(System.String):
    name:
      CSharp:
      - id: ERC.ErcCore.SetPatternExtendedPath(System.String)
        name: SetPatternExtendedPath
        nameWithType: ErcCore.SetPatternExtendedPath
        qualifiedName: ERC.ErcCore.SetPatternExtendedPath
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ErcCore.SetPatternExtendedPath(System.String)
        name: SetPatternExtendedPath
        nameWithType: ErcCore.SetPatternExtendedPath
        qualifiedName: ERC.ErcCore.SetPatternExtendedPath
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ErcCore
    commentId: M:ERC.ErcCore.SetPatternExtendedPath(System.String)
  ERC.ErcCore.SetAuthor(System.String):
    name:
      CSharp:
      - id: ERC.ErcCore.SetAuthor(System.String)
        name: SetAuthor
        nameWithType: ErcCore.SetAuthor
        qualifiedName: ERC.ErcCore.SetAuthor
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ErcCore.SetAuthor(System.String)
        name: SetAuthor
        nameWithType: ErcCore.SetAuthor
        qualifiedName: ERC.ErcCore.SetAuthor
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ErcCore
    commentId: M:ERC.ErcCore.SetAuthor(System.String)
  ERC.ErcCore.SetErrorFile(System.String):
    name:
      CSharp:
      - id: ERC.ErcCore.SetErrorFile(System.String)
        name: SetErrorFile
        nameWithType: ErcCore.SetErrorFile
        qualifiedName: ERC.ErcCore.SetErrorFile
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ErcCore.SetErrorFile(System.String)
        name: SetErrorFile
        nameWithType: ErcCore.SetErrorFile
        qualifiedName: ERC.ErcCore.SetErrorFile
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ErcCore
    commentId: M:ERC.ErcCore.SetErrorFile(System.String)
  ERC.ErcCore.LogEvent(System.Exception):
    name:
      CSharp:
      - id: ERC.ErcCore.LogEvent(System.Exception)
        name: LogEvent
        nameWithType: ErcCore.LogEvent
        qualifiedName: ERC.ErcCore.LogEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ErcCore.LogEvent(System.Exception)
        name: LogEvent
        nameWithType: ErcCore.LogEvent
        qualifiedName: ERC.ErcCore.LogEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ErcCore
    commentId: M:ERC.ErcCore.LogEvent(System.Exception)
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
    commentId: '!:T'
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  ERC.ErcResult`1.ReturnValue*:
    name:
      CSharp:
      - id: ERC.ErcResult`1.ReturnValue*
        name: ReturnValue
        nameWithType: ErcResult<T>.ReturnValue
        qualifiedName: ERC.ErcResult<T>.ReturnValue
      VB:
      - id: ERC.ErcResult`1.ReturnValue*
        name: ReturnValue
        nameWithType: ErcResult(Of T).ReturnValue
        qualifiedName: ERC.ErcResult(Of T).ReturnValue
    isDefinition: true
    commentId: Overload:ERC.ErcResult`1.ReturnValue
  ERC.ErcResult`1.Error*:
    name:
      CSharp:
      - id: ERC.ErcResult`1.Error*
        name: Error
        nameWithType: ErcResult<T>.Error
        qualifiedName: ERC.ErcResult<T>.Error
      VB:
      - id: ERC.ErcResult`1.Error*
        name: Error
        nameWithType: ErcResult(Of T).Error
        qualifiedName: ERC.ErcResult(Of T).Error
    isDefinition: true
    commentId: Overload:ERC.ErcResult`1.Error
  ERC.ErcResult`1.#ctor*:
    name:
      CSharp:
      - id: ERC.ErcResult`1.#ctor*
        name: ErcResult
        nameWithType: ErcResult<T>.ErcResult
        qualifiedName: ERC.ErcResult<T>.ErcResult
      VB:
      - id: ERC.ErcResult`1.#ctor*
        name: ErcResult
        nameWithType: ErcResult(Of T).ErcResult
        qualifiedName: ERC.ErcResult(Of T).ErcResult
    isDefinition: true
    commentId: Overload:ERC.ErcResult`1.#ctor
  ERC.ErcResult`1.LogEvent*:
    name:
      CSharp:
      - id: ERC.ErcResult`1.LogEvent*
        name: LogEvent
        nameWithType: ErcResult<T>.LogEvent
        qualifiedName: ERC.ErcResult<T>.LogEvent
      VB:
      - id: ERC.ErcResult`1.LogEvent*
        name: LogEvent
        nameWithType: ErcResult(Of T).LogEvent
        qualifiedName: ERC.ErcResult(Of T).LogEvent
    isDefinition: true
    commentId: Overload:ERC.ErcResult`1.LogEvent
  ERC.ErcResult`1.ToString*:
    name:
      CSharp:
      - id: ERC.ErcResult`1.ToString*
        name: ToString
        nameWithType: ErcResult<T>.ToString
        qualifiedName: ERC.ErcResult<T>.ToString
      VB:
      - id: ERC.ErcResult`1.ToString*
        name: ToString
        nameWithType: ErcResult(Of T).ToString
        qualifiedName: ERC.ErcResult(Of T).ToString
    isDefinition: true
    commentId: Overload:ERC.ErcResult`1.ToString
  ERC.ModuleInfo.ModuleName*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleName*
        name: ModuleName
        nameWithType: ModuleInfo.ModuleName
        qualifiedName: ERC.ModuleInfo.ModuleName
      VB:
      - id: ERC.ModuleInfo.ModuleName*
        name: ModuleName
        nameWithType: ModuleInfo.ModuleName
        qualifiedName: ERC.ModuleInfo.ModuleName
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleName
  ERC.ModuleInfo.ModulePath*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModulePath*
        name: ModulePath
        nameWithType: ModuleInfo.ModulePath
        qualifiedName: ERC.ModuleInfo.ModulePath
      VB:
      - id: ERC.ModuleInfo.ModulePath*
        name: ModulePath
        nameWithType: ModuleInfo.ModulePath
        qualifiedName: ERC.ModuleInfo.ModulePath
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModulePath
  ERC.ModuleInfo.ModuleVersion*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleVersion*
        name: ModuleVersion
        nameWithType: ModuleInfo.ModuleVersion
        qualifiedName: ERC.ModuleInfo.ModuleVersion
      VB:
      - id: ERC.ModuleInfo.ModuleVersion*
        name: ModuleVersion
        nameWithType: ModuleInfo.ModuleVersion
        qualifiedName: ERC.ModuleInfo.ModuleVersion
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleVersion
  ERC.ModuleInfo.ModuleProduct*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleProduct*
        name: ModuleProduct
        nameWithType: ModuleInfo.ModuleProduct
        qualifiedName: ERC.ModuleInfo.ModuleProduct
      VB:
      - id: ERC.ModuleInfo.ModuleProduct*
        name: ModuleProduct
        nameWithType: ModuleInfo.ModuleProduct
        qualifiedName: ERC.ModuleInfo.ModuleProduct
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleProduct
  ERC.ModuleInfo.ModuleProtection*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleProtection*
        name: ModuleProtection
        nameWithType: ModuleInfo.ModuleProtection
        qualifiedName: ERC.ModuleInfo.ModuleProtection
      VB:
      - id: ERC.ModuleInfo.ModuleProtection*
        name: ModuleProtection
        nameWithType: ModuleInfo.ModuleProtection
        qualifiedName: ERC.ModuleInfo.ModuleProtection
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleProtection
  ERC.ModuleInfo.ModuleBase*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleBase*
        name: ModuleBase
        nameWithType: ModuleInfo.ModuleBase
        qualifiedName: ERC.ModuleInfo.ModuleBase
      VB:
      - id: ERC.ModuleInfo.ModuleBase*
        name: ModuleBase
        nameWithType: ModuleInfo.ModuleBase
        qualifiedName: ERC.ModuleInfo.ModuleBase
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleBase
  ERC.ModuleInfo.ModuleEntry*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleEntry*
        name: ModuleEntry
        nameWithType: ModuleInfo.ModuleEntry
        qualifiedName: ERC.ModuleInfo.ModuleEntry
      VB:
      - id: ERC.ModuleInfo.ModuleEntry*
        name: ModuleEntry
        nameWithType: ModuleInfo.ModuleEntry
        qualifiedName: ERC.ModuleInfo.ModuleEntry
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleEntry
  ERC.ModuleInfo.ModuleImageBase*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleImageBase*
        name: ModuleImageBase
        nameWithType: ModuleInfo.ModuleImageBase
        qualifiedName: ERC.ModuleInfo.ModuleImageBase
      VB:
      - id: ERC.ModuleInfo.ModuleImageBase*
        name: ModuleImageBase
        nameWithType: ModuleInfo.ModuleImageBase
        qualifiedName: ERC.ModuleInfo.ModuleImageBase
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleImageBase
  ERC.ModuleInfo.ModuleSize*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleSize*
        name: ModuleSize
        nameWithType: ModuleInfo.ModuleSize
        qualifiedName: ERC.ModuleInfo.ModuleSize
      VB:
      - id: ERC.ModuleInfo.ModuleSize*
        name: ModuleSize
        nameWithType: ModuleInfo.ModuleSize
        qualifiedName: ERC.ModuleInfo.ModuleSize
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleSize
  ERC.ModuleInfo.ModuleASLR*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleASLR*
        name: ModuleASLR
        nameWithType: ModuleInfo.ModuleASLR
        qualifiedName: ERC.ModuleInfo.ModuleASLR
      VB:
      - id: ERC.ModuleInfo.ModuleASLR*
        name: ModuleASLR
        nameWithType: ModuleInfo.ModuleASLR
        qualifiedName: ERC.ModuleInfo.ModuleASLR
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleASLR
  ERC.ModuleInfo.ModuleSafeSEH*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleSafeSEH*
        name: ModuleSafeSEH
        nameWithType: ModuleInfo.ModuleSafeSEH
        qualifiedName: ERC.ModuleInfo.ModuleSafeSEH
      VB:
      - id: ERC.ModuleInfo.ModuleSafeSEH*
        name: ModuleSafeSEH
        nameWithType: ModuleInfo.ModuleSafeSEH
        qualifiedName: ERC.ModuleInfo.ModuleSafeSEH
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleSafeSEH
  ERC.ModuleInfo.ModuleRebase*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleRebase*
        name: ModuleRebase
        nameWithType: ModuleInfo.ModuleRebase
        qualifiedName: ERC.ModuleInfo.ModuleRebase
      VB:
      - id: ERC.ModuleInfo.ModuleRebase*
        name: ModuleRebase
        nameWithType: ModuleInfo.ModuleRebase
        qualifiedName: ERC.ModuleInfo.ModuleRebase
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleRebase
  ERC.ModuleInfo.ModuleNXCompat*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleNXCompat*
        name: ModuleNXCompat
        nameWithType: ModuleInfo.ModuleNXCompat
        qualifiedName: ERC.ModuleInfo.ModuleNXCompat
      VB:
      - id: ERC.ModuleInfo.ModuleNXCompat*
        name: ModuleNXCompat
        nameWithType: ModuleInfo.ModuleNXCompat
        qualifiedName: ERC.ModuleInfo.ModuleNXCompat
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleNXCompat
  ERC.ModuleInfo.ModuleOsDll*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleOsDll*
        name: ModuleOsDll
        nameWithType: ModuleInfo.ModuleOsDll
        qualifiedName: ERC.ModuleInfo.ModuleOsDll
      VB:
      - id: ERC.ModuleInfo.ModuleOsDll*
        name: ModuleOsDll
        nameWithType: ModuleInfo.ModuleOsDll
        qualifiedName: ERC.ModuleInfo.ModuleOsDll
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleOsDll
  System.Diagnostics:
    name:
      CSharp:
      - name: System.Diagnostics
        nameWithType: System.Diagnostics
        qualifiedName: System.Diagnostics
        isExternal: true
      VB:
      - name: System.Diagnostics
        nameWithType: System.Diagnostics
        qualifiedName: System.Diagnostics
    isDefinition: true
    commentId: N:System.Diagnostics
  System.Diagnostics.Process:
    name:
      CSharp:
      - id: System.Diagnostics.Process
        name: Process
        nameWithType: Process
        qualifiedName: System.Diagnostics.Process
        isExternal: true
      VB:
      - id: System.Diagnostics.Process
        name: Process
        nameWithType: Process
        qualifiedName: System.Diagnostics.Process
        isExternal: true
    isDefinition: true
    parent: System.Diagnostics
    commentId: T:System.Diagnostics.Process
  ERC.ModuleInfo.ModuleProcess*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleProcess*
        name: ModuleProcess
        nameWithType: ModuleInfo.ModuleProcess
        qualifiedName: ERC.ModuleInfo.ModuleProcess
      VB:
      - id: ERC.ModuleInfo.ModuleProcess*
        name: ModuleProcess
        nameWithType: ModuleInfo.ModuleProcess
        qualifiedName: ERC.ModuleInfo.ModuleProcess
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleProcess
  ERC.ModuleInfo.ModuleCore*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleCore*
        name: ModuleCore
        nameWithType: ModuleInfo.ModuleCore
        qualifiedName: ERC.ModuleInfo.ModuleCore
      VB:
      - id: ERC.ModuleInfo.ModuleCore*
        name: ModuleCore
        nameWithType: ModuleInfo.ModuleCore
        qualifiedName: ERC.ModuleInfo.ModuleCore
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleCore
  ERC.ModuleInfo.ModuleMachineType*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ModuleMachineType*
        name: ModuleMachineType
        nameWithType: ModuleInfo.ModuleMachineType
        qualifiedName: ERC.ModuleInfo.ModuleMachineType
      VB:
      - id: ERC.ModuleInfo.ModuleMachineType*
        name: ModuleMachineType
        nameWithType: ModuleInfo.ModuleMachineType
        qualifiedName: ERC.ModuleInfo.ModuleMachineType
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ModuleMachineType
  ERC.ErcResult{System.Collections.Generic.List{System.IntPtr}}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.Collections.Generic.List{System.IntPtr}}
  ERC.ModuleInfo.SearchModule*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.SearchModule*
        name: SearchModule
        nameWithType: ModuleInfo.SearchModule
        qualifiedName: ERC.ModuleInfo.SearchModule
      VB:
      - id: ERC.ModuleInfo.SearchModule*
        name: SearchModule
        nameWithType: ModuleInfo.SearchModule
        qualifiedName: ERC.ModuleInfo.SearchModule
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.SearchModule
  ERC.ModuleInfo.ToString*:
    name:
      CSharp:
      - id: ERC.ModuleInfo.ToString*
        name: ToString
        nameWithType: ModuleInfo.ToString
        qualifiedName: ERC.ModuleInfo.ToString
      VB:
      - id: ERC.ModuleInfo.ToString*
        name: ToString
        nameWithType: ModuleInfo.ToString
        qualifiedName: ERC.ModuleInfo.ToString
    isDefinition: true
    commentId: Overload:ERC.ModuleInfo.ToString
  ERC.ModuleInfo:
    name:
      CSharp:
      - id: ERC.ModuleInfo
        name: ModuleInfo
        nameWithType: ModuleInfo
        qualifiedName: ERC.ModuleInfo
      VB:
      - id: ERC.ModuleInfo
        name: ModuleInfo
        nameWithType: ModuleInfo
        qualifiedName: ERC.ModuleInfo
    isDefinition: true
    commentId: T:ERC.ModuleInfo
  ERC.ProcessInfo.ProcessName*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessName*
        name: ProcessName
        nameWithType: ProcessInfo.ProcessName
        qualifiedName: ERC.ProcessInfo.ProcessName
      VB:
      - id: ERC.ProcessInfo.ProcessName*
        name: ProcessName
        nameWithType: ProcessInfo.ProcessName
        qualifiedName: ERC.ProcessInfo.ProcessName
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ProcessName
  ERC.ProcessInfo.ProcessDescription*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessDescription*
        name: ProcessDescription
        nameWithType: ProcessInfo.ProcessDescription
        qualifiedName: ERC.ProcessInfo.ProcessDescription
      VB:
      - id: ERC.ProcessInfo.ProcessDescription*
        name: ProcessDescription
        nameWithType: ProcessInfo.ProcessDescription
        qualifiedName: ERC.ProcessInfo.ProcessDescription
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ProcessDescription
  ERC.ProcessInfo.ProcessPath*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessPath*
        name: ProcessPath
        nameWithType: ProcessInfo.ProcessPath
        qualifiedName: ERC.ProcessInfo.ProcessPath
      VB:
      - id: ERC.ProcessInfo.ProcessPath*
        name: ProcessPath
        nameWithType: ProcessInfo.ProcessPath
        qualifiedName: ERC.ProcessInfo.ProcessPath
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ProcessPath
  ERC.ProcessInfo.ProcessID*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessID*
        name: ProcessID
        nameWithType: ProcessInfo.ProcessID
        qualifiedName: ERC.ProcessInfo.ProcessID
      VB:
      - id: ERC.ProcessInfo.ProcessID*
        name: ProcessID
        nameWithType: ProcessInfo.ProcessID
        qualifiedName: ERC.ProcessInfo.ProcessID
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ProcessID
  ERC.ProcessInfo.ProcessHandle*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessHandle*
        name: ProcessHandle
        nameWithType: ProcessInfo.ProcessHandle
        qualifiedName: ERC.ProcessInfo.ProcessHandle
      VB:
      - id: ERC.ProcessInfo.ProcessHandle*
        name: ProcessHandle
        nameWithType: ProcessInfo.ProcessHandle
        qualifiedName: ERC.ProcessInfo.ProcessHandle
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ProcessHandle
  ERC.ProcessInfo.ProcessCurrent*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessCurrent*
        name: ProcessCurrent
        nameWithType: ProcessInfo.ProcessCurrent
        qualifiedName: ERC.ProcessInfo.ProcessCurrent
      VB:
      - id: ERC.ProcessInfo.ProcessCurrent*
        name: ProcessCurrent
        nameWithType: ProcessInfo.ProcessCurrent
        qualifiedName: ERC.ProcessInfo.ProcessCurrent
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ProcessCurrent
  ERC.ProcessInfo.ProcessMachineType*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessMachineType*
        name: ProcessMachineType
        nameWithType: ProcessInfo.ProcessMachineType
        qualifiedName: ERC.ProcessInfo.ProcessMachineType
      VB:
      - id: ERC.ProcessInfo.ProcessMachineType*
        name: ProcessMachineType
        nameWithType: ProcessInfo.ProcessMachineType
        qualifiedName: ERC.ProcessInfo.ProcessMachineType
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ProcessMachineType
  System.Collections.Generic.List{ERC.ModuleInfo}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ERC.ModuleInfo
        name: ModuleInfo
        nameWithType: ModuleInfo
        qualifiedName: ERC.ModuleInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ERC.ModuleInfo
        name: ModuleInfo
        nameWithType: ModuleInfo
        qualifiedName: ERC.ModuleInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ERC.ModuleInfo}
  System.Collections.Generic.List{ERC.ThreadInfo}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ERC.ThreadInfo
        name: ThreadInfo
        nameWithType: ThreadInfo
        qualifiedName: ERC.ThreadInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ERC.ThreadInfo
        name: ThreadInfo
        nameWithType: ThreadInfo
        qualifiedName: ERC.ThreadInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ERC.ThreadInfo}
  ERC.ProcessInfo.#ctor*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.#ctor*
        name: ProcessInfo
        nameWithType: ProcessInfo.ProcessInfo
        qualifiedName: ERC.ProcessInfo.ProcessInfo
      VB:
      - id: ERC.ProcessInfo.#ctor*
        name: ProcessInfo
        nameWithType: ProcessInfo.ProcessInfo
        qualifiedName: ERC.ProcessInfo.ProcessInfo
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.#ctor
  ERC.ErcResult{System.Diagnostics.Process[]}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Diagnostics.Process
        name: Process
        nameWithType: Process
        qualifiedName: System.Diagnostics.Process
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Diagnostics.Process
        name: Process
        nameWithType: Process
        qualifiedName: System.Diagnostics.Process
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.Diagnostics.Process[]}
  ERC.ProcessInfo.ListLocalProcesses*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ListLocalProcesses*
        name: ListLocalProcesses
        nameWithType: ProcessInfo.ListLocalProcesses
        qualifiedName: ERC.ProcessInfo.ListLocalProcesses
      VB:
      - id: ERC.ProcessInfo.ListLocalProcesses*
        name: ListLocalProcesses
        nameWithType: ProcessInfo.ListLocalProcesses
        qualifiedName: ERC.ProcessInfo.ListLocalProcesses
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ListLocalProcesses
  ERC.ProcessInfo.ListRemoteProcesses*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ListRemoteProcesses*
        name: ListRemoteProcesses
        nameWithType: ProcessInfo.ListRemoteProcesses
        qualifiedName: ERC.ProcessInfo.ListRemoteProcesses
      VB:
      - id: ERC.ProcessInfo.ListRemoteProcesses*
        name: ListRemoteProcesses
        nameWithType: ProcessInfo.ListRemoteProcesses
        qualifiedName: ERC.ProcessInfo.ListRemoteProcesses
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ListRemoteProcesses
  ERC.ErcResult{System.Collections.Generic.Dictionary{System.String,System.IntPtr}}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.Collections.Generic.Dictionary{System.String,System.IntPtr}}
  ERC.ProcessInfo.GetProcessModules*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.GetProcessModules*
        name: GetProcessModules
        nameWithType: ProcessInfo.GetProcessModules
        qualifiedName: ERC.ProcessInfo.GetProcessModules
      VB:
      - id: ERC.ProcessInfo.GetProcessModules*
        name: GetProcessModules
        nameWithType: ProcessInfo.GetProcessModules
        qualifiedName: ERC.ProcessInfo.GetProcessModules
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.GetProcessModules
  ERC.ProcessInfo.Is64Bit*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.Is64Bit*
        name: Is64Bit
        nameWithType: ProcessInfo.Is64Bit
        qualifiedName: ERC.ProcessInfo.Is64Bit
      VB:
      - id: ERC.ProcessInfo.Is64Bit*
        name: Is64Bit
        nameWithType: ProcessInfo.Is64Bit
        qualifiedName: ERC.ProcessInfo.Is64Bit
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.Is64Bit
  ERC.ErcResult{System.Collections.Generic.Dictionary{System.IntPtr,System.String}}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.Collections.Generic.Dictionary{System.IntPtr,System.String}}
  ERC.ProcessInfo.SearchAllMemoryPPR*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.SearchAllMemoryPPR*
        name: SearchAllMemoryPPR
        nameWithType: ProcessInfo.SearchAllMemoryPPR
        qualifiedName: ERC.ProcessInfo.SearchAllMemoryPPR
      VB:
      - id: ERC.ProcessInfo.SearchAllMemoryPPR*
        name: SearchAllMemoryPPR
        nameWithType: ProcessInfo.SearchAllMemoryPPR
        qualifiedName: ERC.ProcessInfo.SearchAllMemoryPPR
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.SearchAllMemoryPPR
  ERC.ProcessInfo.SearchMemory*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.SearchMemory*
        name: SearchMemory
        nameWithType: ProcessInfo.SearchMemory
        qualifiedName: ERC.ProcessInfo.SearchMemory
      VB:
      - id: ERC.ProcessInfo.SearchMemory*
        name: SearchMemory
        nameWithType: ProcessInfo.SearchMemory
        qualifiedName: ERC.ProcessInfo.SearchMemory
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.SearchMemory
  ERC.ErcResult{System.Collections.Generic.List{ERC.Structures.RegisterInfo}}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ERC.Structures.RegisterInfo
        name: RegisterInfo
        nameWithType: RegisterInfo
        qualifiedName: ERC.Structures.RegisterInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ERC.Structures.RegisterInfo
        name: RegisterInfo
        nameWithType: RegisterInfo
        qualifiedName: ERC.Structures.RegisterInfo
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.Collections.Generic.List{ERC.Structures.RegisterInfo}}
  ERC.ProcessInfo.FindNRP*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.FindNRP*
        name: FindNRP
        nameWithType: ProcessInfo.FindNRP
        qualifiedName: ERC.ProcessInfo.FindNRP
      VB:
      - id: ERC.ProcessInfo.FindNRP*
        name: FindNRP
        nameWithType: ProcessInfo.FindNRP
        qualifiedName: ERC.ProcessInfo.FindNRP
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.FindNRP
  ERC.ProcessInfo.CreateExcludesList*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.CreateExcludesList*
        name: CreateExcludesList
        nameWithType: ProcessInfo.CreateExcludesList
        qualifiedName: ERC.ProcessInfo.CreateExcludesList
      VB:
      - id: ERC.ProcessInfo.CreateExcludesList*
        name: CreateExcludesList
        nameWithType: ProcessInfo.CreateExcludesList
        qualifiedName: ERC.ProcessInfo.CreateExcludesList
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.CreateExcludesList
  ERC.ProcessInfo.ToString*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ToString*
        name: ToString
        nameWithType: ProcessInfo.ToString
        qualifiedName: ERC.ProcessInfo.ToString
      VB:
      - id: ERC.ProcessInfo.ToString*
        name: ToString
        nameWithType: ProcessInfo.ToString
        qualifiedName: ERC.ProcessInfo.ToString
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.ToString
  ERC.ProcessInfo.GetModuleHandles*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.GetModuleHandles*
        name: GetModuleHandles
        nameWithType: ProcessInfo.GetModuleHandles
        qualifiedName: ERC.ProcessInfo.GetModuleHandles
      VB:
      - id: ERC.ProcessInfo.GetModuleHandles*
        name: GetModuleHandles
        nameWithType: ProcessInfo.GetModuleHandles
        qualifiedName: ERC.ProcessInfo.GetModuleHandles
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.GetModuleHandles
  ERC.ErcResult{System.Collections.Generic.List{ERC.ModuleInfo}}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ERC.ModuleInfo
        name: ModuleInfo
        nameWithType: ModuleInfo
        qualifiedName: ERC.ModuleInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ERC.ModuleInfo
        name: ModuleInfo
        nameWithType: ModuleInfo
        qualifiedName: ERC.ModuleInfo
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.Collections.Generic.List{ERC.ModuleInfo}}
  ERC.ProcessInfo.GetProcessModuleInformation*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.GetProcessModuleInformation*
        name: GetProcessModuleInformation
        nameWithType: ProcessInfo.GetProcessModuleInformation
        qualifiedName: ERC.ProcessInfo.GetProcessModuleInformation
      VB:
      - id: ERC.ProcessInfo.GetProcessModuleInformation*
        name: GetProcessModuleInformation
        nameWithType: ProcessInfo.GetProcessModuleInformation
        qualifiedName: ERC.ProcessInfo.GetProcessModuleInformation
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.GetProcessModuleInformation
  ERC.ErcResult{System.Collections.Generic.List{ERC.ThreadInfo}}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ERC.ThreadInfo
        name: ThreadInfo
        nameWithType: ThreadInfo
        qualifiedName: ERC.ThreadInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ERC.ThreadInfo
        name: ThreadInfo
        nameWithType: ThreadInfo
        qualifiedName: ERC.ThreadInfo
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.Collections.Generic.List{ERC.ThreadInfo}}
  ERC.ProcessInfo.GetProcessThreadInformation*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.GetProcessThreadInformation*
        name: GetProcessThreadInformation
        nameWithType: ProcessInfo.GetProcessThreadInformation
        qualifiedName: ERC.ProcessInfo.GetProcessThreadInformation
      VB:
      - id: ERC.ProcessInfo.GetProcessThreadInformation*
        name: GetProcessThreadInformation
        nameWithType: ProcessInfo.GetProcessThreadInformation
        qualifiedName: ERC.ProcessInfo.GetProcessThreadInformation
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.GetProcessThreadInformation
  ERC.ErcResult{System.Byte[]}:
    name:
      CSharp:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ERC.ErcResult`1
        name: ErcResult
        nameWithType: ErcResult
        qualifiedName: ERC.ErcResult
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ERC.ErcResult`1
    parent: ERC
    commentId: T:ERC.ErcResult{System.Byte[]}
  ERC.ProcessInfo.DumpMemoryRegion*:
    name:
      CSharp:
      - id: ERC.ProcessInfo.DumpMemoryRegion*
        name: DumpMemoryRegion
        nameWithType: ProcessInfo.DumpMemoryRegion
        qualifiedName: ERC.ProcessInfo.DumpMemoryRegion
      VB:
      - id: ERC.ProcessInfo.DumpMemoryRegion*
        name: DumpMemoryRegion
        nameWithType: ProcessInfo.DumpMemoryRegion
        qualifiedName: ERC.ProcessInfo.DumpMemoryRegion
    isDefinition: true
    commentId: Overload:ERC.ProcessInfo.DumpMemoryRegion
  ERC.ThreadInfo.ThreadHandle*:
    name:
      CSharp:
      - id: ERC.ThreadInfo.ThreadHandle*
        name: ThreadHandle
        nameWithType: ThreadInfo.ThreadHandle
        qualifiedName: ERC.ThreadInfo.ThreadHandle
      VB:
      - id: ERC.ThreadInfo.ThreadHandle*
        name: ThreadHandle
        nameWithType: ThreadInfo.ThreadHandle
        qualifiedName: ERC.ThreadInfo.ThreadHandle
    isDefinition: true
    commentId: Overload:ERC.ThreadInfo.ThreadHandle
  ERC.ThreadInfo.ThreadID*:
    name:
      CSharp:
      - id: ERC.ThreadInfo.ThreadID*
        name: ThreadID
        nameWithType: ThreadInfo.ThreadID
        qualifiedName: ERC.ThreadInfo.ThreadID
      VB:
      - id: ERC.ThreadInfo.ThreadID*
        name: ThreadID
        nameWithType: ThreadInfo.ThreadID
        qualifiedName: ERC.ThreadInfo.ThreadID
    isDefinition: true
    commentId: Overload:ERC.ThreadInfo.ThreadID
  ERC.Structures:
    name:
      CSharp:
      - name: ERC.Structures
        nameWithType: ERC.Structures
        qualifiedName: ERC.Structures
      VB:
      - name: ERC.Structures
        nameWithType: ERC.Structures
        qualifiedName: ERC.Structures
    isDefinition: true
    commentId: N:ERC.Structures
  ERC.Structures.CONTEXT32:
    name:
      CSharp:
      - id: ERC.Structures.CONTEXT32
        name: CONTEXT32
        nameWithType: CONTEXT32
        qualifiedName: ERC.Structures.CONTEXT32
      VB:
      - id: ERC.Structures.CONTEXT32
        name: CONTEXT32
        nameWithType: CONTEXT32
        qualifiedName: ERC.Structures.CONTEXT32
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.CONTEXT32
  ERC.Structures.CONTEXT64:
    name:
      CSharp:
      - id: ERC.Structures.CONTEXT64
        name: CONTEXT64
        nameWithType: CONTEXT64
        qualifiedName: ERC.Structures.CONTEXT64
      VB:
      - id: ERC.Structures.CONTEXT64
        name: CONTEXT64
        nameWithType: CONTEXT64
        qualifiedName: ERC.Structures.CONTEXT64
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.CONTEXT64
  ERC.ThreadInfo.Get_Context*:
    name:
      CSharp:
      - id: ERC.ThreadInfo.Get_Context*
        name: Get_Context
        nameWithType: ThreadInfo.Get_Context
        qualifiedName: ERC.ThreadInfo.Get_Context
      VB:
      - id: ERC.ThreadInfo.Get_Context*
        name: Get_Context
        nameWithType: ThreadInfo.Get_Context
        qualifiedName: ERC.ThreadInfo.Get_Context
    isDefinition: true
    commentId: Overload:ERC.ThreadInfo.Get_Context
  System.Collections.Generic.List{System.IntPtr}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.IntPtr}
  ERC.ThreadInfo.GetSehChain*:
    name:
      CSharp:
      - id: ERC.ThreadInfo.GetSehChain*
        name: GetSehChain
        nameWithType: ThreadInfo.GetSehChain
        qualifiedName: ERC.ThreadInfo.GetSehChain
      VB:
      - id: ERC.ThreadInfo.GetSehChain*
        name: GetSehChain
        nameWithType: ThreadInfo.GetSehChain
        qualifiedName: ERC.ThreadInfo.GetSehChain
    isDefinition: true
    commentId: Overload:ERC.ThreadInfo.GetSehChain
  ERC.Structures.TEB:
    name:
      CSharp:
      - id: ERC.Structures.TEB
        name: TEB
        nameWithType: TEB
        qualifiedName: ERC.Structures.TEB
      VB:
      - id: ERC.Structures.TEB
        name: TEB
        nameWithType: TEB
        qualifiedName: ERC.Structures.TEB
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.TEB
  ERC.ThreadInfo.GetTeb*:
    name:
      CSharp:
      - id: ERC.ThreadInfo.GetTeb*
        name: GetTeb
        nameWithType: ThreadInfo.GetTeb
        qualifiedName: ERC.ThreadInfo.GetTeb
      VB:
      - id: ERC.ThreadInfo.GetTeb*
        name: GetTeb
        nameWithType: ThreadInfo.GetTeb
        qualifiedName: ERC.ThreadInfo.GetTeb
    isDefinition: true
    commentId: Overload:ERC.ThreadInfo.GetTeb
  ERC.ThreadInfo.ToString*:
    name:
      CSharp:
      - id: ERC.ThreadInfo.ToString*
        name: ToString
        nameWithType: ThreadInfo.ToString
        qualifiedName: ERC.ThreadInfo.ToString
      VB:
      - id: ERC.ThreadInfo.ToString*
        name: ToString
        nameWithType: ThreadInfo.ToString
        qualifiedName: ERC.ThreadInfo.ToString
    isDefinition: true
    commentId: Overload:ERC.ThreadInfo.ToString
  ERC.ThreadInfo:
    name:
      CSharp:
      - id: ERC.ThreadInfo
        name: ThreadInfo
        nameWithType: ThreadInfo
        qualifiedName: ERC.ThreadInfo
      VB:
      - id: ERC.ThreadInfo
        name: ThreadInfo
        nameWithType: ThreadInfo
        qualifiedName: ERC.ThreadInfo
    isDefinition: true
    commentId: T:ERC.ThreadInfo
  ERC.Utilities.Convert.HexToAscii*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.HexToAscii*
        name: HexToAscii
        nameWithType: Convert.HexToAscii
        qualifiedName: ERC.Utilities.Convert.HexToAscii
      VB:
      - id: ERC.Utilities.Convert.HexToAscii*
        name: HexToAscii
        nameWithType: Convert.HexToAscii
        qualifiedName: ERC.Utilities.Convert.HexToAscii
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.HexToAscii
  ERC.Utilities.Convert.HexToBytes*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.HexToBytes*
        name: HexToBytes
        nameWithType: Convert.HexToBytes
        qualifiedName: ERC.Utilities.Convert.HexToBytes
      VB:
      - id: ERC.Utilities.Convert.HexToBytes*
        name: HexToBytes
        nameWithType: Convert.HexToBytes
        qualifiedName: ERC.Utilities.Convert.HexToBytes
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.HexToBytes
  ERC.Utilities.Convert.AsciiToBytes*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.AsciiToBytes*
        name: AsciiToBytes
        nameWithType: Convert.AsciiToBytes
        qualifiedName: ERC.Utilities.Convert.AsciiToBytes
      VB:
      - id: ERC.Utilities.Convert.AsciiToBytes*
        name: AsciiToBytes
        nameWithType: Convert.AsciiToBytes
        qualifiedName: ERC.Utilities.Convert.AsciiToBytes
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.AsciiToBytes
  ERC.Utilities.Convert.AsciiToHex*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.AsciiToHex*
        name: AsciiToHex
        nameWithType: Convert.AsciiToHex
        qualifiedName: ERC.Utilities.Convert.AsciiToHex
      VB:
      - id: ERC.Utilities.Convert.AsciiToHex*
        name: AsciiToHex
        nameWithType: Convert.AsciiToHex
        qualifiedName: ERC.Utilities.Convert.AsciiToHex
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.AsciiToHex
  ERC.Utilities.Convert.UnicodeToBytes*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.UnicodeToBytes*
        name: UnicodeToBytes
        nameWithType: Convert.UnicodeToBytes
        qualifiedName: ERC.Utilities.Convert.UnicodeToBytes
      VB:
      - id: ERC.Utilities.Convert.UnicodeToBytes*
        name: UnicodeToBytes
        nameWithType: Convert.UnicodeToBytes
        qualifiedName: ERC.Utilities.Convert.UnicodeToBytes
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.UnicodeToBytes
  ERC.Utilities.Convert.UnicodeToHex*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.UnicodeToHex*
        name: UnicodeToHex
        nameWithType: Convert.UnicodeToHex
        qualifiedName: ERC.Utilities.Convert.UnicodeToHex
      VB:
      - id: ERC.Utilities.Convert.UnicodeToHex*
        name: UnicodeToHex
        nameWithType: Convert.UnicodeToHex
        qualifiedName: ERC.Utilities.Convert.UnicodeToHex
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.UnicodeToHex
  ERC.Utilities.Convert.UTF7ToBytes*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.UTF7ToBytes*
        name: UTF7ToBytes
        nameWithType: Convert.UTF7ToBytes
        qualifiedName: ERC.Utilities.Convert.UTF7ToBytes
      VB:
      - id: ERC.Utilities.Convert.UTF7ToBytes*
        name: UTF7ToBytes
        nameWithType: Convert.UTF7ToBytes
        qualifiedName: ERC.Utilities.Convert.UTF7ToBytes
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.UTF7ToBytes
  ERC.Utilities.Convert.UTF7ToHex*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.UTF7ToHex*
        name: UTF7ToHex
        nameWithType: Convert.UTF7ToHex
        qualifiedName: ERC.Utilities.Convert.UTF7ToHex
      VB:
      - id: ERC.Utilities.Convert.UTF7ToHex*
        name: UTF7ToHex
        nameWithType: Convert.UTF7ToHex
        qualifiedName: ERC.Utilities.Convert.UTF7ToHex
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.UTF7ToHex
  ERC.Utilities.Convert.UTF8ToBytes*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.UTF8ToBytes*
        name: UTF8ToBytes
        nameWithType: Convert.UTF8ToBytes
        qualifiedName: ERC.Utilities.Convert.UTF8ToBytes
      VB:
      - id: ERC.Utilities.Convert.UTF8ToBytes*
        name: UTF8ToBytes
        nameWithType: Convert.UTF8ToBytes
        qualifiedName: ERC.Utilities.Convert.UTF8ToBytes
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.UTF8ToBytes
  ERC.Utilities.Convert.UTF8ToHex*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.UTF8ToHex*
        name: UTF8ToHex
        nameWithType: Convert.UTF8ToHex
        qualifiedName: ERC.Utilities.Convert.UTF8ToHex
      VB:
      - id: ERC.Utilities.Convert.UTF8ToHex*
        name: UTF8ToHex
        nameWithType: Convert.UTF8ToHex
        qualifiedName: ERC.Utilities.Convert.UTF8ToHex
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.UTF8ToHex
  ERC.Utilities.Convert.UTF32ToBytes*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.UTF32ToBytes*
        name: UTF32ToBytes
        nameWithType: Convert.UTF32ToBytes
        qualifiedName: ERC.Utilities.Convert.UTF32ToBytes
      VB:
      - id: ERC.Utilities.Convert.UTF32ToBytes*
        name: UTF32ToBytes
        nameWithType: Convert.UTF32ToBytes
        qualifiedName: ERC.Utilities.Convert.UTF32ToBytes
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.UTF32ToBytes
  ERC.Utilities.Convert.UTF32ToHex*:
    name:
      CSharp:
      - id: ERC.Utilities.Convert.UTF32ToHex*
        name: UTF32ToHex
        nameWithType: Convert.UTF32ToHex
        qualifiedName: ERC.Utilities.Convert.UTF32ToHex
      VB:
      - id: ERC.Utilities.Convert.UTF32ToHex*
        name: UTF32ToHex
        nameWithType: Convert.UTF32ToHex
        qualifiedName: ERC.Utilities.Convert.UTF32ToHex
    isDefinition: true
    commentId: Overload:ERC.Utilities.Convert.UTF32ToHex
  ERC.Utilities.Convert:
    name:
      CSharp:
      - id: ERC.Utilities.Convert
        name: Convert
        nameWithType: Convert
        qualifiedName: ERC.Utilities.Convert
      VB:
      - id: ERC.Utilities.Convert
        name: Convert
        nameWithType: Convert
        qualifiedName: ERC.Utilities.Convert
    isDefinition: true
    commentId: T:ERC.Utilities.Convert
  ERC.ProcessInfo.ProcessName:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessName
        name: ProcessName
        nameWithType: ProcessInfo.ProcessName
        qualifiedName: ERC.ProcessInfo.ProcessName
      VB:
      - id: ERC.ProcessInfo.ProcessName
        name: ProcessName
        nameWithType: ProcessInfo.ProcessName
        qualifiedName: ERC.ProcessInfo.ProcessName
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: P:ERC.ProcessInfo.ProcessName
  ERC.ProcessInfo.ProcessDescription:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessDescription
        name: ProcessDescription
        nameWithType: ProcessInfo.ProcessDescription
        qualifiedName: ERC.ProcessInfo.ProcessDescription
      VB:
      - id: ERC.ProcessInfo.ProcessDescription
        name: ProcessDescription
        nameWithType: ProcessInfo.ProcessDescription
        qualifiedName: ERC.ProcessInfo.ProcessDescription
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: P:ERC.ProcessInfo.ProcessDescription
  ERC.ProcessInfo.ProcessPath:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessPath
        name: ProcessPath
        nameWithType: ProcessInfo.ProcessPath
        qualifiedName: ERC.ProcessInfo.ProcessPath
      VB:
      - id: ERC.ProcessInfo.ProcessPath
        name: ProcessPath
        nameWithType: ProcessInfo.ProcessPath
        qualifiedName: ERC.ProcessInfo.ProcessPath
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: P:ERC.ProcessInfo.ProcessPath
  ERC.ProcessInfo.ProcessID:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessID
        name: ProcessID
        nameWithType: ProcessInfo.ProcessID
        qualifiedName: ERC.ProcessInfo.ProcessID
      VB:
      - id: ERC.ProcessInfo.ProcessID
        name: ProcessID
        nameWithType: ProcessInfo.ProcessID
        qualifiedName: ERC.ProcessInfo.ProcessID
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: P:ERC.ProcessInfo.ProcessID
  ERC.ProcessInfo.ProcessHandle:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessHandle
        name: ProcessHandle
        nameWithType: ProcessInfo.ProcessHandle
        qualifiedName: ERC.ProcessInfo.ProcessHandle
      VB:
      - id: ERC.ProcessInfo.ProcessHandle
        name: ProcessHandle
        nameWithType: ProcessInfo.ProcessHandle
        qualifiedName: ERC.ProcessInfo.ProcessHandle
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: P:ERC.ProcessInfo.ProcessHandle
  ERC.ProcessInfo.ProcessCurrent:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessCurrent
        name: ProcessCurrent
        nameWithType: ProcessInfo.ProcessCurrent
        qualifiedName: ERC.ProcessInfo.ProcessCurrent
      VB:
      - id: ERC.ProcessInfo.ProcessCurrent
        name: ProcessCurrent
        nameWithType: ProcessInfo.ProcessCurrent
        qualifiedName: ERC.ProcessInfo.ProcessCurrent
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: P:ERC.ProcessInfo.ProcessCurrent
  ERC.ProcessInfo.ProcessMachineType:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ProcessMachineType
        name: ProcessMachineType
        nameWithType: ProcessInfo.ProcessMachineType
        qualifiedName: ERC.ProcessInfo.ProcessMachineType
      VB:
      - id: ERC.ProcessInfo.ProcessMachineType
        name: ProcessMachineType
        nameWithType: ProcessInfo.ProcessMachineType
        qualifiedName: ERC.ProcessInfo.ProcessMachineType
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: P:ERC.ProcessInfo.ProcessMachineType
  ERC.ProcessInfo.ModulesInfo:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ModulesInfo
        name: ModulesInfo
        nameWithType: ProcessInfo.ModulesInfo
        qualifiedName: ERC.ProcessInfo.ModulesInfo
      VB:
      - id: ERC.ProcessInfo.ModulesInfo
        name: ModulesInfo
        nameWithType: ProcessInfo.ModulesInfo
        qualifiedName: ERC.ProcessInfo.ModulesInfo
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: F:ERC.ProcessInfo.ModulesInfo
  ERC.ProcessInfo.ThreadsInfo:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ThreadsInfo
        name: ThreadsInfo
        nameWithType: ProcessInfo.ThreadsInfo
        qualifiedName: ERC.ProcessInfo.ThreadsInfo
      VB:
      - id: ERC.ProcessInfo.ThreadsInfo
        name: ThreadsInfo
        nameWithType: ProcessInfo.ThreadsInfo
        qualifiedName: ERC.ProcessInfo.ThreadsInfo
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: F:ERC.ProcessInfo.ThreadsInfo
  ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore):
    name:
      CSharp:
      - id: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
        name: ListLocalProcesses
        nameWithType: ProcessInfo.ListLocalProcesses
        qualifiedName: ERC.ProcessInfo.ListLocalProcesses
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ERC.ErcCore
        name: ErcCore
        nameWithType: ErcCore
        qualifiedName: ERC.ErcCore
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
        name: ListLocalProcesses
        nameWithType: ProcessInfo.ListLocalProcesses
        qualifiedName: ERC.ProcessInfo.ListLocalProcesses
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ERC.ErcCore
        name: ErcCore
        nameWithType: ErcCore
        qualifiedName: ERC.ErcCore
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
  ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String):
    name:
      CSharp:
      - id: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
        name: ListRemoteProcesses
        nameWithType: ProcessInfo.ListRemoteProcesses
        qualifiedName: ERC.ProcessInfo.ListRemoteProcesses
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ERC.ErcCore
        name: ErcCore
        nameWithType: ErcCore
        qualifiedName: ERC.ErcCore
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
        name: ListRemoteProcesses
        nameWithType: ProcessInfo.ListRemoteProcesses
        qualifiedName: ERC.ProcessInfo.ListRemoteProcesses
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ERC.ErcCore
        name: ErcCore
        nameWithType: ErcCore
        qualifiedName: ERC.ErcCore
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
  ERC.ProcessInfo.GetProcessModules:
    name:
      CSharp:
      - id: ERC.ProcessInfo.GetProcessModules
        name: GetProcessModules
        nameWithType: ProcessInfo.GetProcessModules
        qualifiedName: ERC.ProcessInfo.GetProcessModules
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.GetProcessModules
        name: GetProcessModules
        nameWithType: ProcessInfo.GetProcessModules
        qualifiedName: ERC.ProcessInfo.GetProcessModules
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.GetProcessModules
  ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process):
    name:
      CSharp:
      - id: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
        name: Is64Bit
        nameWithType: ProcessInfo.Is64Bit
        qualifiedName: ERC.ProcessInfo.Is64Bit
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Diagnostics.Process
        name: Process
        nameWithType: Process
        qualifiedName: System.Diagnostics.Process
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
        name: Is64Bit
        nameWithType: ProcessInfo.Is64Bit
        qualifiedName: ERC.ProcessInfo.Is64Bit
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Diagnostics.Process
        name: Process
        nameWithType: Process
        qualifiedName: System.Diagnostics.Process
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
  ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String}):
    name:
      CSharp:
      - id: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
        name: SearchAllMemoryPPR
        nameWithType: ProcessInfo.SearchAllMemoryPPR
        qualifiedName: ERC.ProcessInfo.SearchAllMemoryPPR
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
        name: SearchAllMemoryPPR
        nameWithType: ProcessInfo.SearchAllMemoryPPR
        qualifiedName: ERC.ProcessInfo.SearchAllMemoryPPR
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
  ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String}):
    name:
      CSharp:
      - id: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
        name: SearchAllMemoryPPR
        nameWithType: ProcessInfo.SearchAllMemoryPPR
        qualifiedName: ERC.ProcessInfo.SearchAllMemoryPPR
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
        name: SearchAllMemoryPPR
        nameWithType: ProcessInfo.SearchAllMemoryPPR
        qualifiedName: ERC.ProcessInfo.SearchAllMemoryPPR
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
  ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String}):
    name:
      CSharp:
      - id: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
        name: SearchMemory
        nameWithType: ProcessInfo.SearchMemory
        qualifiedName: ERC.ProcessInfo.SearchMemory
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
        name: SearchMemory
        nameWithType: ProcessInfo.SearchMemory
        qualifiedName: ERC.ProcessInfo.SearchMemory
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
  ? ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
  : name:
      CSharp:
      - id: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
        name: SearchMemory
        nameWithType: ProcessInfo.SearchMemory
        qualifiedName: ERC.ProcessInfo.SearchMemory
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
        name: SearchMemory
        nameWithType: ProcessInfo.SearchMemory
        qualifiedName: ERC.ProcessInfo.SearchMemory
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
  ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
        name: FindNRP
        nameWithType: ProcessInfo.FindNRP
        qualifiedName: ERC.ProcessInfo.FindNRP
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
        name: FindNRP
        nameWithType: ProcessInfo.FindNRP
        qualifiedName: ERC.ProcessInfo.FindNRP
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
  ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean):
    name:
      CSharp:
      - id: ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
        name: CreateExcludesList
        nameWithType: ProcessInfo.CreateExcludesList
        qualifiedName: ERC.ProcessInfo.CreateExcludesList
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
        name: CreateExcludesList
        nameWithType: ProcessInfo.CreateExcludesList
        qualifiedName: ERC.ProcessInfo.CreateExcludesList
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  ERC.ProcessInfo.ToString:
    name:
      CSharp:
      - id: ERC.ProcessInfo.ToString
        name: ToString
        nameWithType: ProcessInfo.ToString
        qualifiedName: ERC.ProcessInfo.ToString
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.ToString
        name: ToString
        nameWithType: ProcessInfo.ToString
        qualifiedName: ERC.ProcessInfo.ToString
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.ToString
  ERC.ProcessInfo.GetModuleHandles:
    name:
      CSharp:
      - id: ERC.ProcessInfo.GetModuleHandles
        name: GetModuleHandles
        nameWithType: ProcessInfo.GetModuleHandles
        qualifiedName: ERC.ProcessInfo.GetModuleHandles
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.GetModuleHandles
        name: GetModuleHandles
        nameWithType: ProcessInfo.GetModuleHandles
        qualifiedName: ERC.ProcessInfo.GetModuleHandles
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.GetModuleHandles
  ERC.ProcessInfo.GetProcessModuleInformation:
    name:
      CSharp:
      - id: ERC.ProcessInfo.GetProcessModuleInformation
        name: GetProcessModuleInformation
        nameWithType: ProcessInfo.GetProcessModuleInformation
        qualifiedName: ERC.ProcessInfo.GetProcessModuleInformation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.GetProcessModuleInformation
        name: GetProcessModuleInformation
        nameWithType: ProcessInfo.GetProcessModuleInformation
        qualifiedName: ERC.ProcessInfo.GetProcessModuleInformation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.GetProcessModuleInformation
  ERC.ProcessInfo.GetProcessThreadInformation:
    name:
      CSharp:
      - id: ERC.ProcessInfo.GetProcessThreadInformation
        name: GetProcessThreadInformation
        nameWithType: ProcessInfo.GetProcessThreadInformation
        qualifiedName: ERC.ProcessInfo.GetProcessThreadInformation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.GetProcessThreadInformation
        name: GetProcessThreadInformation
        nameWithType: ProcessInfo.GetProcessThreadInformation
        qualifiedName: ERC.ProcessInfo.GetProcessThreadInformation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.GetProcessThreadInformation
  ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32):
    name:
      CSharp:
      - id: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
        name: DumpMemoryRegion
        nameWithType: ProcessInfo.DumpMemoryRegion
        qualifiedName: ERC.ProcessInfo.DumpMemoryRegion
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
        name: DumpMemoryRegion
        nameWithType: ProcessInfo.DumpMemoryRegion
        qualifiedName: ERC.ProcessInfo.DumpMemoryRegion
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ERC.ProcessInfo
    commentId: M:ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
  ERC.Utilities.OpcodeAssembler.#ctor*:
    name:
      CSharp:
      - id: ERC.Utilities.OpcodeAssembler.#ctor*
        name: OpcodeAssembler
        nameWithType: OpcodeAssembler.OpcodeAssembler
        qualifiedName: ERC.Utilities.OpcodeAssembler.OpcodeAssembler
      VB:
      - id: ERC.Utilities.OpcodeAssembler.#ctor*
        name: OpcodeAssembler
        nameWithType: OpcodeAssembler.OpcodeAssembler
        qualifiedName: ERC.Utilities.OpcodeAssembler.OpcodeAssembler
    isDefinition: true
    commentId: Overload:ERC.Utilities.OpcodeAssembler.#ctor
  ERC.Utilities.OpcodeAssembler.AssembleOpcodes*:
    name:
      CSharp:
      - id: ERC.Utilities.OpcodeAssembler.AssembleOpcodes*
        name: AssembleOpcodes
        nameWithType: OpcodeAssembler.AssembleOpcodes
        qualifiedName: ERC.Utilities.OpcodeAssembler.AssembleOpcodes
      VB:
      - id: ERC.Utilities.OpcodeAssembler.AssembleOpcodes*
        name: AssembleOpcodes
        nameWithType: OpcodeAssembler.AssembleOpcodes
        qualifiedName: ERC.Utilities.OpcodeAssembler.AssembleOpcodes
    isDefinition: true
    commentId: Overload:ERC.Utilities.OpcodeAssembler.AssembleOpcodes
  ERC.Utilities.OpcodeAssembler:
    name:
      CSharp:
      - id: ERC.Utilities.OpcodeAssembler
        name: OpcodeAssembler
        nameWithType: OpcodeAssembler
        qualifiedName: ERC.Utilities.OpcodeAssembler
      VB:
      - id: ERC.Utilities.OpcodeAssembler
        name: OpcodeAssembler
        nameWithType: OpcodeAssembler
        qualifiedName: ERC.Utilities.OpcodeAssembler
    isDefinition: true
    commentId: T:ERC.Utilities.OpcodeAssembler
  ERC.Utilities.OpcodeDisassembler.#ctor*:
    name:
      CSharp:
      - id: ERC.Utilities.OpcodeDisassembler.#ctor*
        name: OpcodeDisassembler
        nameWithType: OpcodeDisassembler.OpcodeDisassembler
        qualifiedName: ERC.Utilities.OpcodeDisassembler.OpcodeDisassembler
      VB:
      - id: ERC.Utilities.OpcodeDisassembler.#ctor*
        name: OpcodeDisassembler
        nameWithType: OpcodeDisassembler.OpcodeDisassembler
        qualifiedName: ERC.Utilities.OpcodeDisassembler.OpcodeDisassembler
    isDefinition: true
    commentId: Overload:ERC.Utilities.OpcodeDisassembler.#ctor
  ERC.Utilities.OpcodeDisassembler.Disassemble*:
    name:
      CSharp:
      - id: ERC.Utilities.OpcodeDisassembler.Disassemble*
        name: Disassemble
        nameWithType: OpcodeDisassembler.Disassemble
        qualifiedName: ERC.Utilities.OpcodeDisassembler.Disassemble
      VB:
      - id: ERC.Utilities.OpcodeDisassembler.Disassemble*
        name: Disassemble
        nameWithType: OpcodeDisassembler.Disassemble
        qualifiedName: ERC.Utilities.OpcodeDisassembler.Disassemble
    isDefinition: true
    commentId: Overload:ERC.Utilities.OpcodeDisassembler.Disassemble
  ERC.Utilities.OpcodeDisassembler:
    name:
      CSharp:
      - id: ERC.Utilities.OpcodeDisassembler
        name: OpcodeDisassembler
        nameWithType: OpcodeDisassembler
        qualifiedName: ERC.Utilities.OpcodeDisassembler
      VB:
      - id: ERC.Utilities.OpcodeDisassembler
        name: OpcodeDisassembler
        nameWithType: OpcodeDisassembler
        qualifiedName: ERC.Utilities.OpcodeDisassembler
    isDefinition: true
    commentId: T:ERC.Utilities.OpcodeDisassembler
  ERC.Utilities.PatternTools.PatternCreate*:
    name:
      CSharp:
      - id: ERC.Utilities.PatternTools.PatternCreate*
        name: PatternCreate
        nameWithType: PatternTools.PatternCreate
        qualifiedName: ERC.Utilities.PatternTools.PatternCreate
      VB:
      - id: ERC.Utilities.PatternTools.PatternCreate*
        name: PatternCreate
        nameWithType: PatternTools.PatternCreate
        qualifiedName: ERC.Utilities.PatternTools.PatternCreate
    isDefinition: true
    commentId: Overload:ERC.Utilities.PatternTools.PatternCreate
  ERC.Utilities.PatternTools.PatternOffset*:
    name:
      CSharp:
      - id: ERC.Utilities.PatternTools.PatternOffset*
        name: PatternOffset
        nameWithType: PatternTools.PatternOffset
        qualifiedName: ERC.Utilities.PatternTools.PatternOffset
      VB:
      - id: ERC.Utilities.PatternTools.PatternOffset*
        name: PatternOffset
        nameWithType: PatternTools.PatternOffset
        qualifiedName: ERC.Utilities.PatternTools.PatternOffset
    isDefinition: true
    commentId: Overload:ERC.Utilities.PatternTools.PatternOffset
  ERC.Utilities.PatternTools:
    name:
      CSharp:
      - id: ERC.Utilities.PatternTools
        name: PatternTools
        nameWithType: PatternTools
        qualifiedName: ERC.Utilities.PatternTools
      VB:
      - id: ERC.Utilities.PatternTools
        name: PatternTools
        nameWithType: PatternTools
        qualifiedName: ERC.Utilities.PatternTools
    isDefinition: true
    commentId: T:ERC.Utilities.PatternTools
  ERC.Utilities.Payloads.ByteArrayConstructor*:
    name:
      CSharp:
      - id: ERC.Utilities.Payloads.ByteArrayConstructor*
        name: ByteArrayConstructor
        nameWithType: Payloads.ByteArrayConstructor
        qualifiedName: ERC.Utilities.Payloads.ByteArrayConstructor
      VB:
      - id: ERC.Utilities.Payloads.ByteArrayConstructor*
        name: ByteArrayConstructor
        nameWithType: Payloads.ByteArrayConstructor
        qualifiedName: ERC.Utilities.Payloads.ByteArrayConstructor
    isDefinition: true
    commentId: Overload:ERC.Utilities.Payloads.ByteArrayConstructor
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{System.String,System.Byte[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Byte[]}
  ERC.Utilities.Payloads.EggHunterConstructor*:
    name:
      CSharp:
      - id: ERC.Utilities.Payloads.EggHunterConstructor*
        name: EggHunterConstructor
        nameWithType: Payloads.EggHunterConstructor
        qualifiedName: ERC.Utilities.Payloads.EggHunterConstructor
      VB:
      - id: ERC.Utilities.Payloads.EggHunterConstructor*
        name: EggHunterConstructor
        nameWithType: Payloads.EggHunterConstructor
        qualifiedName: ERC.Utilities.Payloads.EggHunterConstructor
    isDefinition: true
    commentId: Overload:ERC.Utilities.Payloads.EggHunterConstructor
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  ERC.Utilities.Payloads.PopPopRet*:
    name:
      CSharp:
      - id: ERC.Utilities.Payloads.PopPopRet*
        name: PopPopRet
        nameWithType: Payloads.PopPopRet
        qualifiedName: ERC.Utilities.Payloads.PopPopRet
      VB:
      - id: ERC.Utilities.Payloads.PopPopRet*
        name: PopPopRet
        nameWithType: Payloads.PopPopRet
        qualifiedName: ERC.Utilities.Payloads.PopPopRet
    isDefinition: true
    commentId: Overload:ERC.Utilities.Payloads.PopPopRet
  System.Tuple`3:
    name:
      CSharp:
      - id: System.Tuple`3
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Tuple`3
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Tuple`3
  System.Tuple{System.Boolean,System.Byte[],System.Byte[]}:
    name:
      CSharp:
      - id: System.Tuple`3
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Tuple`3
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Tuple`3
    parent: System
    commentId: T:System.Tuple{System.Boolean,System.Byte[],System.Byte[]}
  ERC.Utilities.Payloads.ByteCompare*:
    name:
      CSharp:
      - id: ERC.Utilities.Payloads.ByteCompare*
        name: ByteCompare
        nameWithType: Payloads.ByteCompare
        qualifiedName: ERC.Utilities.Payloads.ByteCompare
      VB:
      - id: ERC.Utilities.Payloads.ByteCompare*
        name: ByteCompare
        nameWithType: Payloads.ByteCompare
        qualifiedName: ERC.Utilities.Payloads.ByteCompare
    isDefinition: true
    commentId: Overload:ERC.Utilities.Payloads.ByteCompare
  ERC.Utilities.Payloads:
    name:
      CSharp:
      - id: ERC.Utilities.Payloads
        name: Payloads
        nameWithType: Payloads
        qualifiedName: ERC.Utilities.Payloads
      VB:
      - id: ERC.Utilities.Payloads
        name: Payloads
        nameWithType: Payloads
        qualifiedName: ERC.Utilities.Payloads
    isDefinition: true
    commentId: T:ERC.Utilities.Payloads
  ERC.Utilities.PtrRemover.RemovePointers*:
    name:
      CSharp:
      - id: ERC.Utilities.PtrRemover.RemovePointers*
        name: RemovePointers
        nameWithType: PtrRemover.RemovePointers
        qualifiedName: ERC.Utilities.PtrRemover.RemovePointers
      VB:
      - id: ERC.Utilities.PtrRemover.RemovePointers*
        name: RemovePointers
        nameWithType: PtrRemover.RemovePointers
        qualifiedName: ERC.Utilities.PtrRemover.RemovePointers
    isDefinition: true
    commentId: Overload:ERC.Utilities.PtrRemover.RemovePointers
  System.Collections.Generic.Dictionary{System.IntPtr,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: System.IntPtr
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.IntPtr,System.String}
  ERC.Utilities.PtrRemover.RemovePointersProtection*:
    name:
      CSharp:
      - id: ERC.Utilities.PtrRemover.RemovePointersProtection*
        name: RemovePointersProtection
        nameWithType: PtrRemover.RemovePointersProtection
        qualifiedName: ERC.Utilities.PtrRemover.RemovePointersProtection
      VB:
      - id: ERC.Utilities.PtrRemover.RemovePointersProtection*
        name: RemovePointersProtection
        nameWithType: PtrRemover.RemovePointersProtection
        qualifiedName: ERC.Utilities.PtrRemover.RemovePointersProtection
    isDefinition: true
    commentId: Overload:ERC.Utilities.PtrRemover.RemovePointersProtection
  ERC.Utilities.PtrRemover:
    name:
      CSharp:
      - id: ERC.Utilities.PtrRemover
        name: PtrRemover
        nameWithType: PtrRemover
        qualifiedName: ERC.Utilities.PtrRemover
      VB:
      - id: ERC.Utilities.PtrRemover
        name: PtrRemover
        nameWithType: PtrRemover
        qualifiedName: ERC.Utilities.PtrRemover
    isDefinition: true
    commentId: T:ERC.Utilities.PtrRemover
  System.Collections.Generic.List{System.Tuple{System.Byte[],System.String}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Tuple`2
        name: Tuple
        nameWithType: Tuple
        qualifiedName: System.Tuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Tuple{System.Byte[],System.String}}
  ERC.Utilities.RopChainGenerator32.#ctor*:
    name:
      CSharp:
      - id: ERC.Utilities.RopChainGenerator32.#ctor*
        name: RopChainGenerator32
        nameWithType: RopChainGenerator32.RopChainGenerator32
        qualifiedName: ERC.Utilities.RopChainGenerator32.RopChainGenerator32
      VB:
      - id: ERC.Utilities.RopChainGenerator32.#ctor*
        name: RopChainGenerator32
        nameWithType: RopChainGenerator32.RopChainGenerator32
        qualifiedName: ERC.Utilities.RopChainGenerator32.RopChainGenerator32
    isDefinition: true
    commentId: Overload:ERC.Utilities.RopChainGenerator32.#ctor
  ERC.Utilities.RopChainGenerator32.GenerateRopChain32*:
    name:
      CSharp:
      - id: ERC.Utilities.RopChainGenerator32.GenerateRopChain32*
        name: GenerateRopChain32
        nameWithType: RopChainGenerator32.GenerateRopChain32
        qualifiedName: ERC.Utilities.RopChainGenerator32.GenerateRopChain32
      VB:
      - id: ERC.Utilities.RopChainGenerator32.GenerateRopChain32*
        name: GenerateRopChain32
        nameWithType: RopChainGenerator32.GenerateRopChain32
        qualifiedName: ERC.Utilities.RopChainGenerator32.GenerateRopChain32
    isDefinition: true
    commentId: Overload:ERC.Utilities.RopChainGenerator32.GenerateRopChain32
  ERC.Utilities.RopChainGenerator32.X86Lists:
    name:
      CSharp:
      - id: ERC.Utilities.RopChainGenerator32.X86Lists
        name: RopChainGenerator32.X86Lists
        nameWithType: RopChainGenerator32.X86Lists
        qualifiedName: ERC.Utilities.RopChainGenerator32.X86Lists
      VB:
      - id: ERC.Utilities.RopChainGenerator32.X86Lists
        name: RopChainGenerator32.X86Lists
        nameWithType: RopChainGenerator32.X86Lists
        qualifiedName: ERC.Utilities.RopChainGenerator32.X86Lists
    isDefinition: true
    commentId: T:ERC.Utilities.RopChainGenerator32.X86Lists
  ERC.Utilities.RopChainGenerator64.#ctor*:
    name:
      CSharp:
      - id: ERC.Utilities.RopChainGenerator64.#ctor*
        name: RopChainGenerator64
        nameWithType: RopChainGenerator64.RopChainGenerator64
        qualifiedName: ERC.Utilities.RopChainGenerator64.RopChainGenerator64
      VB:
      - id: ERC.Utilities.RopChainGenerator64.#ctor*
        name: RopChainGenerator64
        nameWithType: RopChainGenerator64.RopChainGenerator64
        qualifiedName: ERC.Utilities.RopChainGenerator64.RopChainGenerator64
    isDefinition: true
    commentId: Overload:ERC.Utilities.RopChainGenerator64.#ctor
  ERC.Utilities.RopChainGenerator64.GenerateRopChain64*:
    name:
      CSharp:
      - id: ERC.Utilities.RopChainGenerator64.GenerateRopChain64*
        name: GenerateRopChain64
        nameWithType: RopChainGenerator64.GenerateRopChain64
        qualifiedName: ERC.Utilities.RopChainGenerator64.GenerateRopChain64
      VB:
      - id: ERC.Utilities.RopChainGenerator64.GenerateRopChain64*
        name: GenerateRopChain64
        nameWithType: RopChainGenerator64.GenerateRopChain64
        qualifiedName: ERC.Utilities.RopChainGenerator64.GenerateRopChain64
    isDefinition: true
    commentId: Overload:ERC.Utilities.RopChainGenerator64.GenerateRopChain64
  ERC.Utilities.RopChainGenerator64.X64Lists:
    name:
      CSharp:
      - id: ERC.Utilities.RopChainGenerator64.X64Lists
        name: RopChainGenerator64.X64Lists
        nameWithType: RopChainGenerator64.X64Lists
        qualifiedName: ERC.Utilities.RopChainGenerator64.X64Lists
      VB:
      - id: ERC.Utilities.RopChainGenerator64.X64Lists
        name: RopChainGenerator64.X64Lists
        nameWithType: RopChainGenerator64.X64Lists
        qualifiedName: ERC.Utilities.RopChainGenerator64.X64Lists
    isDefinition: true
    commentId: T:ERC.Utilities.RopChainGenerator64.X64Lists
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  ERC.Structures.IMAGE_DOS_HEADER:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_DOS_HEADER
        name: IMAGE_DOS_HEADER
        nameWithType: IMAGE_DOS_HEADER
        qualifiedName: ERC.Structures.IMAGE_DOS_HEADER
      VB:
      - id: ERC.Structures.IMAGE_DOS_HEADER
        name: IMAGE_DOS_HEADER
        nameWithType: IMAGE_DOS_HEADER
        qualifiedName: ERC.Structures.IMAGE_DOS_HEADER
    isDefinition: true
    commentId: T:ERC.Structures.IMAGE_DOS_HEADER
  System.UInt16:
    name:
      CSharp:
      - id: System.UInt16
        name: UInt16
        nameWithType: UInt16
        qualifiedName: System.UInt16
        isExternal: true
      VB:
      - id: System.UInt16
        name: UInt16
        nameWithType: UInt16
        qualifiedName: System.UInt16
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt16
  ERC.Structures.IMAGE_FILE_HEADER:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_FILE_HEADER
        name: IMAGE_FILE_HEADER
        nameWithType: IMAGE_FILE_HEADER
        qualifiedName: ERC.Structures.IMAGE_FILE_HEADER
      VB:
      - id: ERC.Structures.IMAGE_FILE_HEADER
        name: IMAGE_FILE_HEADER
        nameWithType: IMAGE_FILE_HEADER
        qualifiedName: ERC.Structures.IMAGE_FILE_HEADER
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.IMAGE_FILE_HEADER
  ERC.Structures.IMAGE_OPTIONAL_HEADER32:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32
        name: IMAGE_OPTIONAL_HEADER32
        nameWithType: IMAGE_OPTIONAL_HEADER32
        qualifiedName: ERC.Structures.IMAGE_OPTIONAL_HEADER32
      VB:
      - id: ERC.Structures.IMAGE_OPTIONAL_HEADER32
        name: IMAGE_OPTIONAL_HEADER32
        nameWithType: IMAGE_OPTIONAL_HEADER32
        qualifiedName: ERC.Structures.IMAGE_OPTIONAL_HEADER32
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.IMAGE_OPTIONAL_HEADER32
  ERC.Structures.IMAGE_NT_HEADERS32:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_NT_HEADERS32
        name: IMAGE_NT_HEADERS32
        nameWithType: IMAGE_NT_HEADERS32
        qualifiedName: ERC.Structures.IMAGE_NT_HEADERS32
      VB:
      - id: ERC.Structures.IMAGE_NT_HEADERS32
        name: IMAGE_NT_HEADERS32
        nameWithType: IMAGE_NT_HEADERS32
        qualifiedName: ERC.Structures.IMAGE_NT_HEADERS32
    isDefinition: true
    commentId: T:ERC.Structures.IMAGE_NT_HEADERS32
  ERC.Structures.IMAGE_OPTIONAL_HEADER64:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64
        name: IMAGE_OPTIONAL_HEADER64
        nameWithType: IMAGE_OPTIONAL_HEADER64
        qualifiedName: ERC.Structures.IMAGE_OPTIONAL_HEADER64
      VB:
      - id: ERC.Structures.IMAGE_OPTIONAL_HEADER64
        name: IMAGE_OPTIONAL_HEADER64
        nameWithType: IMAGE_OPTIONAL_HEADER64
        qualifiedName: ERC.Structures.IMAGE_OPTIONAL_HEADER64
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.IMAGE_OPTIONAL_HEADER64
  ERC.Structures.IMAGE_NT_HEADERS64:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_NT_HEADERS64
        name: IMAGE_NT_HEADERS64
        nameWithType: IMAGE_NT_HEADERS64
        qualifiedName: ERC.Structures.IMAGE_NT_HEADERS64
      VB:
      - id: ERC.Structures.IMAGE_NT_HEADERS64
        name: IMAGE_NT_HEADERS64
        nameWithType: IMAGE_NT_HEADERS64
        qualifiedName: ERC.Structures.IMAGE_NT_HEADERS64
    isDefinition: true
    commentId: T:ERC.Structures.IMAGE_NT_HEADERS64
  ERC.Structures.IMAGE_DATA_DIRECTORY:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_DATA_DIRECTORY
        name: IMAGE_DATA_DIRECTORY
        nameWithType: IMAGE_DATA_DIRECTORY
        qualifiedName: ERC.Structures.IMAGE_DATA_DIRECTORY
      VB:
      - id: ERC.Structures.IMAGE_DATA_DIRECTORY
        name: IMAGE_DATA_DIRECTORY
        nameWithType: IMAGE_DATA_DIRECTORY
        qualifiedName: ERC.Structures.IMAGE_DATA_DIRECTORY
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.IMAGE_DATA_DIRECTORY
  ERC.Structures.MagicType:
    name:
      CSharp:
      - id: ERC.Structures.MagicType
        name: MagicType
        nameWithType: MagicType
        qualifiedName: ERC.Structures.MagicType
      VB:
      - id: ERC.Structures.MagicType
        name: MagicType
        nameWithType: MagicType
        qualifiedName: ERC.Structures.MagicType
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.MagicType
  System.Byte:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Byte
  ERC.Structures.SubSystemType:
    name:
      CSharp:
      - id: ERC.Structures.SubSystemType
        name: SubSystemType
        nameWithType: SubSystemType
        qualifiedName: ERC.Structures.SubSystemType
      VB:
      - id: ERC.Structures.SubSystemType
        name: SubSystemType
        nameWithType: SubSystemType
        qualifiedName: ERC.Structures.SubSystemType
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.SubSystemType
  System.UInt64:
    name:
      CSharp:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      VB:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt64
  ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        name: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        nameWithType: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        qualifiedName: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
      VB:
      - id: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        name: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        nameWithType: IMAGE_LOAD_CONFIG_CODE_INTEGRITY
        qualifiedName: ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.IMAGE_LOAD_CONFIG_CODE_INTEGRITY
  ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
        name: IMAGE_LOAD_CONFIG_DIRECTORY32
        nameWithType: IMAGE_LOAD_CONFIG_DIRECTORY32
        qualifiedName: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
      VB:
      - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
        name: IMAGE_LOAD_CONFIG_DIRECTORY32
        nameWithType: IMAGE_LOAD_CONFIG_DIRECTORY32
        qualifiedName: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
    isDefinition: true
    commentId: T:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY32
  ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64:
    name:
      CSharp:
      - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
        name: IMAGE_LOAD_CONFIG_DIRECTORY64
        nameWithType: IMAGE_LOAD_CONFIG_DIRECTORY64
        qualifiedName: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
      VB:
      - id: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
        name: IMAGE_LOAD_CONFIG_DIRECTORY64
        nameWithType: IMAGE_LOAD_CONFIG_DIRECTORY64
        qualifiedName: ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
    isDefinition: true
    commentId: T:ERC.Structures.IMAGE_LOAD_CONFIG_DIRECTORY64
  ERC.Structures.LIST_ENTRY:
    name:
      CSharp:
      - id: ERC.Structures.LIST_ENTRY
        name: LIST_ENTRY
        nameWithType: LIST_ENTRY
        qualifiedName: ERC.Structures.LIST_ENTRY
      VB:
      - id: ERC.Structures.LIST_ENTRY
        name: LIST_ENTRY
        nameWithType: LIST_ENTRY
        qualifiedName: ERC.Structures.LIST_ENTRY
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.LIST_ENTRY
  ERC.Structures.LOADED_IMAGE:
    name:
      CSharp:
      - id: ERC.Structures.LOADED_IMAGE
        name: LOADED_IMAGE
        nameWithType: LOADED_IMAGE
        qualifiedName: ERC.Structures.LOADED_IMAGE
      VB:
      - id: ERC.Structures.LOADED_IMAGE
        name: LOADED_IMAGE
        nameWithType: LOADED_IMAGE
        qualifiedName: ERC.Structures.LOADED_IMAGE
    isDefinition: true
    commentId: T:ERC.Structures.LOADED_IMAGE
  ERC.Structures.AllocationProtect:
    name:
      CSharp:
      - id: ERC.Structures.AllocationProtect
        name: AllocationProtect
        nameWithType: AllocationProtect
        qualifiedName: ERC.Structures.AllocationProtect
      VB:
      - id: ERC.Structures.AllocationProtect
        name: AllocationProtect
        nameWithType: AllocationProtect
        qualifiedName: ERC.Structures.AllocationProtect
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.AllocationProtect
  ERC.Structures.StateEnum:
    name:
      CSharp:
      - id: ERC.Structures.StateEnum
        name: StateEnum
        nameWithType: StateEnum
        qualifiedName: ERC.Structures.StateEnum
      VB:
      - id: ERC.Structures.StateEnum
        name: StateEnum
        nameWithType: StateEnum
        qualifiedName: ERC.Structures.StateEnum
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.StateEnum
  ERC.Structures.TypeEnum:
    name:
      CSharp:
      - id: ERC.Structures.TypeEnum
        name: TypeEnum
        nameWithType: TypeEnum
        qualifiedName: ERC.Structures.TypeEnum
      VB:
      - id: ERC.Structures.TypeEnum
        name: TypeEnum
        nameWithType: TypeEnum
        qualifiedName: ERC.Structures.TypeEnum
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.TypeEnum
  ERC.Structures.MEMORY_BASIC_INFORMATION32:
    name:
      CSharp:
      - id: ERC.Structures.MEMORY_BASIC_INFORMATION32
        name: MEMORY_BASIC_INFORMATION32
        nameWithType: MEMORY_BASIC_INFORMATION32
        qualifiedName: ERC.Structures.MEMORY_BASIC_INFORMATION32
      VB:
      - id: ERC.Structures.MEMORY_BASIC_INFORMATION32
        name: MEMORY_BASIC_INFORMATION32
        nameWithType: MEMORY_BASIC_INFORMATION32
        qualifiedName: ERC.Structures.MEMORY_BASIC_INFORMATION32
    isDefinition: true
    commentId: T:ERC.Structures.MEMORY_BASIC_INFORMATION32
  ERC.Structures.MEMORY_BASIC_INFORMATION64:
    name:
      CSharp:
      - id: ERC.Structures.MEMORY_BASIC_INFORMATION64
        name: MEMORY_BASIC_INFORMATION64
        nameWithType: MEMORY_BASIC_INFORMATION64
        qualifiedName: ERC.Structures.MEMORY_BASIC_INFORMATION64
      VB:
      - id: ERC.Structures.MEMORY_BASIC_INFORMATION64
        name: MEMORY_BASIC_INFORMATION64
        nameWithType: MEMORY_BASIC_INFORMATION64
        qualifiedName: ERC.Structures.MEMORY_BASIC_INFORMATION64
    isDefinition: true
    commentId: T:ERC.Structures.MEMORY_BASIC_INFORMATION64
  ERC.Structures.ProcessAccessFlags:
    name:
      CSharp:
      - id: ERC.Structures.ProcessAccessFlags
        name: ProcessAccessFlags
        nameWithType: ProcessAccessFlags
        qualifiedName: ERC.Structures.ProcessAccessFlags
      VB:
      - id: ERC.Structures.ProcessAccessFlags
        name: ProcessAccessFlags
        nameWithType: ProcessAccessFlags
        qualifiedName: ERC.Structures.ProcessAccessFlags
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.ProcessAccessFlags
  System.FlagsAttribute:
    name:
      CSharp:
      - id: System.FlagsAttribute
        name: FlagsAttribute
        nameWithType: FlagsAttribute
        qualifiedName: System.FlagsAttribute
        isExternal: true
      VB:
      - id: System.FlagsAttribute
        name: FlagsAttribute
        nameWithType: FlagsAttribute
        qualifiedName: System.FlagsAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.FlagsAttribute
  System.FlagsAttribute.#ctor:
    name:
      CSharp:
      - id: System.FlagsAttribute.#ctor
        name: FlagsAttribute
        nameWithType: FlagsAttribute.FlagsAttribute
        qualifiedName: System.FlagsAttribute.FlagsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.FlagsAttribute.#ctor
        name: FlagsAttribute
        nameWithType: FlagsAttribute.FlagsAttribute
        qualifiedName: System.FlagsAttribute.FlagsAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.FlagsAttribute
    commentId: M:System.FlagsAttribute.#ctor
  ERC.Structures.LoadLibraryFlags:
    name:
      CSharp:
      - id: ERC.Structures.LoadLibraryFlags
        name: LoadLibraryFlags
        nameWithType: LoadLibraryFlags
        qualifiedName: ERC.Structures.LoadLibraryFlags
      VB:
      - id: ERC.Structures.LoadLibraryFlags
        name: LoadLibraryFlags
        nameWithType: LoadLibraryFlags
        qualifiedName: ERC.Structures.LoadLibraryFlags
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.LoadLibraryFlags
  ERC.Structures.ThreadAccess:
    name:
      CSharp:
      - id: ERC.Structures.ThreadAccess
        name: ThreadAccess
        nameWithType: ThreadAccess
        qualifiedName: ERC.Structures.ThreadAccess
      VB:
      - id: ERC.Structures.ThreadAccess
        name: ThreadAccess
        nameWithType: ThreadAccess
        qualifiedName: ERC.Structures.ThreadAccess
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.ThreadAccess
  ERC.Structures.CONTEXT_FLAGS:
    name:
      CSharp:
      - id: ERC.Structures.CONTEXT_FLAGS
        name: CONTEXT_FLAGS
        nameWithType: CONTEXT_FLAGS
        qualifiedName: ERC.Structures.CONTEXT_FLAGS
      VB:
      - id: ERC.Structures.CONTEXT_FLAGS
        name: CONTEXT_FLAGS
        nameWithType: CONTEXT_FLAGS
        qualifiedName: ERC.Structures.CONTEXT_FLAGS
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.CONTEXT_FLAGS
  ERC.Structures.FLOATING_SAVE_AREA:
    name:
      CSharp:
      - id: ERC.Structures.FLOATING_SAVE_AREA
        name: FLOATING_SAVE_AREA
        nameWithType: FLOATING_SAVE_AREA
        qualifiedName: ERC.Structures.FLOATING_SAVE_AREA
      VB:
      - id: ERC.Structures.FLOATING_SAVE_AREA
        name: FLOATING_SAVE_AREA
        nameWithType: FLOATING_SAVE_AREA
        qualifiedName: ERC.Structures.FLOATING_SAVE_AREA
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.FLOATING_SAVE_AREA
  ERC.Structures.CONTEXT32.ToString*:
    name:
      CSharp:
      - id: ERC.Structures.CONTEXT32.ToString*
        name: ToString
        nameWithType: CONTEXT32.ToString
        qualifiedName: ERC.Structures.CONTEXT32.ToString
      VB:
      - id: ERC.Structures.CONTEXT32.ToString*
        name: ToString
        nameWithType: CONTEXT32.ToString
        qualifiedName: ERC.Structures.CONTEXT32.ToString
    isDefinition: true
    commentId: Overload:ERC.Structures.CONTEXT32.ToString
  System.Int64:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int64
  ERC.Structures.M128A.ToString*:
    name:
      CSharp:
      - id: ERC.Structures.M128A.ToString*
        name: ToString
        nameWithType: M128A.ToString
        qualifiedName: ERC.Structures.M128A.ToString
      VB:
      - id: ERC.Structures.M128A.ToString*
        name: ToString
        nameWithType: M128A.ToString
        qualifiedName: ERC.Structures.M128A.ToString
    isDefinition: true
    commentId: Overload:ERC.Structures.M128A.ToString
  ERC.Structures.M128A:
    name:
      CSharp:
      - id: ERC.Structures.M128A
        name: M128A
        nameWithType: M128A
        qualifiedName: ERC.Structures.M128A
      VB:
      - id: ERC.Structures.M128A
        name: M128A
        nameWithType: M128A
        qualifiedName: ERC.Structures.M128A
    isDefinition: true
    commentId: T:ERC.Structures.M128A
  ERC.Structures.M128A[]:
    name:
      CSharp:
      - id: ERC.Structures.M128A
        name: M128A
        nameWithType: M128A
        qualifiedName: ERC.Structures.M128A
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: ERC.Structures.M128A
        name: M128A
        nameWithType: M128A
        qualifiedName: ERC.Structures.M128A
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ERC.Structures.XSAVE_FORMAT64:
    name:
      CSharp:
      - id: ERC.Structures.XSAVE_FORMAT64
        name: XSAVE_FORMAT64
        nameWithType: XSAVE_FORMAT64
        qualifiedName: ERC.Structures.XSAVE_FORMAT64
      VB:
      - id: ERC.Structures.XSAVE_FORMAT64
        name: XSAVE_FORMAT64
        nameWithType: XSAVE_FORMAT64
        qualifiedName: ERC.Structures.XSAVE_FORMAT64
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.XSAVE_FORMAT64
  ERC.Structures.CONTEXT64.ToString*:
    name:
      CSharp:
      - id: ERC.Structures.CONTEXT64.ToString*
        name: ToString
        nameWithType: CONTEXT64.ToString
        qualifiedName: ERC.Structures.CONTEXT64.ToString
      VB:
      - id: ERC.Structures.CONTEXT64.ToString*
        name: ToString
        nameWithType: CONTEXT64.ToString
        qualifiedName: ERC.Structures.CONTEXT64.ToString
    isDefinition: true
    commentId: Overload:ERC.Structures.CONTEXT64.ToString
  ERC.Structures.RegisterInfo.Register*:
    name:
      CSharp:
      - id: ERC.Structures.RegisterInfo.Register*
        name: Register
        nameWithType: RegisterInfo.Register
        qualifiedName: ERC.Structures.RegisterInfo.Register
      VB:
      - id: ERC.Structures.RegisterInfo.Register*
        name: Register
        nameWithType: RegisterInfo.Register
        qualifiedName: ERC.Structures.RegisterInfo.Register
    isDefinition: true
    commentId: Overload:ERC.Structures.RegisterInfo.Register
  ERC.Structures.RegisterInfo.RegisterValue*:
    name:
      CSharp:
      - id: ERC.Structures.RegisterInfo.RegisterValue*
        name: RegisterValue
        nameWithType: RegisterInfo.RegisterValue
        qualifiedName: ERC.Structures.RegisterInfo.RegisterValue
      VB:
      - id: ERC.Structures.RegisterInfo.RegisterValue*
        name: RegisterValue
        nameWithType: RegisterInfo.RegisterValue
        qualifiedName: ERC.Structures.RegisterInfo.RegisterValue
    isDefinition: true
    commentId: Overload:ERC.Structures.RegisterInfo.RegisterValue
  ERC.Structures.RegisterInfo.RegisterOffset*:
    name:
      CSharp:
      - id: ERC.Structures.RegisterInfo.RegisterOffset*
        name: RegisterOffset
        nameWithType: RegisterInfo.RegisterOffset
        qualifiedName: ERC.Structures.RegisterInfo.RegisterOffset
      VB:
      - id: ERC.Structures.RegisterInfo.RegisterOffset*
        name: RegisterOffset
        nameWithType: RegisterInfo.RegisterOffset
        qualifiedName: ERC.Structures.RegisterInfo.RegisterOffset
    isDefinition: true
    commentId: Overload:ERC.Structures.RegisterInfo.RegisterOffset
  ERC.Structures.RegisterInfo.StringOffset*:
    name:
      CSharp:
      - id: ERC.Structures.RegisterInfo.StringOffset*
        name: StringOffset
        nameWithType: RegisterInfo.StringOffset
        qualifiedName: ERC.Structures.RegisterInfo.StringOffset
      VB:
      - id: ERC.Structures.RegisterInfo.StringOffset*
        name: StringOffset
        nameWithType: RegisterInfo.StringOffset
        qualifiedName: ERC.Structures.RegisterInfo.StringOffset
    isDefinition: true
    commentId: Overload:ERC.Structures.RegisterInfo.StringOffset
  ERC.Structures.RegisterInfo.BufferSize*:
    name:
      CSharp:
      - id: ERC.Structures.RegisterInfo.BufferSize*
        name: BufferSize
        nameWithType: RegisterInfo.BufferSize
        qualifiedName: ERC.Structures.RegisterInfo.BufferSize
      VB:
      - id: ERC.Structures.RegisterInfo.BufferSize*
        name: BufferSize
        nameWithType: RegisterInfo.BufferSize
        qualifiedName: ERC.Structures.RegisterInfo.BufferSize
    isDefinition: true
    commentId: Overload:ERC.Structures.RegisterInfo.BufferSize
  ERC.Structures.RegisterInfo.ThreadID*:
    name:
      CSharp:
      - id: ERC.Structures.RegisterInfo.ThreadID*
        name: ThreadID
        nameWithType: RegisterInfo.ThreadID
        qualifiedName: ERC.Structures.RegisterInfo.ThreadID
      VB:
      - id: ERC.Structures.RegisterInfo.ThreadID*
        name: ThreadID
        nameWithType: RegisterInfo.ThreadID
        qualifiedName: ERC.Structures.RegisterInfo.ThreadID
    isDefinition: true
    commentId: Overload:ERC.Structures.RegisterInfo.ThreadID
  ERC.Structures.RegisterInfo.overwritten*:
    name:
      CSharp:
      - id: ERC.Structures.RegisterInfo.overwritten*
        name: overwritten
        nameWithType: RegisterInfo.overwritten
        qualifiedName: ERC.Structures.RegisterInfo.overwritten
      VB:
      - id: ERC.Structures.RegisterInfo.overwritten*
        name: overwritten
        nameWithType: RegisterInfo.overwritten
        qualifiedName: ERC.Structures.RegisterInfo.overwritten
    isDefinition: true
    commentId: Overload:ERC.Structures.RegisterInfo.overwritten
  ERC.Structures.RegisterInfo:
    name:
      CSharp:
      - id: ERC.Structures.RegisterInfo
        name: RegisterInfo
        nameWithType: RegisterInfo
        qualifiedName: ERC.Structures.RegisterInfo
      VB:
      - id: ERC.Structures.RegisterInfo
        name: RegisterInfo
        nameWithType: RegisterInfo
        qualifiedName: ERC.Structures.RegisterInfo
    isDefinition: true
    commentId: T:ERC.Structures.RegisterInfo
  ERC.Structures.ClientID:
    name:
      CSharp:
      - id: ERC.Structures.ClientID
        name: ClientID
        nameWithType: ClientID
        qualifiedName: ERC.Structures.ClientID
      VB:
      - id: ERC.Structures.ClientID
        name: ClientID
        nameWithType: ClientID
        qualifiedName: ERC.Structures.ClientID
    isDefinition: true
    parent: ERC.Structures
    commentId: T:ERC.Structures.ClientID
  ERC.Structures.ThreadBasicInformation:
    name:
      CSharp:
      - id: ERC.Structures.ThreadBasicInformation
        name: ThreadBasicInformation
        nameWithType: ThreadBasicInformation
        qualifiedName: ERC.Structures.ThreadBasicInformation
      VB:
      - id: ERC.Structures.ThreadBasicInformation
        name: ThreadBasicInformation
        nameWithType: ThreadBasicInformation
        qualifiedName: ERC.Structures.ThreadBasicInformation
    isDefinition: true
    commentId: T:ERC.Structures.ThreadBasicInformation
