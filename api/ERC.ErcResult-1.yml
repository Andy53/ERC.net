### YamlMime:ManagedReference
items:
- uid: ERC.ErcResult`1
  commentId: T:ERC.ErcResult`1
  id: ErcResult`1
  parent: ERC
  children:
  - ERC.ErcResult`1.#ctor(ERC.ErcCore)
  - ERC.ErcResult`1.#ctor(ERC.ErcCore,System.String)
  - ERC.ErcResult`1.Error
  - ERC.ErcResult`1.LogEvent
  - ERC.ErcResult`1.ReturnValue
  - ERC.ErcResult`1.ToString
  langs:
  - csharp
  - vb
  name: ErcResult<T>
  nameWithType: ErcResult<T>
  fullName: ERC.ErcResult<T>
  type: Class
  source:
    id: ErcResult
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 733
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nA basic object which contains a generic type and exception. \n"
  example: []
  syntax:
    content: 'public class ErcResult<T> : ErcCore'
    typeParameters:
    - id: T
      description: A generic type
    content.vb: >-
      Public Class ErcResult(Of T)

          Inherits ErcCore
  inheritance:
  - System.Object
  - ERC.ErcCore
  inheritedMembers:
  - ERC.ErcCore.ErcVersion
  - ERC.ErcCore.WorkingDirectory
  - ERC.ErcCore.Author
  - ERC.ErcCore.SystemErrorLogPath
  - ERC.ErcCore.PatternStandardPath
  - ERC.ErcCore.PatternExtendedPath
  - ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
  - ERC.ErcCore.SetWorkingDirectory(System.String)
  - ERC.ErcCore.SetPatternStandardPath(System.String)
  - ERC.ErcCore.SetPatternExtendedPath(System.String)
  - ERC.ErcCore.SetAuthor(System.String)
  - ERC.ErcCore.SetErrorFile(System.String)
  - ERC.ErcCore.LogEvent(System.Exception)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ErcResult(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: ERC.ErcResult(Of T)
  name.vb: ErcResult(Of T)
- uid: ERC.ErcResult`1.ReturnValue
  commentId: P:ERC.ErcResult`1.ReturnValue
  id: ReturnValue
  parent: ERC.ErcResult`1
  langs:
  - csharp
  - vb
  name: ReturnValue
  nameWithType: ErcResult<T>.ReturnValue
  fullName: ERC.ErcResult<T>.ReturnValue
  type: Property
  source:
    id: ReturnValue
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 738
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nGeneric Type.\n"
  example: []
  syntax:
    content: public T ReturnValue { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property ReturnValue As T
  overload: ERC.ErcResult`1.ReturnValue*
  nameWithType.vb: ErcResult(Of T).ReturnValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: ERC.ErcResult(Of T).ReturnValue
- uid: ERC.ErcResult`1.Error
  commentId: P:ERC.ErcResult`1.Error
  id: Error
  parent: ERC.ErcResult`1
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ErcResult<T>.Error
  fullName: ERC.ErcResult<T>.Error
  type: Property
  source:
    id: Error
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 742
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nException to be logged by LogEvent().\n"
  example: []
  syntax:
    content: public Exception Error { get; set; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public Property Error As Exception
  overload: ERC.ErcResult`1.Error*
  nameWithType.vb: ErcResult(Of T).Error
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: ERC.ErcResult(Of T).Error
- uid: ERC.ErcResult`1.#ctor(ERC.ErcCore)
  commentId: M:ERC.ErcResult`1.#ctor(ERC.ErcCore)
  id: '#ctor(ERC.ErcCore)'
  parent: ERC.ErcResult`1
  langs:
  - csharp
  - vb
  name: ErcResult(ErcCore)
  nameWithType: ErcResult<T>.ErcResult(ErcCore)
  fullName: ERC.ErcResult<T>.ErcResult(ERC.ErcCore)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 748
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nBase constructor.\n"
  example: []
  syntax:
    content: public ErcResult(ErcCore core)
    parameters:
    - id: core
      type: ERC.ErcCore
      description: The ErcCore object to inherit from.
    content.vb: Public Sub New(core As ErcCore)
  overload: ERC.ErcResult`1.#ctor*
  nameWithType.vb: ErcResult(Of T).ErcResult(ErcCore)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ERC.ErcResult(Of T).ErcResult(ERC.ErcCore)
- uid: ERC.ErcResult`1.#ctor(ERC.ErcCore,System.String)
  commentId: M:ERC.ErcResult`1.#ctor(ERC.ErcCore,System.String)
  id: '#ctor(ERC.ErcCore,System.String)'
  parent: ERC.ErcResult`1
  langs:
  - csharp
  - vb
  name: ErcResult(ErcCore, String)
  nameWithType: ErcResult<T>.ErcResult(ErcCore, String)
  fullName: ERC.ErcResult<T>.ErcResult(ERC.ErcCore, System.String)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 758
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nBase constructor with a custom location for exceptions to be logged.\n"
  example: []
  syntax:
    content: public ErcResult(ErcCore core, string errorFile)
    parameters:
    - id: core
      type: ERC.ErcCore
      description: The ErcCore object to inherit from.
    - id: errorFile
      type: System.String
      description: The location to log exceptions.
    content.vb: Public Sub New(core As ErcCore, errorFile As String)
  overload: ERC.ErcResult`1.#ctor*
  nameWithType.vb: ErcResult(Of T).ErcResult(ErcCore, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ERC.ErcResult(Of T).ErcResult(ERC.ErcCore, System.String)
- uid: ERC.ErcResult`1.LogEvent
  commentId: M:ERC.ErcResult`1.LogEvent
  id: LogEvent
  parent: ERC.ErcResult`1
  langs:
  - csharp
  - vb
  name: LogEvent()
  nameWithType: ErcResult<T>.LogEvent()
  fullName: ERC.ErcResult<T>.LogEvent()
  type: Method
  source:
    id: LogEvent
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 766
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nLogs an event to the ErrorLogFile value.\n"
  example: []
  syntax:
    content: public void LogEvent()
    content.vb: Public Sub LogEvent
  overload: ERC.ErcResult`1.LogEvent*
  nameWithType.vb: ErcResult(Of T).LogEvent()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ERC.ErcResult(Of T).LogEvent()
- uid: ERC.ErcResult`1.ToString
  commentId: M:ERC.ErcResult`1.ToString
  id: ToString
  parent: ERC.ErcResult`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ErcResult<T>.ToString()
  fullName: ERC.ErcResult<T>.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 778
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nOverride of the ToString method. Returns a string containing values relevant to the object. \n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string containing information about the object.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: ERC.ErcResult`1.ToString*
  nameWithType.vb: ErcResult(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: ERC.ErcResult(Of T).ToString()
references:
- uid: ERC
  commentId: N:ERC
  name: ERC
  nameWithType: ERC
  fullName: ERC
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ERC.ErcCore
  commentId: T:ERC.ErcCore
  parent: ERC
  name: ErcCore
  nameWithType: ErcCore
  fullName: ERC.ErcCore
- uid: ERC.ErcCore.ErcVersion
  commentId: P:ERC.ErcCore.ErcVersion
  parent: ERC.ErcCore
  name: ErcVersion
  nameWithType: ErcCore.ErcVersion
  fullName: ERC.ErcCore.ErcVersion
- uid: ERC.ErcCore.WorkingDirectory
  commentId: P:ERC.ErcCore.WorkingDirectory
  parent: ERC.ErcCore
  name: WorkingDirectory
  nameWithType: ErcCore.WorkingDirectory
  fullName: ERC.ErcCore.WorkingDirectory
- uid: ERC.ErcCore.Author
  commentId: P:ERC.ErcCore.Author
  parent: ERC.ErcCore
  name: Author
  nameWithType: ErcCore.Author
  fullName: ERC.ErcCore.Author
- uid: ERC.ErcCore.SystemErrorLogPath
  commentId: P:ERC.ErcCore.SystemErrorLogPath
  parent: ERC.ErcCore
  name: SystemErrorLogPath
  nameWithType: ErcCore.SystemErrorLogPath
  fullName: ERC.ErcCore.SystemErrorLogPath
- uid: ERC.ErcCore.PatternStandardPath
  commentId: P:ERC.ErcCore.PatternStandardPath
  parent: ERC.ErcCore
  name: PatternStandardPath
  nameWithType: ErcCore.PatternStandardPath
  fullName: ERC.ErcCore.PatternStandardPath
- uid: ERC.ErcCore.PatternExtendedPath
  commentId: P:ERC.ErcCore.PatternExtendedPath
  parent: ERC.ErcCore
  name: PatternExtendedPath
  nameWithType: ErcCore.PatternExtendedPath
  fullName: ERC.ErcCore.PatternExtendedPath
- uid: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
  commentId: M:ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
  parent: ERC.ErcCore
  isExternal: true
  name: GetHandleInformation(IntPtr, UInt32)
  nameWithType: ErcCore.GetHandleInformation(IntPtr, UInt32)
  fullName: ERC.ErcCore.GetHandleInformation(System.IntPtr, System.UInt32)
  spec.csharp:
  - uid: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
    name: GetHandleInformation
    nameWithType: ErcCore.GetHandleInformation
    fullName: ERC.ErcCore.GetHandleInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
    name: GetHandleInformation
    nameWithType: ErcCore.GetHandleInformation
    fullName: ERC.ErcCore.GetHandleInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetWorkingDirectory(System.String)
  commentId: M:ERC.ErcCore.SetWorkingDirectory(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetWorkingDirectory(String)
  nameWithType: ErcCore.SetWorkingDirectory(String)
  fullName: ERC.ErcCore.SetWorkingDirectory(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetWorkingDirectory(System.String)
    name: SetWorkingDirectory
    nameWithType: ErcCore.SetWorkingDirectory
    fullName: ERC.ErcCore.SetWorkingDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetWorkingDirectory(System.String)
    name: SetWorkingDirectory
    nameWithType: ErcCore.SetWorkingDirectory
    fullName: ERC.ErcCore.SetWorkingDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetPatternStandardPath(System.String)
  commentId: M:ERC.ErcCore.SetPatternStandardPath(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetPatternStandardPath(String)
  nameWithType: ErcCore.SetPatternStandardPath(String)
  fullName: ERC.ErcCore.SetPatternStandardPath(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetPatternStandardPath(System.String)
    name: SetPatternStandardPath
    nameWithType: ErcCore.SetPatternStandardPath
    fullName: ERC.ErcCore.SetPatternStandardPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetPatternStandardPath(System.String)
    name: SetPatternStandardPath
    nameWithType: ErcCore.SetPatternStandardPath
    fullName: ERC.ErcCore.SetPatternStandardPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetPatternExtendedPath(System.String)
  commentId: M:ERC.ErcCore.SetPatternExtendedPath(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetPatternExtendedPath(String)
  nameWithType: ErcCore.SetPatternExtendedPath(String)
  fullName: ERC.ErcCore.SetPatternExtendedPath(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetPatternExtendedPath(System.String)
    name: SetPatternExtendedPath
    nameWithType: ErcCore.SetPatternExtendedPath
    fullName: ERC.ErcCore.SetPatternExtendedPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetPatternExtendedPath(System.String)
    name: SetPatternExtendedPath
    nameWithType: ErcCore.SetPatternExtendedPath
    fullName: ERC.ErcCore.SetPatternExtendedPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetAuthor(System.String)
  commentId: M:ERC.ErcCore.SetAuthor(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetAuthor(String)
  nameWithType: ErcCore.SetAuthor(String)
  fullName: ERC.ErcCore.SetAuthor(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetAuthor(System.String)
    name: SetAuthor
    nameWithType: ErcCore.SetAuthor
    fullName: ERC.ErcCore.SetAuthor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetAuthor(System.String)
    name: SetAuthor
    nameWithType: ErcCore.SetAuthor
    fullName: ERC.ErcCore.SetAuthor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetErrorFile(System.String)
  commentId: M:ERC.ErcCore.SetErrorFile(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetErrorFile(String)
  nameWithType: ErcCore.SetErrorFile(String)
  fullName: ERC.ErcCore.SetErrorFile(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetErrorFile(System.String)
    name: SetErrorFile
    nameWithType: ErcCore.SetErrorFile
    fullName: ERC.ErcCore.SetErrorFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetErrorFile(System.String)
    name: SetErrorFile
    nameWithType: ErcCore.SetErrorFile
    fullName: ERC.ErcCore.SetErrorFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.LogEvent(System.Exception)
  commentId: M:ERC.ErcCore.LogEvent(System.Exception)
  parent: ERC.ErcCore
  isExternal: true
  name: LogEvent(Exception)
  nameWithType: ErcCore.LogEvent(Exception)
  fullName: ERC.ErcCore.LogEvent(System.Exception)
  spec.csharp:
  - uid: ERC.ErcCore.LogEvent(System.Exception)
    name: LogEvent
    nameWithType: ErcCore.LogEvent
    fullName: ERC.ErcCore.LogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.LogEvent(System.Exception)
    name: LogEvent
    nameWithType: ErcCore.LogEvent
    fullName: ERC.ErcCore.LogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ERC.ErcResult`1.ReturnValue*
  commentId: Overload:ERC.ErcResult`1.ReturnValue
  name: ReturnValue
  nameWithType: ErcResult<T>.ReturnValue
  fullName: ERC.ErcResult<T>.ReturnValue
  nameWithType.vb: ErcResult(Of T).ReturnValue
  fullName.vb: ERC.ErcResult(Of T).ReturnValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  commentId: '!:T'
  name: T
  nameWithType: T
  fullName: T
- uid: ERC.ErcResult`1.Error*
  commentId: Overload:ERC.ErcResult`1.Error
  name: Error
  nameWithType: ErcResult<T>.Error
  fullName: ERC.ErcResult<T>.Error
  nameWithType.vb: ErcResult(Of T).Error
  fullName.vb: ERC.ErcResult(Of T).Error
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: ERC.ErcResult`1.#ctor*
  commentId: Overload:ERC.ErcResult`1.#ctor
  name: ErcResult
  nameWithType: ErcResult<T>.ErcResult
  fullName: ERC.ErcResult<T>.ErcResult
  nameWithType.vb: ErcResult(Of T).ErcResult
  fullName.vb: ERC.ErcResult(Of T).ErcResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ERC.ErcResult`1.LogEvent*
  commentId: Overload:ERC.ErcResult`1.LogEvent
  name: LogEvent
  nameWithType: ErcResult<T>.LogEvent
  fullName: ERC.ErcResult<T>.LogEvent
  nameWithType.vb: ErcResult(Of T).LogEvent
  fullName.vb: ERC.ErcResult(Of T).LogEvent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcResult`1.ToString*
  commentId: Overload:ERC.ErcResult`1.ToString
  name: ToString
  nameWithType: ErcResult<T>.ToString
  fullName: ERC.ErcResult<T>.ToString
  nameWithType.vb: ErcResult(Of T).ToString
  fullName.vb: ERC.ErcResult(Of T).ToString
