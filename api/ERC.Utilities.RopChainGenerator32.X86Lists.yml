### YamlMime:ManagedReference
items:
- uid: ERC.Utilities.RopChainGenerator32.X86Lists
  commentId: T:ERC.Utilities.RopChainGenerator32.X86Lists
  id: RopChainGenerator32.X86Lists
  parent: ERC.Utilities
  children:
  - ERC.Utilities.RopChainGenerator32.X86Lists.add
  - ERC.Utilities.RopChainGenerator32.X86Lists.and
  - ERC.Utilities.RopChainGenerator32.X86Lists.callEsp
  - ERC.Utilities.RopChainGenerator32.X86Lists.decEax
  - ERC.Utilities.RopChainGenerator32.X86Lists.decEbp
  - ERC.Utilities.RopChainGenerator32.X86Lists.decEbx
  - ERC.Utilities.RopChainGenerator32.X86Lists.decEcx
  - ERC.Utilities.RopChainGenerator32.X86Lists.decEdi
  - ERC.Utilities.RopChainGenerator32.X86Lists.decEdx
  - ERC.Utilities.RopChainGenerator32.X86Lists.decEsi
  - ERC.Utilities.RopChainGenerator32.X86Lists.decEsp
  - ERC.Utilities.RopChainGenerator32.X86Lists.incEax
  - ERC.Utilities.RopChainGenerator32.X86Lists.incEbp
  - ERC.Utilities.RopChainGenerator32.X86Lists.incEbx
  - ERC.Utilities.RopChainGenerator32.X86Lists.incEcx
  - ERC.Utilities.RopChainGenerator32.X86Lists.incEdi
  - ERC.Utilities.RopChainGenerator32.X86Lists.incEdx
  - ERC.Utilities.RopChainGenerator32.X86Lists.incEsi
  - ERC.Utilities.RopChainGenerator32.X86Lists.incEsp
  - ERC.Utilities.RopChainGenerator32.X86Lists.jmpEsp
  - ERC.Utilities.RopChainGenerator32.X86Lists.mov
  - ERC.Utilities.RopChainGenerator32.X86Lists.popEax
  - ERC.Utilities.RopChainGenerator32.X86Lists.popEbp
  - ERC.Utilities.RopChainGenerator32.X86Lists.popEbx
  - ERC.Utilities.RopChainGenerator32.X86Lists.popEcx
  - ERC.Utilities.RopChainGenerator32.X86Lists.popEdi
  - ERC.Utilities.RopChainGenerator32.X86Lists.popEdx
  - ERC.Utilities.RopChainGenerator32.X86Lists.popEsi
  - ERC.Utilities.RopChainGenerator32.X86Lists.popEsp
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushad
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushEax
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushEbp
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushEbx
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushEcx
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushEdi
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushEdx
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushEsi
  - ERC.Utilities.RopChainGenerator32.X86Lists.pushEsp
  - ERC.Utilities.RopChainGenerator32.X86Lists.sub
  - ERC.Utilities.RopChainGenerator32.X86Lists.xorEax
  - ERC.Utilities.RopChainGenerator32.X86Lists.xorEbx
  - ERC.Utilities.RopChainGenerator32.X86Lists.xorEcx
  - ERC.Utilities.RopChainGenerator32.X86Lists.xorEdi
  - ERC.Utilities.RopChainGenerator32.X86Lists.xorEdx
  - ERC.Utilities.RopChainGenerator32.X86Lists.xorEsi
  langs:
  - csharp
  - vb
  name: RopChainGenerator32.X86Lists
  nameWithType: RopChainGenerator32.X86Lists
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists
  type: Class
  source:
    id: X86Lists
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3734
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nContains lists of instructions for specific registers.\n"
  example: []
  syntax:
    content: public class X86Lists
    content.vb: Public Class X86Lists
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushEax
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEax
  id: pushEax
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushEax
  nameWithType: RopChainGenerator32.X86Lists.pushEax
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushEax
  type: Field
  source:
    id: pushEax
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3739
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushEax list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushEax
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushEax As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEbx
  id: pushEbx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushEbx
  nameWithType: RopChainGenerator32.X86Lists.pushEbx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbx
  type: Field
  source:
    id: pushEbx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3743
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushEbx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushEbx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushEbx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushEcx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEcx
  id: pushEcx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushEcx
  nameWithType: RopChainGenerator32.X86Lists.pushEcx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushEcx
  type: Field
  source:
    id: pushEcx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3747
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushEcx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushEcx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushEcx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEdx
  id: pushEdx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushEdx
  nameWithType: RopChainGenerator32.X86Lists.pushEdx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdx
  type: Field
  source:
    id: pushEdx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3751
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushEdx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushEdx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushEdx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEsp
  id: pushEsp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushEsp
  nameWithType: RopChainGenerator32.X86Lists.pushEsp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsp
  type: Field
  source:
    id: pushEsp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3755
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushEsp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushEsp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushEsp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEbp
  id: pushEbp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushEbp
  nameWithType: RopChainGenerator32.X86Lists.pushEbp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushEbp
  type: Field
  source:
    id: pushEbp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3759
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushEbp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushEbp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushEbp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEsi
  id: pushEsi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushEsi
  nameWithType: RopChainGenerator32.X86Lists.pushEsi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushEsi
  type: Field
  source:
    id: pushEsi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3763
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushEsi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushEsi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushEsi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushEdi
  id: pushEdi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushEdi
  nameWithType: RopChainGenerator32.X86Lists.pushEdi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushEdi
  type: Field
  source:
    id: pushEdi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3767
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushEdi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushEdi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushEdi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.jmpEsp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.jmpEsp
  id: jmpEsp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: jmpEsp
  nameWithType: RopChainGenerator32.X86Lists.jmpEsp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.jmpEsp
  type: Field
  source:
    id: jmpEsp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3771
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\njmpEsp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> jmpEsp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public jmpEsp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.callEsp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.callEsp
  id: callEsp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: callEsp
  nameWithType: RopChainGenerator32.X86Lists.callEsp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.callEsp
  type: Field
  source:
    id: callEsp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3775
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ncallEsp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> callEsp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public callEsp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.xorEax
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEax
  id: xorEax
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: xorEax
  nameWithType: RopChainGenerator32.X86Lists.xorEax
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.xorEax
  type: Field
  source:
    id: xorEax
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3779
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nxorEax list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> xorEax
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public xorEax As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.xorEbx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEbx
  id: xorEbx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: xorEbx
  nameWithType: RopChainGenerator32.X86Lists.xorEbx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.xorEbx
  type: Field
  source:
    id: xorEbx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3783
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nxorEbx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> xorEbx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public xorEbx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.xorEcx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEcx
  id: xorEcx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: xorEcx
  nameWithType: RopChainGenerator32.X86Lists.xorEcx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.xorEcx
  type: Field
  source:
    id: xorEcx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3787
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nxorEcx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> xorEcx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public xorEcx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEdx
  id: xorEdx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: xorEdx
  nameWithType: RopChainGenerator32.X86Lists.xorEdx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdx
  type: Field
  source:
    id: xorEdx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3791
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nxorEdx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> xorEdx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public xorEdx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.xorEsi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEsi
  id: xorEsi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: xorEsi
  nameWithType: RopChainGenerator32.X86Lists.xorEsi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.xorEsi
  type: Field
  source:
    id: xorEsi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3795
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nxorEsi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> xorEsi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public xorEsi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.xorEdi
  id: xorEdi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: xorEdi
  nameWithType: RopChainGenerator32.X86Lists.xorEdi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.xorEdi
  type: Field
  source:
    id: xorEdi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3799
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nxorEdi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> xorEdi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public xorEdi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.popEax
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEax
  id: popEax
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: popEax
  nameWithType: RopChainGenerator32.X86Lists.popEax
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.popEax
  type: Field
  source:
    id: popEax
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3803
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npopEax list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> popEax
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public popEax As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.popEbx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEbx
  id: popEbx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: popEbx
  nameWithType: RopChainGenerator32.X86Lists.popEbx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.popEbx
  type: Field
  source:
    id: popEbx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3807
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npopEbx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> popEbx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public popEbx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.popEcx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEcx
  id: popEcx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: popEcx
  nameWithType: RopChainGenerator32.X86Lists.popEcx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.popEcx
  type: Field
  source:
    id: popEcx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3811
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npopEcx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> popEcx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public popEcx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.popEdx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEdx
  id: popEdx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: popEdx
  nameWithType: RopChainGenerator32.X86Lists.popEdx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.popEdx
  type: Field
  source:
    id: popEdx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3815
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npopEdx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> popEdx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public popEdx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.popEsp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEsp
  id: popEsp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: popEsp
  nameWithType: RopChainGenerator32.X86Lists.popEsp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.popEsp
  type: Field
  source:
    id: popEsp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3819
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npopEsp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> popEsp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public popEsp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.popEbp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEbp
  id: popEbp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: popEbp
  nameWithType: RopChainGenerator32.X86Lists.popEbp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.popEbp
  type: Field
  source:
    id: popEbp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3823
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npopEbp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> popEbp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public popEbp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.popEsi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEsi
  id: popEsi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: popEsi
  nameWithType: RopChainGenerator32.X86Lists.popEsi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.popEsi
  type: Field
  source:
    id: popEsi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3827
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npopEsi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> popEsi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public popEsi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.popEdi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.popEdi
  id: popEdi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: popEdi
  nameWithType: RopChainGenerator32.X86Lists.popEdi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.popEdi
  type: Field
  source:
    id: popEdi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3831
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npopEdi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> popEdi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public popEdi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.pushad
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.pushad
  id: pushad
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: pushad
  nameWithType: RopChainGenerator32.X86Lists.pushad
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.pushad
  type: Field
  source:
    id: pushad
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3835
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\npushad list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> pushad
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public pushad As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.incEax
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEax
  id: incEax
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: incEax
  nameWithType: RopChainGenerator32.X86Lists.incEax
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.incEax
  type: Field
  source:
    id: incEax
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3839
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nincEax list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> incEax
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public incEax As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.incEbx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEbx
  id: incEbx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: incEbx
  nameWithType: RopChainGenerator32.X86Lists.incEbx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.incEbx
  type: Field
  source:
    id: incEbx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3843
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nincEbx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> incEbx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public incEbx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.incEcx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEcx
  id: incEcx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: incEcx
  nameWithType: RopChainGenerator32.X86Lists.incEcx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.incEcx
  type: Field
  source:
    id: incEcx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3847
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nincEcx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> incEcx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public incEcx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.incEdx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEdx
  id: incEdx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: incEdx
  nameWithType: RopChainGenerator32.X86Lists.incEdx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.incEdx
  type: Field
  source:
    id: incEdx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3851
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nincEdx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> incEdx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public incEdx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.incEbp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEbp
  id: incEbp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: incEbp
  nameWithType: RopChainGenerator32.X86Lists.incEbp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.incEbp
  type: Field
  source:
    id: incEbp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3855
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nincEbp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> incEbp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public incEbp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.incEsp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEsp
  id: incEsp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: incEsp
  nameWithType: RopChainGenerator32.X86Lists.incEsp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.incEsp
  type: Field
  source:
    id: incEsp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3859
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nincEsp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> incEsp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public incEsp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.incEsi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEsi
  id: incEsi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: incEsi
  nameWithType: RopChainGenerator32.X86Lists.incEsi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.incEsi
  type: Field
  source:
    id: incEsi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3863
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nincEsi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> incEsi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public incEsi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.incEdi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.incEdi
  id: incEdi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: incEdi
  nameWithType: RopChainGenerator32.X86Lists.incEdi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.incEdi
  type: Field
  source:
    id: incEdi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3867
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nincEdi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> incEdi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public incEdi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.decEax
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEax
  id: decEax
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: decEax
  nameWithType: RopChainGenerator32.X86Lists.decEax
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.decEax
  type: Field
  source:
    id: decEax
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3871
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ndecEax list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> decEax
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public decEax As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.decEbx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEbx
  id: decEbx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: decEbx
  nameWithType: RopChainGenerator32.X86Lists.decEbx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.decEbx
  type: Field
  source:
    id: decEbx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3875
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ndecEbx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> decEbx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public decEbx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.decEcx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEcx
  id: decEcx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: decEcx
  nameWithType: RopChainGenerator32.X86Lists.decEcx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.decEcx
  type: Field
  source:
    id: decEcx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3879
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ndecEcx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> decEcx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public decEcx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.decEdx
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEdx
  id: decEdx
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: decEdx
  nameWithType: RopChainGenerator32.X86Lists.decEdx
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.decEdx
  type: Field
  source:
    id: decEdx
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3883
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ndecEdx list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> decEdx
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public decEdx As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.decEbp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEbp
  id: decEbp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: decEbp
  nameWithType: RopChainGenerator32.X86Lists.decEbp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.decEbp
  type: Field
  source:
    id: decEbp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3887
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ndecEbp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> decEbp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public decEbp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.decEsp
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEsp
  id: decEsp
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: decEsp
  nameWithType: RopChainGenerator32.X86Lists.decEsp
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.decEsp
  type: Field
  source:
    id: decEsp
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3891
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ndecEsp list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> decEsp
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public decEsp As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.decEsi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEsi
  id: decEsi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: decEsi
  nameWithType: RopChainGenerator32.X86Lists.decEsi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.decEsi
  type: Field
  source:
    id: decEsi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3895
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ndecEsi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> decEsi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public decEsi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.decEdi
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.decEdi
  id: decEdi
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: decEdi
  nameWithType: RopChainGenerator32.X86Lists.decEdi
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.decEdi
  type: Field
  source:
    id: decEdi
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3899
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\ndecEdi list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> decEdi
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public decEdi As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.add
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.add
  id: add
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: add
  nameWithType: RopChainGenerator32.X86Lists.add
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.add
  type: Field
  source:
    id: add
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3903
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nadd list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> add
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public add As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.sub
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.sub
  id: sub
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: sub
  nameWithType: RopChainGenerator32.X86Lists.sub
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.sub
  type: Field
  source:
    id: sub
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3907
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nsub list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> sub
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public sub As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.mov
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.mov
  id: mov
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: mov
  nameWithType: RopChainGenerator32.X86Lists.mov
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.mov
  type: Field
  source:
    id: mov
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3911
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nmov list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> mov
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public mov As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.RopChainGenerator32.X86Lists.and
  commentId: F:ERC.Utilities.RopChainGenerator32.X86Lists.and
  id: and
  parent: ERC.Utilities.RopChainGenerator32.X86Lists
  langs:
  - csharp
  - vb
  name: and
  nameWithType: RopChainGenerator32.X86Lists.and
  fullName: ERC.Utilities.RopChainGenerator32.X86Lists.and
  type: Field
  source:
    id: and
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\RopChainGenerator32.cs
    startLine: 3915
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nand list.\n"
  example: []
  syntax:
    content: public Dictionary<IntPtr, string> and
    return:
      type: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
    content.vb: Public and As Dictionary(Of IntPtr, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ERC.Utilities
  commentId: N:ERC.Utilities
  name: ERC.Utilities
  nameWithType: ERC.Utilities
  fullName: ERC.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.IntPtr,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.IntPtr,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<IntPtr, String>
  nameWithType: Dictionary<IntPtr, String>
  fullName: System.Collections.Generic.Dictionary<System.IntPtr, System.String>
  nameWithType.vb: Dictionary(Of IntPtr, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.IntPtr, System.String)
  name.vb: Dictionary(Of IntPtr, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
