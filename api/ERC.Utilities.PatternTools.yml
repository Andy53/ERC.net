### YamlMime:ManagedReference
items:
- uid: ERC.Utilities.PatternTools
  commentId: T:ERC.Utilities.PatternTools
  id: PatternTools
  parent: ERC.Utilities
  children:
  - ERC.Utilities.PatternTools.PatternCreate(System.Int32,ERC.ErcCore,System.Boolean)
  - ERC.Utilities.PatternTools.PatternOffset(System.String,ERC.ErcCore,System.Boolean)
  langs:
  - csharp
  - vb
  name: PatternTools
  nameWithType: PatternTools
  fullName: ERC.Utilities.PatternTools
  type: Class
  source:
    id: PatternTools
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Pattern_Tools.cs
    startLine: 10
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nStatic class used to build a non repeating pattern and identify the position of a string in a non repeating pattern.\n"
  example: []
  syntax:
    content: public static class PatternTools
    content.vb: Public Module PatternTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: ERC.Utilities.PatternTools.PatternCreate(System.Int32,ERC.ErcCore,System.Boolean)
  commentId: M:ERC.Utilities.PatternTools.PatternCreate(System.Int32,ERC.ErcCore,System.Boolean)
  id: PatternCreate(System.Int32,ERC.ErcCore,System.Boolean)
  parent: ERC.Utilities.PatternTools
  langs:
  - csharp
  - vb
  name: PatternCreate(Int32, ErcCore, Boolean)
  nameWithType: PatternTools.PatternCreate(Int32, ErcCore, Boolean)
  fullName: ERC.Utilities.PatternTools.PatternCreate(System.Int32, ERC.ErcCore, System.Boolean)
  type: Method
  source:
    id: PatternCreate
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Pattern_Tools.cs
    startLine: 26
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nCreates a string of non repeating characters.\n"
  example: []
  syntax:
    content: public static ErcResult<string> PatternCreate(int length, ErcCore core, bool extended = false)
    parameters:
    - id: length
      type: System.Int32
      description: The length of the pattern to be created as integer
    - id: core
      type: ERC.ErcCore
      description: An ErcCore object
    - id: extended
      type: System.Boolean
      description: (Optional) bool specifying whether the extended character set should be used
    return:
      type: ERC.ErcResult{System.String}
      description: Returns an ErcResult string containing the generated pattern
    content.vb: Public Shared Function PatternCreate(length As Integer, core As ErcCore, extended As Boolean = False) As ErcResult(Of String)
  overload: ERC.Utilities.PatternTools.PatternCreate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ERC.Utilities.PatternTools.PatternOffset(System.String,ERC.ErcCore,System.Boolean)
  commentId: M:ERC.Utilities.PatternTools.PatternOffset(System.String,ERC.ErcCore,System.Boolean)
  id: PatternOffset(System.String,ERC.ErcCore,System.Boolean)
  parent: ERC.Utilities.PatternTools
  langs:
  - csharp
  - vb
  name: PatternOffset(String, ErcCore, Boolean)
  nameWithType: PatternTools.PatternOffset(String, ErcCore, Boolean)
  fullName: ERC.Utilities.PatternTools.PatternOffset(System.String, ERC.ErcCore, System.Boolean)
  type: Method
  source:
    id: PatternOffset
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Pattern_Tools.cs
    startLine: 126
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nTakes a string of characters and returns the location of the first character in a pattern created by Pattern_Create.\n"
  example: []
  syntax:
    content: public static ErcResult<string> PatternOffset(string pattern, ErcCore core, bool extended = false)
    parameters:
    - id: pattern
      type: System.String
      description: The pattern to be searched for.
    - id: core
      type: ERC.ErcCore
      description: An ErcCore object
    - id: extended
      type: System.Boolean
      description: (Optional) bool specifying whether the extended character set should be used
    return:
      type: ERC.ErcResult{System.String}
      description: Returns an ErcResult int containing the offset of the supplied pattern within the generated pattern
    content.vb: Public Shared Function PatternOffset(pattern As String, core As ErcCore, extended As Boolean = False) As ErcResult(Of String)
  overload: ERC.Utilities.PatternTools.PatternOffset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: ERC.Utilities
  commentId: N:ERC.Utilities
  name: ERC.Utilities
  nameWithType: ERC.Utilities
  fullName: ERC.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ERC.Utilities.PatternTools.PatternCreate*
  commentId: Overload:ERC.Utilities.PatternTools.PatternCreate
  name: PatternCreate
  nameWithType: PatternTools.PatternCreate
  fullName: ERC.Utilities.PatternTools.PatternCreate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ERC.ErcCore
  commentId: T:ERC.ErcCore
  parent: ERC
  name: ErcCore
  nameWithType: ErcCore
  fullName: ERC.ErcCore
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ERC.ErcResult{System.String}
  commentId: T:ERC.ErcResult{System.String}
  parent: ERC
  definition: ERC.ErcResult`1
  name: ErcResult<String>
  nameWithType: ErcResult<String>
  fullName: ERC.ErcResult<System.String>
  nameWithType.vb: ErcResult(Of String)
  fullName.vb: ERC.ErcResult(Of System.String)
  name.vb: ErcResult(Of String)
  spec.csharp:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC
  commentId: N:ERC
  name: ERC
  nameWithType: ERC
  fullName: ERC
- uid: ERC.ErcResult`1
  commentId: T:ERC.ErcResult`1
  name: ErcResult<T>
  nameWithType: ErcResult<T>
  fullName: ERC.ErcResult<T>
  nameWithType.vb: ErcResult(Of T)
  fullName.vb: ERC.ErcResult(Of T)
  name.vb: ErcResult(Of T)
  spec.csharp:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.Utilities.PatternTools.PatternOffset*
  commentId: Overload:ERC.Utilities.PatternTools.PatternOffset
  name: PatternOffset
  nameWithType: PatternTools.PatternOffset
  fullName: ERC.Utilities.PatternTools.PatternOffset
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
