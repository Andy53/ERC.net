### YamlMime:ManagedReference
items:
- uid: ERC.Utilities.OpcodeAssembler
  commentId: T:ERC.Utilities.OpcodeAssembler
  id: OpcodeAssembler
  parent: ERC.Utilities
  children:
  - ERC.Utilities.OpcodeAssembler.#ctor(ERC.ProcessInfo)
  - ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String})
  - ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String},ERC.MachineType)
  langs:
  - csharp
  - vb
  name: OpcodeAssembler
  nameWithType: OpcodeAssembler
  fullName: ERC.Utilities.OpcodeAssembler
  type: Class
  source:
    id: OpcodeAssembler
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Opcode_Assembler.cs
    startLine: 10
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nOpcodeAssembler class, can be declared and inherit from a ProcessInfo object to inherit the values of the current process or be called as \na static function to assemble instructions.\n"
  example: []
  syntax:
    content: 'public class OpcodeAssembler : ProcessInfo'
    content.vb: >-
      Public Class OpcodeAssembler

          Inherits ProcessInfo
  inheritance:
  - System.Object
  - ERC.ErcCore
  - ERC.ProcessInfo
  inheritedMembers:
  - ERC.ProcessInfo.ProcessName
  - ERC.ProcessInfo.ProcessDescription
  - ERC.ProcessInfo.ProcessPath
  - ERC.ProcessInfo.ProcessID
  - ERC.ProcessInfo.ProcessHandle
  - ERC.ProcessInfo.ProcessCurrent
  - ERC.ProcessInfo.ProcessMachineType
  - ERC.ProcessInfo.ModulesInfo
  - ERC.ProcessInfo.ThreadsInfo
  - ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
  - ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
  - ERC.ProcessInfo.GetProcessModules
  - ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
  - ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
  - ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
  - ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
  - ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
  - ERC.ProcessInfo.SearchModules(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
  - ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - ERC.ProcessInfo.ToString
  - ERC.ProcessInfo.GetModuleHandles
  - ERC.ProcessInfo.GetProcessModuleInformation
  - ERC.ProcessInfo.GetProcessThreadInformation
  - ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
  - ERC.ErcCore.ErcVersion
  - ERC.ErcCore.WorkingDirectory
  - ERC.ErcCore.Author
  - ERC.ErcCore.SystemErrorLogPath
  - ERC.ErcCore.PatternStandardPath
  - ERC.ErcCore.PatternExtendedPath
  - ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
  - ERC.ErcCore.SetWorkingDirectory(System.String)
  - ERC.ErcCore.SetPatternStandardPath(System.String)
  - ERC.ErcCore.SetPatternExtendedPath(System.String)
  - ERC.ErcCore.SetAuthor(System.String)
  - ERC.ErcCore.SetErrorFile(System.String)
  - ERC.ErcCore.LogEvent(System.Exception)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ERC.Utilities.OpcodeAssembler.#ctor(ERC.ProcessInfo)
  commentId: M:ERC.Utilities.OpcodeAssembler.#ctor(ERC.ProcessInfo)
  id: '#ctor(ERC.ProcessInfo)'
  parent: ERC.Utilities.OpcodeAssembler
  langs:
  - csharp
  - vb
  name: OpcodeAssembler(ProcessInfo)
  nameWithType: OpcodeAssembler.OpcodeAssembler(ProcessInfo)
  fullName: ERC.Utilities.OpcodeAssembler.OpcodeAssembler(ERC.ProcessInfo)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Opcode_Assembler.cs
    startLine: 16
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nConstructor.\n"
  example: []
  syntax:
    content: public OpcodeAssembler(ProcessInfo parent)
    parameters:
    - id: parent
      type: ERC.ProcessInfo
      description: ProcessInfo object to be inherited from.
    content.vb: Public Sub New(parent As ProcessInfo)
  overload: ERC.Utilities.OpcodeAssembler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String})
  commentId: M:ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String})
  id: AssembleOpcodes(System.Collections.Generic.List{System.String})
  parent: ERC.Utilities.OpcodeAssembler
  langs:
  - csharp
  - vb
  name: AssembleOpcodes(List<String>)
  nameWithType: OpcodeAssembler.AssembleOpcodes(List<String>)
  fullName: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    id: AssembleOpcodes
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Opcode_Assembler.cs
    startLine: 26
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nTakes either an array or list of strings containing assembly instructions and returns the associated opcodes.  \n"
  example: []
  syntax:
    content: public ErcResult<byte[]> AssembleOpcodes(List<string> instructions)
    parameters:
    - id: instructions
      type: System.Collections.Generic.List{System.String}
      description: The instructions to be assembled
    return:
      type: ERC.ErcResult{System.Byte[]}
      description: Returns an ErcResult byte array containing the assembled instructions
    content.vb: Public Function AssembleOpcodes(instructions As List(Of String)) As ErcResult(Of Byte())
  overload: ERC.Utilities.OpcodeAssembler.AssembleOpcodes*
  nameWithType.vb: OpcodeAssembler.AssembleOpcodes(List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List(Of System.String))
  name.vb: AssembleOpcodes(List(Of String))
- uid: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String},ERC.MachineType)
  commentId: M:ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List{System.String},ERC.MachineType)
  id: AssembleOpcodes(System.Collections.Generic.List{System.String},ERC.MachineType)
  parent: ERC.Utilities.OpcodeAssembler
  langs:
  - csharp
  - vb
  name: AssembleOpcodes(List<String>, MachineType)
  nameWithType: OpcodeAssembler.AssembleOpcodes(List<String>, MachineType)
  fullName: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List<System.String>, ERC.MachineType)
  type: Method
  source:
    id: AssembleOpcodes
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Opcode_Assembler.cs
    startLine: 70
  assemblies:
  - ERC.Net
  namespace: ERC.Utilities
  summary: "\nTakes either an array or list of strings containing assembly instructions, a MachineType of I386 or x64, \nan instance of the ERC_Core object and returns the associated opcodes.  \n"
  example: []
  syntax:
    content: public static ErcResult<byte[]> AssembleOpcodes(List<string> instructions, MachineType machineType)
    parameters:
    - id: instructions
      type: System.Collections.Generic.List{System.String}
      description: The instructions to be assemble=d
    - id: machineType
      type: ERC.MachineType
      description: a ERC.MachineType of either I386 or x64
    return:
      type: ERC.ErcResult{System.Byte[]}
      description: Returns an ERC_Result byte array containing the assembled instructions
    content.vb: Public Shared Function AssembleOpcodes(instructions As List(Of String), machineType As MachineType) As ErcResult(Of Byte())
  overload: ERC.Utilities.OpcodeAssembler.AssembleOpcodes*
  nameWithType.vb: OpcodeAssembler.AssembleOpcodes(List(Of String), MachineType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: ERC.Utilities.OpcodeAssembler.AssembleOpcodes(System.Collections.Generic.List(Of System.String), ERC.MachineType)
  name.vb: AssembleOpcodes(List(Of String), MachineType)
references:
- uid: ERC.Utilities
  commentId: N:ERC.Utilities
  name: ERC.Utilities
  nameWithType: ERC.Utilities
  fullName: ERC.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ERC.ErcCore
  commentId: T:ERC.ErcCore
  parent: ERC
  name: ErcCore
  nameWithType: ErcCore
  fullName: ERC.ErcCore
- uid: ERC.ProcessInfo
  commentId: T:ERC.ProcessInfo
  parent: ERC
  name: ProcessInfo
  nameWithType: ProcessInfo
  fullName: ERC.ProcessInfo
- uid: ERC.ProcessInfo.ProcessName
  commentId: P:ERC.ProcessInfo.ProcessName
  parent: ERC.ProcessInfo
  name: ProcessName
  nameWithType: ProcessInfo.ProcessName
  fullName: ERC.ProcessInfo.ProcessName
- uid: ERC.ProcessInfo.ProcessDescription
  commentId: P:ERC.ProcessInfo.ProcessDescription
  parent: ERC.ProcessInfo
  name: ProcessDescription
  nameWithType: ProcessInfo.ProcessDescription
  fullName: ERC.ProcessInfo.ProcessDescription
- uid: ERC.ProcessInfo.ProcessPath
  commentId: P:ERC.ProcessInfo.ProcessPath
  parent: ERC.ProcessInfo
  name: ProcessPath
  nameWithType: ProcessInfo.ProcessPath
  fullName: ERC.ProcessInfo.ProcessPath
- uid: ERC.ProcessInfo.ProcessID
  commentId: P:ERC.ProcessInfo.ProcessID
  parent: ERC.ProcessInfo
  name: ProcessID
  nameWithType: ProcessInfo.ProcessID
  fullName: ERC.ProcessInfo.ProcessID
- uid: ERC.ProcessInfo.ProcessHandle
  commentId: P:ERC.ProcessInfo.ProcessHandle
  parent: ERC.ProcessInfo
  name: ProcessHandle
  nameWithType: ProcessInfo.ProcessHandle
  fullName: ERC.ProcessInfo.ProcessHandle
- uid: ERC.ProcessInfo.ProcessCurrent
  commentId: P:ERC.ProcessInfo.ProcessCurrent
  parent: ERC.ProcessInfo
  name: ProcessCurrent
  nameWithType: ProcessInfo.ProcessCurrent
  fullName: ERC.ProcessInfo.ProcessCurrent
- uid: ERC.ProcessInfo.ProcessMachineType
  commentId: P:ERC.ProcessInfo.ProcessMachineType
  parent: ERC.ProcessInfo
  name: ProcessMachineType
  nameWithType: ProcessInfo.ProcessMachineType
  fullName: ERC.ProcessInfo.ProcessMachineType
- uid: ERC.ProcessInfo.ModulesInfo
  commentId: F:ERC.ProcessInfo.ModulesInfo
  parent: ERC.ProcessInfo
  name: ModulesInfo
  nameWithType: ProcessInfo.ModulesInfo
  fullName: ERC.ProcessInfo.ModulesInfo
- uid: ERC.ProcessInfo.ThreadsInfo
  commentId: F:ERC.ProcessInfo.ThreadsInfo
  parent: ERC.ProcessInfo
  name: ThreadsInfo
  nameWithType: ProcessInfo.ThreadsInfo
  fullName: ERC.ProcessInfo.ThreadsInfo
- uid: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
  commentId: M:ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
  parent: ERC.ProcessInfo
  name: ListLocalProcesses(ErcCore)
  nameWithType: ProcessInfo.ListLocalProcesses(ErcCore)
  fullName: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
  spec.csharp:
  - uid: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
    name: ListLocalProcesses
    nameWithType: ProcessInfo.ListLocalProcesses
    fullName: ERC.ProcessInfo.ListLocalProcesses
  - name: (
    nameWithType: (
    fullName: (
  - uid: ERC.ErcCore
    name: ErcCore
    nameWithType: ErcCore
    fullName: ERC.ErcCore
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.ListLocalProcesses(ERC.ErcCore)
    name: ListLocalProcesses
    nameWithType: ProcessInfo.ListLocalProcesses
    fullName: ERC.ProcessInfo.ListLocalProcesses
  - name: (
    nameWithType: (
    fullName: (
  - uid: ERC.ErcCore
    name: ErcCore
    nameWithType: ErcCore
    fullName: ERC.ErcCore
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
  commentId: M:ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
  parent: ERC.ProcessInfo
  isExternal: true
  name: ListRemoteProcesses(ErcCore, String)
  nameWithType: ProcessInfo.ListRemoteProcesses(ErcCore, String)
  fullName: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore, System.String)
  spec.csharp:
  - uid: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
    name: ListRemoteProcesses
    nameWithType: ProcessInfo.ListRemoteProcesses
    fullName: ERC.ProcessInfo.ListRemoteProcesses
  - name: (
    nameWithType: (
    fullName: (
  - uid: ERC.ErcCore
    name: ErcCore
    nameWithType: ErcCore
    fullName: ERC.ErcCore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.ListRemoteProcesses(ERC.ErcCore,System.String)
    name: ListRemoteProcesses
    nameWithType: ProcessInfo.ListRemoteProcesses
    fullName: ERC.ProcessInfo.ListRemoteProcesses
  - name: (
    nameWithType: (
    fullName: (
  - uid: ERC.ErcCore
    name: ErcCore
    nameWithType: ErcCore
    fullName: ERC.ErcCore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.GetProcessModules
  commentId: M:ERC.ProcessInfo.GetProcessModules
  parent: ERC.ProcessInfo
  name: GetProcessModules()
  nameWithType: ProcessInfo.GetProcessModules()
  fullName: ERC.ProcessInfo.GetProcessModules()
  spec.csharp:
  - uid: ERC.ProcessInfo.GetProcessModules
    name: GetProcessModules
    nameWithType: ProcessInfo.GetProcessModules
    fullName: ERC.ProcessInfo.GetProcessModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.GetProcessModules
    name: GetProcessModules
    nameWithType: ProcessInfo.GetProcessModules
    fullName: ERC.ProcessInfo.GetProcessModules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
  commentId: M:ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
  parent: ERC.ProcessInfo
  isExternal: true
  name: Is64Bit(Process)
  nameWithType: ProcessInfo.Is64Bit(Process)
  fullName: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
  spec.csharp:
  - uid: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
    name: Is64Bit
    nameWithType: ProcessInfo.Is64Bit
    fullName: ERC.ProcessInfo.Is64Bit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Process
    name: Process
    nameWithType: Process
    fullName: System.Diagnostics.Process
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.Is64Bit(System.Diagnostics.Process)
    name: Is64Bit
    nameWithType: ProcessInfo.Is64Bit
    fullName: ERC.ProcessInfo.Is64Bit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Process
    name: Process
    nameWithType: Process
    fullName: System.Diagnostics.Process
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
  commentId: M:ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
  parent: ERC.ProcessInfo
  isExternal: true
  name: SearchAllMemoryPPR(List<String>)
  nameWithType: ProcessInfo.SearchAllMemoryPPR(List<String>)
  fullName: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List<System.String>)
  nameWithType.vb: ProcessInfo.SearchAllMemoryPPR(List(Of String))
  fullName.vb: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List(Of System.String))
  name.vb: SearchAllMemoryPPR(List(Of String))
  spec.csharp:
  - uid: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
    name: SearchAllMemoryPPR
    nameWithType: ProcessInfo.SearchAllMemoryPPR
    fullName: ERC.ProcessInfo.SearchAllMemoryPPR
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.SearchAllMemoryPPR(System.Collections.Generic.List{System.String})
    name: SearchAllMemoryPPR
    nameWithType: ProcessInfo.SearchAllMemoryPPR
    fullName: ERC.ProcessInfo.SearchAllMemoryPPR
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
  commentId: M:ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
  parent: ERC.ProcessInfo
  isExternal: true
  name: SearchAllMemoryPPR(Byte[], List<String>)
  nameWithType: ProcessInfo.SearchAllMemoryPPR(Byte[], List<String>)
  fullName: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[], System.Collections.Generic.List<System.String>)
  nameWithType.vb: ProcessInfo.SearchAllMemoryPPR(Byte(), List(Of String))
  fullName.vb: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte(), System.Collections.Generic.List(Of System.String))
  name.vb: SearchAllMemoryPPR(Byte(), List(Of String))
  spec.csharp:
  - uid: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
    name: SearchAllMemoryPPR
    nameWithType: ProcessInfo.SearchAllMemoryPPR
    fullName: ERC.ProcessInfo.SearchAllMemoryPPR
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.SearchAllMemoryPPR(System.Byte[],System.Collections.Generic.List{System.String})
    name: SearchAllMemoryPPR
    nameWithType: ProcessInfo.SearchAllMemoryPPR
    fullName: ERC.ProcessInfo.SearchAllMemoryPPR
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
  commentId: M:ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
  parent: ERC.ProcessInfo
  isExternal: true
  name: SearchMemory(Int32, Byte[], String, List<String>)
  nameWithType: ProcessInfo.SearchMemory(Int32, Byte[], String, List<String>)
  fullName: ERC.ProcessInfo.SearchMemory(System.Int32, System.Byte[], System.String, System.Collections.Generic.List<System.String>)
  nameWithType.vb: ProcessInfo.SearchMemory(Int32, Byte(), String, List(Of String))
  fullName.vb: ERC.ProcessInfo.SearchMemory(System.Int32, System.Byte(), System.String, System.Collections.Generic.List(Of System.String))
  name.vb: SearchMemory(Int32, Byte(), String, List(Of String))
  spec.csharp:
  - uid: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
    name: SearchMemory
    nameWithType: ProcessInfo.SearchMemory
    fullName: ERC.ProcessInfo.SearchMemory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.String,System.Collections.Generic.List{System.String})
    name: SearchMemory
    nameWithType: ProcessInfo.SearchMemory
    fullName: ERC.ProcessInfo.SearchMemory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
  commentId: M:ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
  parent: ERC.ProcessInfo
  isExternal: true
  name: SearchMemory(Int32, Byte[], Byte[], String, List<String>)
  nameWithType: ProcessInfo.SearchMemory(Int32, Byte[], Byte[], String, List<String>)
  fullName: ERC.ProcessInfo.SearchMemory(System.Int32, System.Byte[], System.Byte[], System.String, System.Collections.Generic.List<System.String>)
  nameWithType.vb: ProcessInfo.SearchMemory(Int32, Byte(), Byte(), String, List(Of String))
  fullName.vb: ERC.ProcessInfo.SearchMemory(System.Int32, System.Byte(), System.Byte(), System.String, System.Collections.Generic.List(Of System.String))
  name.vb: SearchMemory(Int32, Byte(), Byte(), String, List(Of String))
  spec.csharp:
  - uid: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
    name: SearchMemory
    nameWithType: ProcessInfo.SearchMemory
    fullName: ERC.ProcessInfo.SearchMemory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.SearchMemory(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String})
    name: SearchMemory
    nameWithType: ProcessInfo.SearchMemory
    fullName: ERC.ProcessInfo.SearchMemory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.SearchModules(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  commentId: M:ERC.ProcessInfo.SearchModules(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  parent: ERC.ProcessInfo
  isExternal: true
  name: SearchModules(Int32, Byte[], Byte[], String, List<String>, List<String>)
  nameWithType: ProcessInfo.SearchModules(Int32, Byte[], Byte[], String, List<String>, List<String>)
  fullName: ERC.ProcessInfo.SearchModules(System.Int32, System.Byte[], System.Byte[], System.String, System.Collections.Generic.List<System.String>, System.Collections.Generic.List<System.String>)
  nameWithType.vb: ProcessInfo.SearchModules(Int32, Byte(), Byte(), String, List(Of String), List(Of String))
  fullName.vb: ERC.ProcessInfo.SearchModules(System.Int32, System.Byte(), System.Byte(), System.String, System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of System.String))
  name.vb: SearchModules(Int32, Byte(), Byte(), String, List(Of String), List(Of String))
  spec.csharp:
  - uid: ERC.ProcessInfo.SearchModules(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
    name: SearchModules
    nameWithType: ProcessInfo.SearchModules
    fullName: ERC.ProcessInfo.SearchModules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.SearchModules(System.Int32,System.Byte[],System.Byte[],System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
    name: SearchModules
    nameWithType: ProcessInfo.SearchModules
    fullName: ERC.ProcessInfo.SearchModules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
  commentId: M:ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
  parent: ERC.ProcessInfo
  isExternal: true
  name: FindNRP(Int32, Boolean)
  nameWithType: ProcessInfo.FindNRP(Int32, Boolean)
  fullName: ERC.ProcessInfo.FindNRP(System.Int32, System.Boolean)
  spec.csharp:
  - uid: ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
    name: FindNRP
    nameWithType: ProcessInfo.FindNRP
    fullName: ERC.ProcessInfo.FindNRP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.FindNRP(System.Int32,System.Boolean)
    name: FindNRP
    nameWithType: ProcessInfo.FindNRP
    fullName: ERC.ProcessInfo.FindNRP
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: ERC.ProcessInfo
  isExternal: true
  name: CreateExcludesList(Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ProcessInfo.CreateExcludesList(Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: ERC.ProcessInfo.CreateExcludesList(System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: CreateExcludesList
    nameWithType: ProcessInfo.CreateExcludesList
    fullName: ERC.ProcessInfo.CreateExcludesList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.CreateExcludesList(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: CreateExcludesList
    nameWithType: ProcessInfo.CreateExcludesList
    fullName: ERC.ProcessInfo.CreateExcludesList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.ToString
  commentId: M:ERC.ProcessInfo.ToString
  parent: ERC.ProcessInfo
  name: ToString()
  nameWithType: ProcessInfo.ToString()
  fullName: ERC.ProcessInfo.ToString()
  spec.csharp:
  - uid: ERC.ProcessInfo.ToString
    name: ToString
    nameWithType: ProcessInfo.ToString
    fullName: ERC.ProcessInfo.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.ToString
    name: ToString
    nameWithType: ProcessInfo.ToString
    fullName: ERC.ProcessInfo.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.GetModuleHandles
  commentId: M:ERC.ProcessInfo.GetModuleHandles
  parent: ERC.ProcessInfo
  name: GetModuleHandles()
  nameWithType: ProcessInfo.GetModuleHandles()
  fullName: ERC.ProcessInfo.GetModuleHandles()
  spec.csharp:
  - uid: ERC.ProcessInfo.GetModuleHandles
    name: GetModuleHandles
    nameWithType: ProcessInfo.GetModuleHandles
    fullName: ERC.ProcessInfo.GetModuleHandles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.GetModuleHandles
    name: GetModuleHandles
    nameWithType: ProcessInfo.GetModuleHandles
    fullName: ERC.ProcessInfo.GetModuleHandles
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.GetProcessModuleInformation
  commentId: M:ERC.ProcessInfo.GetProcessModuleInformation
  parent: ERC.ProcessInfo
  name: GetProcessModuleInformation()
  nameWithType: ProcessInfo.GetProcessModuleInformation()
  fullName: ERC.ProcessInfo.GetProcessModuleInformation()
  spec.csharp:
  - uid: ERC.ProcessInfo.GetProcessModuleInformation
    name: GetProcessModuleInformation
    nameWithType: ProcessInfo.GetProcessModuleInformation
    fullName: ERC.ProcessInfo.GetProcessModuleInformation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.GetProcessModuleInformation
    name: GetProcessModuleInformation
    nameWithType: ProcessInfo.GetProcessModuleInformation
    fullName: ERC.ProcessInfo.GetProcessModuleInformation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.GetProcessThreadInformation
  commentId: M:ERC.ProcessInfo.GetProcessThreadInformation
  parent: ERC.ProcessInfo
  name: GetProcessThreadInformation()
  nameWithType: ProcessInfo.GetProcessThreadInformation()
  fullName: ERC.ProcessInfo.GetProcessThreadInformation()
  spec.csharp:
  - uid: ERC.ProcessInfo.GetProcessThreadInformation
    name: GetProcessThreadInformation
    nameWithType: ProcessInfo.GetProcessThreadInformation
    fullName: ERC.ProcessInfo.GetProcessThreadInformation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.GetProcessThreadInformation
    name: GetProcessThreadInformation
    nameWithType: ProcessInfo.GetProcessThreadInformation
    fullName: ERC.ProcessInfo.GetProcessThreadInformation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
  commentId: M:ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
  parent: ERC.ProcessInfo
  isExternal: true
  name: DumpMemoryRegion(IntPtr, Int32)
  nameWithType: ProcessInfo.DumpMemoryRegion(IntPtr, Int32)
  fullName: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr, System.Int32)
  spec.csharp:
  - uid: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
    name: DumpMemoryRegion
    nameWithType: ProcessInfo.DumpMemoryRegion
    fullName: ERC.ProcessInfo.DumpMemoryRegion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ProcessInfo.DumpMemoryRegion(System.IntPtr,System.Int32)
    name: DumpMemoryRegion
    nameWithType: ProcessInfo.DumpMemoryRegion
    fullName: ERC.ProcessInfo.DumpMemoryRegion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.ErcVersion
  commentId: P:ERC.ErcCore.ErcVersion
  parent: ERC.ErcCore
  name: ErcVersion
  nameWithType: ErcCore.ErcVersion
  fullName: ERC.ErcCore.ErcVersion
- uid: ERC.ErcCore.WorkingDirectory
  commentId: P:ERC.ErcCore.WorkingDirectory
  parent: ERC.ErcCore
  name: WorkingDirectory
  nameWithType: ErcCore.WorkingDirectory
  fullName: ERC.ErcCore.WorkingDirectory
- uid: ERC.ErcCore.Author
  commentId: P:ERC.ErcCore.Author
  parent: ERC.ErcCore
  name: Author
  nameWithType: ErcCore.Author
  fullName: ERC.ErcCore.Author
- uid: ERC.ErcCore.SystemErrorLogPath
  commentId: P:ERC.ErcCore.SystemErrorLogPath
  parent: ERC.ErcCore
  name: SystemErrorLogPath
  nameWithType: ErcCore.SystemErrorLogPath
  fullName: ERC.ErcCore.SystemErrorLogPath
- uid: ERC.ErcCore.PatternStandardPath
  commentId: P:ERC.ErcCore.PatternStandardPath
  parent: ERC.ErcCore
  name: PatternStandardPath
  nameWithType: ErcCore.PatternStandardPath
  fullName: ERC.ErcCore.PatternStandardPath
- uid: ERC.ErcCore.PatternExtendedPath
  commentId: P:ERC.ErcCore.PatternExtendedPath
  parent: ERC.ErcCore
  name: PatternExtendedPath
  nameWithType: ErcCore.PatternExtendedPath
  fullName: ERC.ErcCore.PatternExtendedPath
- uid: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
  commentId: M:ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
  parent: ERC.ErcCore
  isExternal: true
  name: GetHandleInformation(IntPtr, UInt32)
  nameWithType: ErcCore.GetHandleInformation(IntPtr, UInt32)
  fullName: ERC.ErcCore.GetHandleInformation(System.IntPtr, System.UInt32)
  spec.csharp:
  - uid: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
    name: GetHandleInformation
    nameWithType: ErcCore.GetHandleInformation
    fullName: ERC.ErcCore.GetHandleInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.GetHandleInformation(System.IntPtr,System.UInt32@)
    name: GetHandleInformation
    nameWithType: ErcCore.GetHandleInformation
    fullName: ERC.ErcCore.GetHandleInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetWorkingDirectory(System.String)
  commentId: M:ERC.ErcCore.SetWorkingDirectory(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetWorkingDirectory(String)
  nameWithType: ErcCore.SetWorkingDirectory(String)
  fullName: ERC.ErcCore.SetWorkingDirectory(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetWorkingDirectory(System.String)
    name: SetWorkingDirectory
    nameWithType: ErcCore.SetWorkingDirectory
    fullName: ERC.ErcCore.SetWorkingDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetWorkingDirectory(System.String)
    name: SetWorkingDirectory
    nameWithType: ErcCore.SetWorkingDirectory
    fullName: ERC.ErcCore.SetWorkingDirectory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetPatternStandardPath(System.String)
  commentId: M:ERC.ErcCore.SetPatternStandardPath(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetPatternStandardPath(String)
  nameWithType: ErcCore.SetPatternStandardPath(String)
  fullName: ERC.ErcCore.SetPatternStandardPath(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetPatternStandardPath(System.String)
    name: SetPatternStandardPath
    nameWithType: ErcCore.SetPatternStandardPath
    fullName: ERC.ErcCore.SetPatternStandardPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetPatternStandardPath(System.String)
    name: SetPatternStandardPath
    nameWithType: ErcCore.SetPatternStandardPath
    fullName: ERC.ErcCore.SetPatternStandardPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetPatternExtendedPath(System.String)
  commentId: M:ERC.ErcCore.SetPatternExtendedPath(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetPatternExtendedPath(String)
  nameWithType: ErcCore.SetPatternExtendedPath(String)
  fullName: ERC.ErcCore.SetPatternExtendedPath(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetPatternExtendedPath(System.String)
    name: SetPatternExtendedPath
    nameWithType: ErcCore.SetPatternExtendedPath
    fullName: ERC.ErcCore.SetPatternExtendedPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetPatternExtendedPath(System.String)
    name: SetPatternExtendedPath
    nameWithType: ErcCore.SetPatternExtendedPath
    fullName: ERC.ErcCore.SetPatternExtendedPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetAuthor(System.String)
  commentId: M:ERC.ErcCore.SetAuthor(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetAuthor(String)
  nameWithType: ErcCore.SetAuthor(String)
  fullName: ERC.ErcCore.SetAuthor(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetAuthor(System.String)
    name: SetAuthor
    nameWithType: ErcCore.SetAuthor
    fullName: ERC.ErcCore.SetAuthor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetAuthor(System.String)
    name: SetAuthor
    nameWithType: ErcCore.SetAuthor
    fullName: ERC.ErcCore.SetAuthor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.SetErrorFile(System.String)
  commentId: M:ERC.ErcCore.SetErrorFile(System.String)
  parent: ERC.ErcCore
  isExternal: true
  name: SetErrorFile(String)
  nameWithType: ErcCore.SetErrorFile(String)
  fullName: ERC.ErcCore.SetErrorFile(System.String)
  spec.csharp:
  - uid: ERC.ErcCore.SetErrorFile(System.String)
    name: SetErrorFile
    nameWithType: ErcCore.SetErrorFile
    fullName: ERC.ErcCore.SetErrorFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.SetErrorFile(System.String)
    name: SetErrorFile
    nameWithType: ErcCore.SetErrorFile
    fullName: ERC.ErcCore.SetErrorFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcCore.LogEvent(System.Exception)
  commentId: M:ERC.ErcCore.LogEvent(System.Exception)
  parent: ERC.ErcCore
  isExternal: true
  name: LogEvent(Exception)
  nameWithType: ErcCore.LogEvent(Exception)
  fullName: ERC.ErcCore.LogEvent(System.Exception)
  spec.csharp:
  - uid: ERC.ErcCore.LogEvent(System.Exception)
    name: LogEvent
    nameWithType: ErcCore.LogEvent
    fullName: ERC.ErcCore.LogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ERC.ErcCore.LogEvent(System.Exception)
    name: LogEvent
    nameWithType: ErcCore.LogEvent
    fullName: ERC.ErcCore.LogEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ERC
  commentId: N:ERC
  name: ERC
  nameWithType: ERC
  fullName: ERC
- uid: ERC.Utilities.OpcodeAssembler.#ctor*
  commentId: Overload:ERC.Utilities.OpcodeAssembler.#ctor
  name: OpcodeAssembler
  nameWithType: OpcodeAssembler.OpcodeAssembler
  fullName: ERC.Utilities.OpcodeAssembler.OpcodeAssembler
- uid: ERC.Utilities.OpcodeAssembler.AssembleOpcodes*
  commentId: Overload:ERC.Utilities.OpcodeAssembler.AssembleOpcodes
  name: AssembleOpcodes
  nameWithType: OpcodeAssembler.AssembleOpcodes
  fullName: ERC.Utilities.OpcodeAssembler.AssembleOpcodes
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcResult{System.Byte[]}
  commentId: T:ERC.ErcResult{System.Byte[]}
  parent: ERC
  definition: ERC.ErcResult`1
  name: ErcResult<Byte[]>
  nameWithType: ErcResult<Byte[]>
  fullName: ERC.ErcResult<System.Byte[]>
  nameWithType.vb: ErcResult(Of Byte())
  fullName.vb: ERC.ErcResult(Of System.Byte())
  name.vb: ErcResult(Of Byte())
  spec.csharp:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ERC.ErcResult`1
  commentId: T:ERC.ErcResult`1
  name: ErcResult<T>
  nameWithType: ErcResult<T>
  fullName: ERC.ErcResult<T>
  nameWithType.vb: ErcResult(Of T)
  fullName.vb: ERC.ErcResult(Of T)
  name.vb: ErcResult(Of T)
  spec.csharp:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.MachineType
  commentId: T:ERC.MachineType
  parent: ERC
  name: MachineType
  nameWithType: MachineType
  fullName: ERC.MachineType
