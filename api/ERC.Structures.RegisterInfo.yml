### YamlMime:ManagedReference
items:
- uid: ERC.Structures.RegisterInfo
  commentId: T:ERC.Structures.RegisterInfo
  id: RegisterInfo
  parent: ERC.Structures
  children:
  - ERC.Structures.RegisterInfo.BufferSize
  - ERC.Structures.RegisterInfo.overwritten
  - ERC.Structures.RegisterInfo.Register
  - ERC.Structures.RegisterInfo.RegisterOffset
  - ERC.Structures.RegisterInfo.RegisterValue
  - ERC.Structures.RegisterInfo.StringOffset
  - ERC.Structures.RegisterInfo.ThreadID
  langs:
  - csharp
  - vb
  name: RegisterInfo
  nameWithType: RegisterInfo
  fullName: ERC.Structures.RegisterInfo
  type: Class
  source:
    id: RegisterInfo
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2786
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nRegister information\n"
  example: []
  syntax:
    content: public class RegisterInfo
    content.vb: Public Class RegisterInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ERC.Structures.RegisterInfo.Register
  commentId: P:ERC.Structures.RegisterInfo.Register
  id: Register
  parent: ERC.Structures.RegisterInfo
  langs:
  - csharp
  - vb
  name: Register
  nameWithType: RegisterInfo.Register
  fullName: ERC.Structures.RegisterInfo.Register
  type: Property
  source:
    id: Register
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2791
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nRegister name.\n"
  example: []
  syntax:
    content: public string Register { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Register As String
  overload: ERC.Structures.RegisterInfo.Register*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ERC.Structures.RegisterInfo.RegisterValue
  commentId: P:ERC.Structures.RegisterInfo.RegisterValue
  id: RegisterValue
  parent: ERC.Structures.RegisterInfo
  langs:
  - csharp
  - vb
  name: RegisterValue
  nameWithType: RegisterInfo.RegisterValue
  fullName: ERC.Structures.RegisterInfo.RegisterValue
  type: Property
  source:
    id: RegisterValue
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2795
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nRegister value.\n"
  example: []
  syntax:
    content: public IntPtr RegisterValue { get; set; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public Property RegisterValue As IntPtr
  overload: ERC.Structures.RegisterInfo.RegisterValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ERC.Structures.RegisterInfo.RegisterOffset
  commentId: P:ERC.Structures.RegisterInfo.RegisterOffset
  id: RegisterOffset
  parent: ERC.Structures.RegisterInfo
  langs:
  - csharp
  - vb
  name: RegisterOffset
  nameWithType: RegisterInfo.RegisterOffset
  fullName: ERC.Structures.RegisterInfo.RegisterOffset
  type: Property
  source:
    id: RegisterOffset
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2799
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nRegister Offset.\n"
  example: []
  syntax:
    content: public int RegisterOffset { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RegisterOffset As Integer
  overload: ERC.Structures.RegisterInfo.RegisterOffset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ERC.Structures.RegisterInfo.StringOffset
  commentId: P:ERC.Structures.RegisterInfo.StringOffset
  id: StringOffset
  parent: ERC.Structures.RegisterInfo
  langs:
  - csharp
  - vb
  name: StringOffset
  nameWithType: RegisterInfo.StringOffset
  fullName: ERC.Structures.RegisterInfo.StringOffset
  type: Property
  source:
    id: StringOffset
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2803
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nString offset.\n"
  example: []
  syntax:
    content: public int StringOffset { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property StringOffset As Integer
  overload: ERC.Structures.RegisterInfo.StringOffset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ERC.Structures.RegisterInfo.BufferSize
  commentId: P:ERC.Structures.RegisterInfo.BufferSize
  id: BufferSize
  parent: ERC.Structures.RegisterInfo
  langs:
  - csharp
  - vb
  name: BufferSize
  nameWithType: RegisterInfo.BufferSize
  fullName: ERC.Structures.RegisterInfo.BufferSize
  type: Property
  source:
    id: BufferSize
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2807
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nBuffer size.\n"
  example: []
  syntax:
    content: public int BufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property BufferSize As Integer
  overload: ERC.Structures.RegisterInfo.BufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ERC.Structures.RegisterInfo.ThreadID
  commentId: P:ERC.Structures.RegisterInfo.ThreadID
  id: ThreadID
  parent: ERC.Structures.RegisterInfo
  langs:
  - csharp
  - vb
  name: ThreadID
  nameWithType: RegisterInfo.ThreadID
  fullName: ERC.Structures.RegisterInfo.ThreadID
  type: Property
  source:
    id: ThreadID
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2811
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nThread ID.\n"
  example: []
  syntax:
    content: public int ThreadID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ThreadID As Integer
  overload: ERC.Structures.RegisterInfo.ThreadID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ERC.Structures.RegisterInfo.overwritten
  commentId: P:ERC.Structures.RegisterInfo.overwritten
  id: overwritten
  parent: ERC.Structures.RegisterInfo
  langs:
  - csharp
  - vb
  name: overwritten
  nameWithType: RegisterInfo.overwritten
  fullName: ERC.Structures.RegisterInfo.overwritten
  type: Property
  source:
    id: overwritten
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2815
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nOverwritten.\n"
  example: []
  syntax:
    content: public bool overwritten { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property overwritten As Boolean
  overload: ERC.Structures.RegisterInfo.overwritten*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: ERC.Structures
  commentId: N:ERC.Structures
  name: ERC.Structures
  nameWithType: ERC.Structures
  fullName: ERC.Structures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ERC.Structures.RegisterInfo.Register*
  commentId: Overload:ERC.Structures.RegisterInfo.Register
  name: Register
  nameWithType: RegisterInfo.Register
  fullName: ERC.Structures.RegisterInfo.Register
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ERC.Structures.RegisterInfo.RegisterValue*
  commentId: Overload:ERC.Structures.RegisterInfo.RegisterValue
  name: RegisterValue
  nameWithType: RegisterInfo.RegisterValue
  fullName: ERC.Structures.RegisterInfo.RegisterValue
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: ERC.Structures.RegisterInfo.RegisterOffset*
  commentId: Overload:ERC.Structures.RegisterInfo.RegisterOffset
  name: RegisterOffset
  nameWithType: RegisterInfo.RegisterOffset
  fullName: ERC.Structures.RegisterInfo.RegisterOffset
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ERC.Structures.RegisterInfo.StringOffset*
  commentId: Overload:ERC.Structures.RegisterInfo.StringOffset
  name: StringOffset
  nameWithType: RegisterInfo.StringOffset
  fullName: ERC.Structures.RegisterInfo.StringOffset
- uid: ERC.Structures.RegisterInfo.BufferSize*
  commentId: Overload:ERC.Structures.RegisterInfo.BufferSize
  name: BufferSize
  nameWithType: RegisterInfo.BufferSize
  fullName: ERC.Structures.RegisterInfo.BufferSize
- uid: ERC.Structures.RegisterInfo.ThreadID*
  commentId: Overload:ERC.Structures.RegisterInfo.ThreadID
  name: ThreadID
  nameWithType: RegisterInfo.ThreadID
  fullName: ERC.Structures.RegisterInfo.ThreadID
- uid: ERC.Structures.RegisterInfo.overwritten*
  commentId: Overload:ERC.Structures.RegisterInfo.overwritten
  name: overwritten
  nameWithType: RegisterInfo.overwritten
  fullName: ERC.Structures.RegisterInfo.overwritten
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
