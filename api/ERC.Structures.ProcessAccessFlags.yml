### YamlMime:ManagedReference
items:
- uid: ERC.Structures.ProcessAccessFlags
  commentId: T:ERC.Structures.ProcessAccessFlags
  id: ProcessAccessFlags
  parent: ERC.Structures
  children:
  - ERC.Structures.ProcessAccessFlags.All
  - ERC.Structures.ProcessAccessFlags.CreateProcess
  - ERC.Structures.ProcessAccessFlags.CreateThread
  - ERC.Structures.ProcessAccessFlags.DuplicateHandle
  - ERC.Structures.ProcessAccessFlags.QueryInformation
  - ERC.Structures.ProcessAccessFlags.QueryLimitedInformation
  - ERC.Structures.ProcessAccessFlags.SetInformation
  - ERC.Structures.ProcessAccessFlags.SetQuota
  - ERC.Structures.ProcessAccessFlags.Synchronize
  - ERC.Structures.ProcessAccessFlags.Terminate
  - ERC.Structures.ProcessAccessFlags.VirtualMemoryOperation
  - ERC.Structures.ProcessAccessFlags.VirtualMemoryRead
  - ERC.Structures.ProcessAccessFlags.VirtualMemoryWrite
  langs:
  - csharp
  - vb
  name: ProcessAccessFlags
  nameWithType: ProcessAccessFlags
  fullName: ERC.Structures.ProcessAccessFlags
  type: Enum
  source:
    id: ProcessAccessFlags
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2053
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nProcessAccessFlags\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum ProcessAccessFlags : uint
    content.vb: >-
      <Flags>

      Public Enum ProcessAccessFlags As UInteger
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: ERC.Structures.ProcessAccessFlags.All
  commentId: F:ERC.Structures.ProcessAccessFlags.All
  id: All
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: All
  nameWithType: ProcessAccessFlags.All
  fullName: ERC.Structures.ProcessAccessFlags.All
  type: Field
  source:
    id: All
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2059
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nAll\n"
  example: []
  syntax:
    content: All = 2035711U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: All = 2035711UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.Terminate
  commentId: F:ERC.Structures.ProcessAccessFlags.Terminate
  id: Terminate
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: Terminate
  nameWithType: ProcessAccessFlags.Terminate
  fullName: ERC.Structures.ProcessAccessFlags.Terminate
  type: Field
  source:
    id: Terminate
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2063
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nTerminate\n"
  example: []
  syntax:
    content: Terminate = 1U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: Terminate = 1UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.CreateThread
  commentId: F:ERC.Structures.ProcessAccessFlags.CreateThread
  id: CreateThread
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: CreateThread
  nameWithType: ProcessAccessFlags.CreateThread
  fullName: ERC.Structures.ProcessAccessFlags.CreateThread
  type: Field
  source:
    id: CreateThread
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2067
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nCreateThread\n"
  example: []
  syntax:
    content: CreateThread = 2U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: CreateThread = 2UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.VirtualMemoryOperation
  commentId: F:ERC.Structures.ProcessAccessFlags.VirtualMemoryOperation
  id: VirtualMemoryOperation
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: VirtualMemoryOperation
  nameWithType: ProcessAccessFlags.VirtualMemoryOperation
  fullName: ERC.Structures.ProcessAccessFlags.VirtualMemoryOperation
  type: Field
  source:
    id: VirtualMemoryOperation
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2071
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nVirtualMemoryOperation\n"
  example: []
  syntax:
    content: VirtualMemoryOperation = 8U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: VirtualMemoryOperation = 8UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.VirtualMemoryRead
  commentId: F:ERC.Structures.ProcessAccessFlags.VirtualMemoryRead
  id: VirtualMemoryRead
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: VirtualMemoryRead
  nameWithType: ProcessAccessFlags.VirtualMemoryRead
  fullName: ERC.Structures.ProcessAccessFlags.VirtualMemoryRead
  type: Field
  source:
    id: VirtualMemoryRead
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2075
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nVirtualMemoryRead\n"
  example: []
  syntax:
    content: VirtualMemoryRead = 16U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: VirtualMemoryRead = 16UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.VirtualMemoryWrite
  commentId: F:ERC.Structures.ProcessAccessFlags.VirtualMemoryWrite
  id: VirtualMemoryWrite
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: VirtualMemoryWrite
  nameWithType: ProcessAccessFlags.VirtualMemoryWrite
  fullName: ERC.Structures.ProcessAccessFlags.VirtualMemoryWrite
  type: Field
  source:
    id: VirtualMemoryWrite
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2079
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nVirtualMemoryWrite\n"
  example: []
  syntax:
    content: VirtualMemoryWrite = 32U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: VirtualMemoryWrite = 32UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.DuplicateHandle
  commentId: F:ERC.Structures.ProcessAccessFlags.DuplicateHandle
  id: DuplicateHandle
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: DuplicateHandle
  nameWithType: ProcessAccessFlags.DuplicateHandle
  fullName: ERC.Structures.ProcessAccessFlags.DuplicateHandle
  type: Field
  source:
    id: DuplicateHandle
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2083
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nDuplicateHandle\n"
  example: []
  syntax:
    content: DuplicateHandle = 64U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: DuplicateHandle = 64UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.CreateProcess
  commentId: F:ERC.Structures.ProcessAccessFlags.CreateProcess
  id: CreateProcess
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: CreateProcess
  nameWithType: ProcessAccessFlags.CreateProcess
  fullName: ERC.Structures.ProcessAccessFlags.CreateProcess
  type: Field
  source:
    id: CreateProcess
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2087
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nCreateProcess\n"
  example: []
  syntax:
    content: CreateProcess = 128U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: CreateProcess = 128UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.SetQuota
  commentId: F:ERC.Structures.ProcessAccessFlags.SetQuota
  id: SetQuota
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: SetQuota
  nameWithType: ProcessAccessFlags.SetQuota
  fullName: ERC.Structures.ProcessAccessFlags.SetQuota
  type: Field
  source:
    id: SetQuota
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2091
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nSetQuota\n"
  example: []
  syntax:
    content: SetQuota = 256U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: SetQuota = 256UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.SetInformation
  commentId: F:ERC.Structures.ProcessAccessFlags.SetInformation
  id: SetInformation
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: SetInformation
  nameWithType: ProcessAccessFlags.SetInformation
  fullName: ERC.Structures.ProcessAccessFlags.SetInformation
  type: Field
  source:
    id: SetInformation
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2095
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nSetInformation\n"
  example: []
  syntax:
    content: SetInformation = 512U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: SetInformation = 512UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.QueryInformation
  commentId: F:ERC.Structures.ProcessAccessFlags.QueryInformation
  id: QueryInformation
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: QueryInformation
  nameWithType: ProcessAccessFlags.QueryInformation
  fullName: ERC.Structures.ProcessAccessFlags.QueryInformation
  type: Field
  source:
    id: QueryInformation
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2099
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nQueryInformation\n"
  example: []
  syntax:
    content: QueryInformation = 1024U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: QueryInformation = 1024UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.QueryLimitedInformation
  commentId: F:ERC.Structures.ProcessAccessFlags.QueryLimitedInformation
  id: QueryLimitedInformation
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: QueryLimitedInformation
  nameWithType: ProcessAccessFlags.QueryLimitedInformation
  fullName: ERC.Structures.ProcessAccessFlags.QueryLimitedInformation
  type: Field
  source:
    id: QueryLimitedInformation
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2103
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nQueryLimitedInformation\n"
  example: []
  syntax:
    content: QueryLimitedInformation = 4096U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: QueryLimitedInformation = 4096UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: ERC.Structures.ProcessAccessFlags.Synchronize
  commentId: F:ERC.Structures.ProcessAccessFlags.Synchronize
  id: Synchronize
  parent: ERC.Structures.ProcessAccessFlags
  langs:
  - csharp
  - vb
  name: Synchronize
  nameWithType: ProcessAccessFlags.Synchronize
  fullName: ERC.Structures.ProcessAccessFlags.Synchronize
  type: Field
  source:
    id: Synchronize
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\ERC_Core.cs
    startLine: 2107
  assemblies:
  - ERC.Net
  namespace: ERC.Structures
  summary: "\nSynchronize\n"
  example: []
  syntax:
    content: Synchronize = 1048576U
    return:
      type: ERC.Structures.ProcessAccessFlags
    content.vb: Synchronize = 1048576UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: ERC.Structures
  commentId: N:ERC.Structures
  name: ERC.Structures
  nameWithType: ERC.Structures
  fullName: ERC.Structures
- uid: ERC.Structures.ProcessAccessFlags
  commentId: T:ERC.Structures.ProcessAccessFlags
  parent: ERC.Structures
  name: ProcessAccessFlags
  nameWithType: ProcessAccessFlags
  fullName: ERC.Structures.ProcessAccessFlags
