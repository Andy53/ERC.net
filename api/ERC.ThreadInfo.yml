### YamlMime:ManagedReference
items:
- uid: ERC.ThreadInfo
  commentId: T:ERC.ThreadInfo
  id: ThreadInfo
  parent: ERC
  children:
  - ERC.ThreadInfo.Context32
  - ERC.ThreadInfo.Context64
  - ERC.ThreadInfo.Get_Context
  - ERC.ThreadInfo.GetSehChain
  - ERC.ThreadInfo.GetTeb
  - ERC.ThreadInfo.ThreadHandle
  - ERC.ThreadInfo.ThreadID
  - ERC.ThreadInfo.ToString
  langs:
  - csharp
  - vb
  name: ThreadInfo
  nameWithType: ThreadInfo
  fullName: ERC.ThreadInfo
  type: Class
  source:
    id: ThreadInfo
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 15
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nStores information about the current thread.\n"
  example: []
  syntax:
    content: public class ThreadInfo
    content.vb: Public Class ThreadInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ERC.ThreadInfo.ThreadHandle
  commentId: P:ERC.ThreadInfo.ThreadHandle
  id: ThreadHandle
  parent: ERC.ThreadInfo
  langs:
  - csharp
  - vb
  name: ThreadHandle
  nameWithType: ThreadInfo.ThreadHandle
  fullName: ERC.ThreadInfo.ThreadHandle
  type: Property
  source:
    id: ThreadHandle
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 21
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nA handle for the current thread.\n"
  example: []
  syntax:
    content: public IntPtr ThreadHandle { get; }
    parameters: []
    return:
      type: System.IntPtr
    content.vb: Public ReadOnly Property ThreadHandle As IntPtr
  overload: ERC.ThreadInfo.ThreadHandle*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ERC.ThreadInfo.ThreadID
  commentId: P:ERC.ThreadInfo.ThreadID
  id: ThreadID
  parent: ERC.ThreadInfo
  langs:
  - csharp
  - vb
  name: ThreadID
  nameWithType: ThreadInfo.ThreadID
  fullName: ERC.ThreadInfo.ThreadID
  type: Property
  source:
    id: ThreadID
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 25
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nThe ID number of the current thread.\n"
  example: []
  syntax:
    content: public int ThreadID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ThreadID As Integer
  overload: ERC.ThreadInfo.ThreadID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ERC.ThreadInfo.Context32
  commentId: F:ERC.ThreadInfo.Context32
  id: Context32
  parent: ERC.ThreadInfo
  langs:
  - csharp
  - vb
  name: Context32
  nameWithType: ThreadInfo.Context32
  fullName: ERC.ThreadInfo.Context32
  type: Field
  source:
    id: Context32
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 29
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nx86 CPU Register values.\n"
  example: []
  syntax:
    content: public CONTEXT32 Context32
    return:
      type: ERC.Structures.CONTEXT32
    content.vb: Public Context32 As CONTEXT32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.ThreadInfo.Context64
  commentId: F:ERC.ThreadInfo.Context64
  id: Context64
  parent: ERC.ThreadInfo
  langs:
  - csharp
  - vb
  name: Context64
  nameWithType: ThreadInfo.Context64
  fullName: ERC.ThreadInfo.Context64
  type: Field
  source:
    id: Context64
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 33
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nx64 CPU Register values.\n"
  example: []
  syntax:
    content: public CONTEXT64 Context64
    return:
      type: ERC.Structures.CONTEXT64
    content.vb: Public Context64 As CONTEXT64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.ThreadInfo.Get_Context
  commentId: M:ERC.ThreadInfo.Get_Context
  id: Get_Context
  parent: ERC.ThreadInfo
  langs:
  - csharp
  - vb
  name: Get_Context()
  nameWithType: ThreadInfo.Get_Context()
  fullName: ERC.ThreadInfo.Get_Context()
  type: Method
  source:
    id: Get_Context
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 95
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nGets the register values of a thread and populates the CONTEXT structs. Should only be used on a suspended thread, results on an active thread are unreliable.\n"
  example: []
  syntax:
    content: public ErcResult<string> Get_Context()
    return:
      type: ERC.ErcResult{System.String}
      description: Returns an ErcResult, the return value can be ignored, the object should only be checked for error values
    content.vb: Public Function Get_Context As ErcResult(Of String)
  overload: ERC.ThreadInfo.Get_Context*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.ThreadInfo.GetSehChain
  commentId: M:ERC.ThreadInfo.GetSehChain
  id: GetSehChain
  parent: ERC.ThreadInfo
  langs:
  - csharp
  - vb
  name: GetSehChain()
  nameWithType: ThreadInfo.GetSehChain()
  fullName: ERC.ThreadInfo.GetSehChain()
  type: Method
  source:
    id: GetSehChain
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 506
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nGets the current SEH chain for the process.\n"
  example: []
  syntax:
    content: public List<Tuple<IntPtr, IntPtr>> GetSehChain()
    return:
      type: System.Collections.Generic.List{System.Tuple{System.IntPtr,System.IntPtr}}
      description: Returns a list of IntPtr containing the SEH chain
    content.vb: Public Function GetSehChain As List(Of Tuple(Of IntPtr, IntPtr))
  overload: ERC.ThreadInfo.GetSehChain*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.ThreadInfo.GetTeb
  commentId: M:ERC.ThreadInfo.GetTeb
  id: GetTeb
  parent: ERC.ThreadInfo
  langs:
  - csharp
  - vb
  name: GetTeb()
  nameWithType: ThreadInfo.GetTeb()
  fullName: ERC.ThreadInfo.GetTeb()
  type: Method
  source:
    id: GetTeb
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 543
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nGets the Thread environment block of the current thread.\n"
  example: []
  syntax:
    content: public TEB GetTeb()
    return:
      type: ERC.Structures.TEB
      description: Returns a TEB struct
    content.vb: Public Function GetTeb As TEB
  overload: ERC.ThreadInfo.GetTeb*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ERC.ThreadInfo.ToString
  commentId: M:ERC.ThreadInfo.ToString
  id: ToString
  parent: ERC.ThreadInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ThreadInfo.ToString()
  fullName: ERC.ThreadInfo.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\Andy\Documents\GitHub\ERC.net\ERC\Thread_Info.cs
    startLine: 556
  assemblies:
  - ERC.Net
  namespace: ERC
  summary: "\nGets information specific to the current thread and returns it as a string.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: Returns a string
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: ERC.ThreadInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: ERC
  commentId: N:ERC
  name: ERC
  nameWithType: ERC
  fullName: ERC
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ERC.ThreadInfo.ThreadHandle*
  commentId: Overload:ERC.ThreadInfo.ThreadHandle
  name: ThreadHandle
  nameWithType: ThreadInfo.ThreadHandle
  fullName: ERC.ThreadInfo.ThreadHandle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: ERC.ThreadInfo.ThreadID*
  commentId: Overload:ERC.ThreadInfo.ThreadID
  name: ThreadID
  nameWithType: ThreadInfo.ThreadID
  fullName: ERC.ThreadInfo.ThreadID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ERC.Structures.CONTEXT32
  commentId: T:ERC.Structures.CONTEXT32
  parent: ERC.Structures
  name: CONTEXT32
  nameWithType: CONTEXT32
  fullName: ERC.Structures.CONTEXT32
- uid: ERC.Structures
  commentId: N:ERC.Structures
  name: ERC.Structures
  nameWithType: ERC.Structures
  fullName: ERC.Structures
- uid: ERC.Structures.CONTEXT64
  commentId: T:ERC.Structures.CONTEXT64
  parent: ERC.Structures
  name: CONTEXT64
  nameWithType: CONTEXT64
  fullName: ERC.Structures.CONTEXT64
- uid: ERC.ThreadInfo.Get_Context*
  commentId: Overload:ERC.ThreadInfo.Get_Context
  name: Get_Context
  nameWithType: ThreadInfo.Get_Context
  fullName: ERC.ThreadInfo.Get_Context
- uid: ERC.ErcResult{System.String}
  commentId: T:ERC.ErcResult{System.String}
  parent: ERC
  definition: ERC.ErcResult`1
  name: ErcResult<String>
  nameWithType: ErcResult<String>
  fullName: ERC.ErcResult<System.String>
  nameWithType.vb: ErcResult(Of String)
  fullName.vb: ERC.ErcResult(Of System.String)
  name.vb: ErcResult(Of String)
  spec.csharp:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ErcResult`1
  commentId: T:ERC.ErcResult`1
  name: ErcResult<T>
  nameWithType: ErcResult<T>
  fullName: ERC.ErcResult<T>
  nameWithType.vb: ErcResult(Of T)
  fullName.vb: ERC.ErcResult(Of T)
  name.vb: ErcResult(Of T)
  spec.csharp:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ERC.ErcResult`1
    name: ErcResult
    nameWithType: ErcResult
    fullName: ERC.ErcResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ThreadInfo.GetSehChain*
  commentId: Overload:ERC.ThreadInfo.GetSehChain
  name: GetSehChain
  nameWithType: ThreadInfo.GetSehChain
  fullName: ERC.ThreadInfo.GetSehChain
- uid: System.Collections.Generic.List{System.Tuple{System.IntPtr,System.IntPtr}}
  commentId: T:System.Collections.Generic.List{System.Tuple{System.IntPtr,System.IntPtr}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Tuple<IntPtr, IntPtr>>
  nameWithType: List<Tuple<IntPtr, IntPtr>>
  fullName: System.Collections.Generic.List<System.Tuple<System.IntPtr, System.IntPtr>>
  nameWithType.vb: List(Of Tuple(Of IntPtr, IntPtr))
  fullName.vb: System.Collections.Generic.List(Of System.Tuple(Of System.IntPtr, System.IntPtr))
  name.vb: List(Of Tuple(Of IntPtr, IntPtr))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ERC.ThreadInfo.GetTeb*
  commentId: Overload:ERC.ThreadInfo.GetTeb
  name: GetTeb
  nameWithType: ThreadInfo.GetTeb
  fullName: ERC.ThreadInfo.GetTeb
- uid: ERC.Structures.TEB
  commentId: T:ERC.Structures.TEB
  parent: ERC.Structures
  name: TEB
  nameWithType: TEB
  fullName: ERC.Structures.TEB
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ERC.ThreadInfo.ToString*
  commentId: Overload:ERC.ThreadInfo.ToString
  name: ToString
  nameWithType: ThreadInfo.ToString
  fullName: ERC.ThreadInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
